<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShellBrowser</name>
    </assembly>
    <members>
        <member name="T:Jam.Shell.AddBaseItemEventArgs">
            <summary>
            The AddSystemListItemEventArgs contains data for the <see cref="E:Jam.Shell.ShellSystemList.AddItem"/> event.
            </summary>
        </member>
        <member name="T:Jam.Shell.AddItemEventArgsBase`1">
            <summary>
            This is the base class for <see cref="T:Jam.Shell.AddItemEventArgs"/> and 
            <see cref="T:Jam.Shell.AddFileItemEventArgs"/>
            </summary>
            <typeparam name="LIST_ITEM"></typeparam>
        </member>
        <member name="T:Jam.Shell.ItemEventArgs`1">
            <summary>
            Holds the Item for any item event, see also <see cref="T:Jam.Shell.AddItemEventArgsBase`1"/>.
            </summary>
            <typeparam name="LIST_ITEM">The list item type, derived from <see cref="T:Jam.Shell.IListBaseItem"/></typeparam>
        </member>
        <member name="M:Jam.Shell.ItemEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.ShellListBaseItem"/> object, which contains information about the item, which should be added to the <see cref="T:Jam.Shell.ShellListView"/>/<see cref="T:Jam.Shell.FileList"/>.</param>
        </member>
        <member name="P:Jam.Shell.ItemEventArgs`1.Item">
            <summary>
            <see cref="T:Jam.Shell.ShellListBaseItem"/> object, which contains information about the item, which should be added to the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddItemEventArgsBase`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the class.
            <see cref="T:Jam.Shell.AddItemEventArgs"/> and <see cref="T:Jam.Shell.AddFileItemEventArgs"/> classes.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.ShellListBaseItem"/> object, which contains information about the item, which should be added to the <see cref="T:Jam.Shell.ShellListView"/>/<see cref="T:Jam.Shell.FileList"/>.</param>
        </member>
        <member name="P:Jam.Shell.AddItemEventArgsBase`1.CanAdd">
            <summary>
            With the CanAdd variable it can be decided individually, which items should be shown in the <see cref="T:Jam.Shell.ShellListView"/>/<see cref="T:Jam.Shell.FileList"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddBaseItemEventArgs.#ctor(Jam.Shell.BaseShellItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.ShellSystemListItem"/> object, which contains information about the item, 
            which should be added to the <see cref="T:Jam.Shell.ShellListView"/>/<see cref="T:Jam.Shell.FileList"/>.</param>
        </member>
        <member name="T:Jam.Shell.ExplorerBrowser">
            <summary>
            This component embeds the native windows ExplorerBrowser control into a .net component.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.ICommDlgBrowser2">
            <summary>
            The ICommDlgBrowser interface. We do not marshal the IShellView interface since we already
            hold a reference to it.
            The PreserveSig attribute is important for things to work.
            http://msdn.microsoft.com/en-us/library/bb776136(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.OnDefaultCommand(System.IntPtr)">
            <summary>Called when a user double-clicks in the view or presses the ENTER key.</summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.OnStateChange(System.IntPtr,System.UInt32)">
            <summary>Called after a state, identified by the uChange parameter, has changed in the IShellView interface.</summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>Allows the common dialog box to filter objects that the view displays.</summary>
            <param name="ppshv"></param>
            <param name="pidl"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.Notify(System.IntPtr,System.UInt32)">
            <summary>
            Called by a Shell view to notify the common dialog box hosting it that an event has occurred.
            </summary>
            <param name="ppshv"></param>
            <param name="dwNotifyType"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.GetDefaultMenuText(System.IntPtr,System.String,System.Int32)">
            <summary>
            Called by the Shell view to get the default shortcut menu text.
            </summary>
            <param name="ppshv"></param>
            <param name="pszText"></param>
            <param name="cchMax"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.GetViewFlags(System.UInt32@)">
            <summary>
            Called when the view must determine if special customization needs to be made for the common dialog browser.
            </summary>
            <param name="pdwFlags"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IShellControl">
            <summary>
            Interface that all shell controls implement.
            </summary>
            <seealso cref="T:Jam.Shell.ShellListView"/>
            <seealso cref="T:Jam.Shell.ShellTreeView"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents. </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.FullRefresh">
            <summary>
            Triggers a full refresh for all connected controls.
            </summary>
            <seealso cref="M:Jam.Shell.ShellListView.FullRefresh"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.FullRefresh"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.SmartRefresh">
            <summary>
            Triggers a smart refresh for all connected controls.
            </summary>
            <seealso cref="M:Jam.Shell.ShellListView.SmartRefresh"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.SmartRefresh"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed folder in all connected controls.
            </summary>
            <param name="p_ItemIdList">Contains the information of the new path.</param>
            <seealso cref="M:Jam.Shell.ShellListView.FolderChanged(Jam.Shell.ItemIdList)"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed file in all connected controls.
            </summary>
            <param name="p_ItemIdList">Contains the absolute ItemIdList of the new file.</param>
            <seealso cref="M:Jam.Shell.ShellListView.SelectedFileChange(Jam.Shell.ItemIdList)"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.SelectedFileChange(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.GoUp">
            <summary>
            Move in all connected controls from the current to the parent folder.
            </summary>
            <returns>Returns, if the change of the folder was successfull.</returns>
            <seealso cref="M:Jam.Shell.ShellListView.GoUp"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.GoUp"/>
        </member>
        <member name="P:Jam.Shell.IShellControl.ShellControlConnector">
            <summary>
            Provides read/write access to a <see cref="P:Jam.Shell.IShellControl.ShellControlConnector"/> instance.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ExplorerBrowser">
            <summary>
            The ComObject that is used internally
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_FolderView">
            <summary>
            Holds the IFolderView interface for the ExplorerBrowser instance.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ShellView">
            <summary>
            The current ShellView interface of the ExplorerBrowser instance.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ExplorerBrowserHandle">
            <summary>
            The hWnd of the ExplorerBrowser-Control
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ShellTreeHandle">
            <summary>
            The hWnd of the TreeView32 in ExplorerBrowserControl
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ShellViewHandle">
            <summary>
            The hWnd of the ShellView in ExplorerBrowserControl
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ShellBrowser">
            <summary>
            ShellBrowser instance holding the contents of the control
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_FolderSettings">
            <summary>
            Contains the current FolderSettings of the control
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_Items">
            <summary>
            Holds the Items of currently active Folder
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_SelectedItems">
            <summary>
            Holds the selected Items of the currently active folder
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_VisiblePanes">
            <summary>
            <see cref="P:Jam.Shell.ExplorerBrowser.VisiblePanes"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ThumbnailSize">
            <summary>
            IconSize that the user has set in designer
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ExplorerBrowser"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.ProcessTabKey(System.Boolean)">
            <summary>Process the tab key described by forward. </summary>
            <param name="forward">true to forward. </param>
            <returns>true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnCreateControl">
            <summary>
            Creates the internal ComObject and initializes it
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Cleans up the explorer browser events+object when the window is being taken down.
            </summary>
            <param name="e">An EventArgs that contains event data.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Dispose(System.Boolean)">
            <summary>
            Disposes the instance.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.BeginUpdate">
            <summary>
            Prevent that a FullRefresh is called until EndUpdate is called. Every call of BeginUpdate() increments an UpdateCounter variable.
            </summary>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.EndUpdate"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.EndUpdate">
            <summary>
            End the updating mode. If a FullRefresh is required it is executed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.GetViewModeAndIconSizeFromControl(System.Boolean)">
            <summary>
            Updates the internal viewMode and iconsize from the control used
            </summary>
            <param name="forceUpdate">overwrites viewMode "Auto"</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SetFolderIdListInternal(Jam.Shell.ItemIdList)">
            <summary>
            Sets the ShellBrowser's folderIdList. Method does not open the folder in any control and does not issue any events. 
            Needed to avoid double actions in the SystemShellView
            </summary>
            <param name="value">ItemIdList of the folder to be set</param>
            <returns>true if a new and valid ItemIdList has been passed, false if the ItemIdList has not been set because it is invalid, null or the same</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.NotifyFolderChange">
            <summary>
            Notifies connected controls that the path was changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.GetItemCollection(Jam.Shell.Com.IFolderView,Jam.Shell.Com.SVGIO)">
            <summary>
            Retreives the Items in the ExplorerBrowser control.
            </summary>
            <param name="folderView">The IFolderView instance to use</param>
            <param name="itemType">Specifies what items to fetch: SVGIO_ALLVIEW for all items, SVGIO_SELECTION for selected items</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Open">
            <summary>
            Opens the ShellBrowser's folder
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.KeyUp event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnResize(System.EventArgs)">
            <summary>
            Resizes the component to the new ClientArea.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnAddItem(Jam.Shell.AddBaseItemEventArgs)">
            <summary>
            Issues the <see cref="E:Jam.Shell.ExplorerBrowser.AddItem"/> event.
            </summary>
            <param name="eventArgs">The event arguments that will be passed as a paramteter</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnBeforeFullRefresh">
            <summary>
            Issues the <see cref="E:Jam.Shell.ExplorerBrowser.BeforeFullRefresh"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnPathChanged">
            <summary>
            Issues the <see cref="E:Jam.Shell.ExplorerBrowser.PathChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnSelectionChanged">
            <summary>
            Triggers the <see cref="E:Jam.Shell.ExplorerBrowser.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnViewChanged">
            <summary>
            This method is called if the view of the control changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.IndexOf(Jam.Shell.ItemIdList)">
            <summary>
            Searches for the index of the ItemIdList within the shell-list.
            This function has O(n) complexity, since it iterates through all items within the list
            </summary>
            <param name="pItemIdList">The item id list that will be searched</param>
            <returns>The index of the item, -1 if the item is not in the list</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.IndexOf(System.String)">
            <summary>
            Searches for the index of the given path within the shell-list.
            This function has O(n) complexity, since it iterates through all items within the list
            </summary>
            <param name="pPath">The path that will be searched</param>
            <returns>The index of the item, -1 if the item is not in the list</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)">
            <summary>
            Selects the item at the position passed by index.
            </summary>
            <param name="index">The index of the item to be selected</param>
            <param name="add">if set to <c>true</c> the current selection is kept, else it is overwritten.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32)">
            <summary>
            Selects the item at the position passed by index. Keeps the existing selection.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.EnsureVisible(System.Int32)">
            <summary>
            Scrolls to the item at the specified index.
            </summary>
            <param name="index">The index of the item to be shown.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.DeselectAll">
            <summary>
            Deselect all items in the listview
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.FullRefresh">
            <summary>
            Reloads the component
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnSelected(System.String)">
            <summary>
            Invokes a <see cref="T:Jam.Shell.ShellCommand"/> on the selected item(s) of the ListView.
            </summary>
            <param name="command">The shell command to use on the selected item(s) of the view</param>
            <returns>True, if the command has been processed</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnFolder(System.String)">
            <summary>
            Use InvokeCommandOnFolder to execute a command of the context menu for the listed folder. 
            <seealso cref="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnSelected(System.String)"/>
            </summary>
            <param name="command">The <see cref="T:Jam.Shell.ShellCommand"/> to use</param>
            <returns>true, if the command has successfully been processed</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.IsColumnAvailable(Jam.Shell.SHCOLUMNID)">
            <summary>
            Determines whether the <see cref="T:Jam.Shell.SHCOLUMNID"/> passed is supported by the current view, no matter if it is currently displayed or not.
            Not supported on Windows XP.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true if the column is available, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SmartRefresh">
            <summary>
            Triggers a smart refresh for all connected controls.
            </summary>
            <seealso cref="M:Jam.Shell.ShellListView.SmartRefresh"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.SmartRefresh"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed folder in all connected controls.
            </summary>
            <param name="p_ItemIdList">Contains the information of the new path.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Called when the selected file was changed in a connected control.
            Not handled by this control
            </summary>
            <param name="p_ItemIdList">Contains the absolute ItemIdList of the new file.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.GoUp">
            <summary>
            Move in all connected controls from the current to the parent folder.
            </summary>
            <returns>
            Returns, if the change of the folder was successfull.
            </returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.FolderIdList">
            <summary>
            Get or set the ItemIdList of the folder the component currently displays respectively
            the folder the component shall display.
            <seealso cref="P:Jam.Shell.ExplorerBrowser.Path"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Path">
            <summary>
            This property allows you to get or set the folder, which contents should be displayed. If you want to display a non file system folder, use the SpecialFolder property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ShowErrorMessages">
            <summary>
            If set to true the ShellList component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.SpecialFolder">
            <summary>
            SpecialFolder allows you to set or get the type of the currently listed folder. 
            You can use the ShellFolder constants here.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected 
            is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.View">
            <summary>
            This property allows to set the different view modes of the
            windows explorer listview control. In comparison to the 
            <see cref="T:Jam.Shell.ShellListView"/> the ShellSystemList provides a greater 
            variety of possibilities.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ThumbnailSize">
            <summary>
            Gets or sets the size of the icons that is applied when <see cref="P:Jam.Shell.ExplorerBrowser.View"/> is set to <see cref="F:Jam.Shell.Com.FolderViewMode.Thumbnail"/>
            </summary>
            <value>
            The size of the icon.
            </value>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.VisiblePanes">
            <summary>
            Gets or sets the panes that are/should be visible. <see cref="T:Jam.Shell.ExplorerPane"/> for values.
            Flags can be added by "|", i.e. VisiblePanes |= ExplorerPane.PreviewPane removed by VisiblePanes &amp;= ~ExplorerPane.PreviewPane
            Not all panes are currently supported.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ViewFolderFlags">
            <summary>
            Get or set the <see cref="T:Jam.Shell.FolderFlags"/> that specify how the ListView displays
            its content. The flags can be or'ed together, ie. "FolderFlags.NoColumnHeader | FolderFlags.AbbreviatedNames"
            in the designer this is specified by a comma-separation
            Not all of the Flags are supported currently
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.AutoCheckSelect">
            <summary>
            Gets or sets a value indicating whether the control displays checkboxes
            that can be used to set the selection
            </summary>
            <value>
              <c>true</c> if checkboxes should be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ShowHeader">
            <summary>
            Gets or sets a value indicating if column headers should be shown.
            </summary>
            <value>
            The show header.
            </value>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ContentFilter">
            <summary>
            A ShellItemFilter specifiying filter criteria for this instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Items">
            <summary>
            Contains the Items in the ExplorerBrowser.
            The collection is gathered upon first retreival. It is updated internally when the items change, i.e. by moving to another folder.
            The items returned may be sorted differently than the view.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.SelectedItems">
            <summary>
            Contains the selected item collection in the ExplorerBrowser.
            The collection is gathered upon first retreival. It is updated internally when the items change, i.e. by moving to another folder.
            The items returned may be sorted differently than the view.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.SelectedItemIdList">
            <summary>
            Gets or sets the selected item identifier list. A previous selection is removed.
            </summary>
            <value>
            An absolute ItemIdList of the element to be selected.
            </value>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.AddItem">
            <summary>
            This event occurs if a ListItem is to be added to the list.
            If the "CanAdd" property of the event args is set to false in an 
            event handler, the item will not be added to the listview.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.SelectionChanged">
            <summary>
            This event occurs, if a selection changed in the listview
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.BeforeFullRefresh">
            <summary>
            This event occurs right before the <see cref="M:Jam.Shell.ExplorerBrowser.FullRefresh"/> method is called.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.PathChanged">
            <summary>
            This event occurs if the path changed that the control displays.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.ViewChanged">
            <summary>
            This event happens on view changes of the control.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.NavigationComplete">
            <summary>
            Occurs when navigating to a folder has been completed successfully.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.NavigationFailed">
            <summary>
            Occurs when navigating to a folder has failed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.DefaultAction">
            <summary>
            This event occurs if the user triggers the default command.
            e.g. double clicked on an item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Columns">
            <summary>
            Gets the <see cref="T:Jam.Shell.ShellViewColumns"/> the control currently displays. Not supported on Windows XP.
            </summary>
            <value>
            An <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing the visible columns.
            </value>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source="CodeExamples.cs" region="ShellViewColumns_AddColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_SetColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_ShowColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_RemoveColumns" lang="C#"/> 
            </example>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.AllColumns">
            <summary>
            Gets a list of all columns that are supported in the current view. These depend on what the control currently displays. Not supported on Windows XP.
            </summary>
            <value>
            A <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing all columns supported by the current view. 
            </value>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.BackColor">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ForeColor">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.BackgroundImage">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.BackgroundImageLayout">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Font">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <returns>true to indicate the component has completed initialization; otherwise, false. </returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Initialize(System.IntPtr,Jam.Shell.RECT@,Jam.Shell.Com.FolderSettings@)">
            <summary>
            Prepares the browser to be navigated.
            </summary>
            <param name="hwndParent">A handle to the owner window or control.</param>
            <param name="prc">A pointer to a RECT containing the coordinates of the bounding rectangle 
            the browser will occupy. The coordinates are relative to hwndParent. If this parameter is NULL,
            then method IExplorerBrowser::SetRect should subsequently be called.</param>
            <param name="pfs">A pointer to a FOLDERSETTINGS structure that determines how the folder will be
            displayed in the view. If this parameter is NULL, then method IExplorerBrowser::SetFolderSettings
            should be called, otherwise, the default view settings for the folder are used.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Destroy">
            <summary>
            Destroys the browser.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetRect(System.IntPtr@,Jam.Shell.RECT)">
            <summary>
            Sets the size and position of the view windows created by the browser.
            </summary>
            <param name="phdwp">A pointer to a DeferWindowPos handle. This paramater can be NULL.</param>
            <param name="rcBrowser">The coordinates that the browser will occupy.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetPropertyBag(System.String)">
            <summary>
            Sets the name of the property bag.
            </summary>
            <param name="pszPropertyBag">A pointer to a constant, null-terminated, Unicode string that contains
            the name of the property bag. View state information that is specific to the application of the 
            client is stored (persisted) using this name.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetEmptyText(System.String)">
            <summary>
            Sets the default empty text.
            </summary>
            <param name="pszEmptyText">A pointer to a constant, null-terminated, Unicode string that contains 
            the empty text.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetFolderSettings(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Sets the folder settings for the current view.
            </summary>
            <param name="pfs">A pointer to a FOLDERSETTINGS structure that contains the folder settings 
            to be applied.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Advise(System.IntPtr,System.UInt32@)">
            <summary>
            Initiates a connection with IExplorerBrowser for event callbacks.
            </summary>
            <param name="psbe">A pointer to the IExplorerBrowserEvents interface of the object to be 
            advised of IExplorerBrowser events</param>
            <param name="pdwCookie">When this method returns, contains a token that uniquely identifies 
            the event listener. This allows several event listeners to be subscribed at a time.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Unadvise(System.UInt32)">
            <summary>
            Terminates an advisory connection.
            </summary>
            <param name="dwCookie">A connection token previously returned from IExplorerBrowser::Advise.
            Identifies the connection to be terminated.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetOptions(Jam.Shell.ExplorerBrowserOptions)">
            <summary>
            Sets the current browser options.
            </summary>
            <param name="dwFlag">One or more EXPLORER_BROWSER_OPTIONS flags to be set.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.GetOptions(Jam.Shell.ExplorerBrowserOptions@)">
            <summary>
            Gets the current browser options.
            </summary>
            <param name="pdwFlag">When this method returns, contains the current EXPLORER_BROWSER_OPTIONS 
            for the browser.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.BrowseToIDList(System.IntPtr,System.UInt32)">
            <summary>
            Browses to a pointer to an item identifier list (PIDL)
            </summary>
            <param name="pidl">A pointer to a const ITEMIDLIST (item identifier list) that specifies an object's 
            location as the destination to navigate to. This parameter can be NULL.</param>
            <param name="uFlags">A flag that specifies the category of the pidl. This affects how 
            navigation is accomplished</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.BrowseToObject(System.Object,System.UInt32)">
            <summary>
            Browse to an object
            </summary>
            <param name="punk">A pointer to an object to browse to. If the object cannot be browsed, 
            an error value is returned.</param>
            <param name="uFlags">A flag that specifies the category of the pidl. This affects how 
            navigation is accomplished. </param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.FillFromObject(System.Object,System.Int32)">
            <summary>
            Creates a results folder and fills it with items.
            </summary>
            <param name="punk">An interface pointer on the source object that will fill the IResultsFolder</param>
            <param name="dwFlags">One of the EXPLORER_BROWSER_FILL_FLAGS</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.RemoveAll">
            <summary>
            Removes all items from the results folder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.GetCurrentView(System.Guid@,System.IntPtr@)">
            <summary>
            Gets an interface for the current view of the browser.
            </summary>
            <param name="riid">A reference to the desired interface ID.</param>
            <param name="ppv">When this method returns, contains the interface pointer requested in riid. 
            This will typically be IShellView or IShellView2. </param>
            <returns></returns>
        </member>
        <member name="F:Jam.Shell.CM_COLUMNINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Jam.Shell.CM_COLUMNINFO.dwMask">
            DWORD->unsigned int
        </member>
        <member name="F:Jam.Shell.CM_COLUMNINFO.dwState">
            DWORD->unsigned int
        </member>
        <member name="F:Jam.Shell.CM_COLUMNINFO.uWidth">
            UINT->unsigned int
        </member>
        <member name="F:Jam.Shell.CM_COLUMNINFO.uDefaultWidth">
            UINT->unsigned int
        </member>
        <member name="F:Jam.Shell.CM_COLUMNINFO.uIdealWidth">
            UINT->unsigned int
        </member>
        <member name="F:Jam.Shell.CM_COLUMNINFO.wszName">
            WCHAR[]
        </member>
        <member name="T:Jam.Shell.ExplorerShowHeader">
            <summary>
            Values for property <see cref="P:Jam.Shell.ExplorerBrowser.ShowHeader"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerShowHeader.Always">
            <summary>
            Column header is always visible
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerShowHeader.Never">
            <summary>
            Column header is hidden
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerShowHeader.Auto">
            <summary>
            Column header is visible in viewmode details only.
            </summary>
        </member>
        <member name="T:Jam.Shell.ExplorerPane">
            <summary>
            Contains flags for the panes that can be used in the Explorer window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.Commands">
            <summary>
            Commands module along the top of the Windows Explorer window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.CommandsOrganize">
            <summary>
            Organize menu within the commands module.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.CommandsView">
            <summary>
            View menu within the commands module.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.DetailsPane">
            <summary>
            Pane showing metadata along the bottom of the Windows Explorer window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.PreviewPane">
            <summary>
            Pane on the right of the Windows Explorer window that shows a large reading preview of the file.
            Only works if DetailsPane is not visible.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.Navigation">
            <summary>
            The pane on the left side of the Windows Explorer window that hosts the folders tree and Favorites.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.AddressBar">
            <summary>
            The Addressbar displayed on the top of the screen. 
            </summary>
        </member>
        <member name="T:Jam.Shell.IO.SystemIOFile">
            <summary>
            Class implementing IFile, IDirectory using methods from System.IO
            </summary>
        </member>
        <member name="T:Jam.Shell.IO.IOFactory">
            <summary>
            Factory class creating the right class objects to use as IFile, IDirectory, etc.
            </summary>
        </member>
        <member name="M:Jam.Shell.IO.File.Exists(System.String)">
            <summary>
            See <see cref="M:System.IO.File.Exists(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.Delete(System.String)">
            <summary>
            Deletes the specified path. See <see cref="M:System.IO.File.Delete(System.String)"/>
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Jam.Shell.IO.File.Copy(System.String,System.String)">
            <summary>
            Copies the specified source. See <see cref="M:System.IO.File.Copy(System.String,System.String)"/>
            </summary>
            <param name="src">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Jam.Shell.IO.File.Move(System.String,System.String)">
            <summary>
            Moves the specified source. See <see cref="M:System.IO.File.Move(System.String,System.String)"/>
            </summary>
            <param name="src">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Jam.Shell.IO.File.Create(System.String)">
            <summary>
            Creates the specified path. See <see cref="M:System.IO.File.Create(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens the specified path. See <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)"/>
            </summary>
            <param name="path">The path.</param>
            <param name="filemode">The filemode.</param>
            <param name="fileAccess">The file access.</param>
            <param name="fileshare">The fileshare.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetAttributes(System.String)">
            <summary>
            Gets the attributes. See <see cref="M:System.IO.File.GetAttributes(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetCreationTime(System.String)">
            <summary>
            Gets the creation time. See <see cref="M:System.IO.File.GetCreationTime(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetLastAccessTime(System.String)">
            <summary>
            Gets the last access time. See <see cref="M:System.IO.File.GetLastAccessTime(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetLastWriteTime(System.String)">
            <summary>
            Gets the last write time. See <see cref="M:System.IO.File.GetLastWriteTime(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetSize(System.String)">
            <summary>
            Gets the file size in byte. Not part of the normal System.IO.File 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.Exists(System.String)">
            <summary>
            See <see cref="M:System.IO.Directory.Exists(System.String)"/>
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.Delete(System.String,System.Boolean)">
            <summary>
            Deletes the specified path. See <see cref="M:System.IO.Directory.Delete(System.String,System.Boolean)"/>
            </summary>
            <param name="path">The path.</param>
            <param name="recursive">if true, recursively deletes subelements</param>
        </member>
        <member name="M:Jam.Shell.IO.Directory.CreateDirectory(System.String)">
            <summary>
            Creates the directory. See <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.GetFiles(System.String)">
             <summary>
            See <see cref="M:System.IO.Directory.GetFiles(System.String)"/>
             </summary>
             <param name="path">The path.</param>
             <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.GetFileSystemEntries(System.String)">
            <summary>
            See <see cref="M:System.IO.Directory.GetFileSystemEntries(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.GetDirectories(System.String)">
            <summary>
            See <see cref="M:System.IO.Directory.GetDirectories(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.SetCurrentDirectory(System.String)">
            <summary>
            Sets the current directory. Even in AlphaFS only works with short paths!!!
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Jam.Shell.IO.Path.Combine(System.String,System.String)">
            <summary>
            See <see cref="M:System.IO.Path.Combine(System.String,System.String)"/>
            </summary>
            <param name="path1">The path1.</param>
            <param name="path2">The path2.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetDirectoryName(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetDirectoryName(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetExtension(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetExtension(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetFileName(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetFileName(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetPathRoot(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetPathRoot(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetTempPath">
            <summary>
            See <see cref="M:System.IO.Path.GetTempPath"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.IsPathRooted(System.String)">
            <summary>
             See <see cref="M:System.IO.Path.IsPathRooted(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.JamBaseShellListView">
            <summary>
            The base listview class.
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemListView">
            <summary>
            This class provides the SystemStyles of Vista and other things common to the ShellListView and ShellFileList
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_UseSystemStyles">
            <summary>
            If false the component won't use the vista styles.
            <see cref="P:Jam.Shell.SystemListView.UseSystemStyles"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_UseSystemFont">
            <summary>
            If true the component will use the default system font.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_BackgroundContextMenu">
            <summary>
            The ContextMenuStrip that the component displays if no item is below the cursor on right mouse button click.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_headerRect">
            <summary>
            The area occupied by the ListView header.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.#ctor">
            <summary>
            Constructs a SystemListView
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.PerformSubItemHitTest(Jam.Shell.LVHITTESTINFO@)">
            <summary>
            Determines on what subitem the mouse points to
            </summary>
            <param name="lvHitTestInfo"></param>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnItemShowToolTip(Jam.Shell.SystemListView.ShowToolTipEventArgs)">
            <summary>
            Raises the item hover event
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>
            This method is called if a notification event is performed on the message
            pump <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"/>
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnHeaderRightClick">
            <summary>
            Raises the HeaderRightClick-Event
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.EnableSystemStyles">
            <summary>
            Sets system specific behaviour,
            i.e. FullRowSelect in Vista and upwards.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.PreserveSystemStyle">
            <summary>
            This method preserves the Windows Vista lightblue selection line if <see cref="P:Jam.Shell.SystemListView.UseSystemStyles"/> is on. 
            The Setting is lost if e.g. a column is clicked to sort things.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.DisplayBackgroundContextMenu(System.Drawing.Point)">
            <summary>
            Shows the  <see cref="P:Jam.Shell.SystemListView.BackgroundContextMenu"/> if it is non-null.
            </summary>
            <param name="pLocation">The location to display the contextmenu</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnHandleCreated(System.EventArgs)">
            <summary>
            Preserves the system styles of the ListView if the window handle has been recreated.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.SetColumnBitmap(System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Set the sort icon among the current sort order in the passed column.
            </summary>
            <param name="ColIndex">Contains the index of the column, where the sort icon should be added.</param>
            <param name="SortOrder">Contains information about the sort order, to get the correct sort icon from the operating system.</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.GetColumnOrder">
            <summary>
            Retrieve the order in which columns appear.
            </summary>
            <returns>Current display order of column indices</returns>
        </member>
        <member name="M:Jam.Shell.SystemListView.SetColumnOrder(System.Int32[])">
            <summary>
            Sets the order in which columns appear.
            </summary>
            <param name="newOrder">The new display order of the column indices.</param>
            <returns>True if setting the ColumnOrder was successful.</returns>
        </member>
        <member name="M:Jam.Shell.SystemListView.GetSubItemBounds(System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            Retrieve the bounds of a ListViewSubItem
            </summary>
            <param name="Item">The Item containing the SubItem</param>
            <param name="SubItem">Index of the SubItem</param>
            <returns>Subitem's bounds as a rectangle</returns>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnBeforeInvokeCommandOnSelected(Jam.Shell.InvokeCommandEventArgs)">
            <summary>
            Calls the BeforeInvokeCommandOnSelected event if it is assigned.
            </summary>
            <param name="p_EventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.SetFont(System.Drawing.Font)">
            <summary>
            Sets the font without adjusting other properties.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Jam.Shell.SystemListView.HeaderRectangle">
            <summary>
            Returns the area occupied by the ListView header.
            </summary>
        </member>
        <member name="E:Jam.Shell.SystemListView.ItemShowToolTip">
            <summary>
            This event occurs if the user moved the mouse over a listview item so a tooltip can appear,
            this event also occurs if no <see cref="P:System.Windows.Forms.ListViewItem.ToolTipText"/> is set, it can be added
            dynamically.
            </summary>
        </member>
        <member name="E:Jam.Shell.SystemListView.HeaderRightClick">
            <summary>
            The event is triggered when the user right clicks on the column headers.
            </summary>
        </member>
        <member name="E:Jam.Shell.SystemListView.BeforeInvokeCommandOnSelected">
            <summary>
            Assign this event to be able to control the behaviour of the control
            when the user double-clicks on an item to start the default action
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.CreateParams">
            <summary>
            Overwriting the CreateParams property to set the WS_VISIBLE flag; bug #8960
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.HideSelection">
            <summary>
            Gets or sets a value indicating whether the selected item in the control
            remains highlighted when the control loses focus.
            </summary>
            <returns>true if the selected item does not appear highlighted when the control loses
            focus; false if the selected item still appears highlighted when the control
            loses focus. The default is false for the SystemListView and controls that extend it.
            </returns>
        </member>
        <member name="P:Jam.Shell.SystemListView.BackgroundContextMenu">
            <summary>
            Gets or sets the ContextMenuStrip that is displayed if no item of the 
            listview is under the cursor if the user clicks the right mouse button.
            If this value is null, no ContextMenu is shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.UseSystemStyles">
            <summary>
            Use this property to turn on or off the usage of the system specific design, i.e. enable Vista visual styles of the explorer components.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.UseSystemFont">
            <summary>
            Set this property to true if you want the component to utilize the default system font.
            It is also set to true if the <see cref="P:Jam.Shell.SystemListView.UseSystemStyles"/> property is set.
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemListView.ShowToolTipEventHandler">
            <summary>
            <see cref="E:Jam.Shell.SystemListView.ItemShowToolTip"/> event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Jam.Shell.SystemListView.HeaderRightClickHandler">
            <summary>
            Delegate for the HeaderRightClick event.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:Jam.Shell.SystemListView.ShowToolTipEventArgs">
            <summary>
            Provides data about the ItemShowToolTip event.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.ShowToolTipEventArgs.#ctor(System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            Standard constructor
            </summary>
            <param name="listViewItem"></param>
            <param name="subItemIndex"></param>
        </member>
        <member name="P:Jam.Shell.SystemListView.ShowToolTipEventArgs.Item">
            <summary>
            The zero based index of a Listview item.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.ShowToolTipEventArgs.SubItemIndex">
            <summary>
            Index to the list view sub items
            </summary>
        </member>
        <member name="T:Jam.Shell.IDropTarget">
            <summary>
            Defines a drop target interface for list items.
            <seealso cref="T:Jam.Shell.ShellListItem"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.IDropTarget.IsDropTarget">
            <summary>
            if this property is set to true, then the item is formatted as a highlighted drop target.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetItemCollectionType">
            <summary>
            Gets the type of the Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/> for the inheriting classes.
            </summary>
            <returns>A typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/></returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetSelectedItemCollectionType">
            <summary>
            Gets the type of the Selected Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/> for the inheriting classes.
            </summary>
            <returns>A typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/></returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetColumnHeaderCollectionType">
            <summary>
            Gets the type of the column header collection.
            </summary>
            <returns>JamShellColumnCollection currently, since it is not overwritten by any subclasses.</returns>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ViewState">
            <summary>
            The current ViewState.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_CheckBoxes">
            <summary>
            Indicates whether checkboxes are turned on or off.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_IgnoreChanges">
            <summary>
            Indicates whether changes should be ignored.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellControlConnector">
            <summary>
            The shell control connector.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_IsUpdating">
            <summary>
            Indicates whether the control is currently updating, e.g. during a FullRefresh.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_FullRefreshNeeded">
            <summary>
            This flag indicates whether a FullRefresh is needed because the Columnorder changed and there are CustomColumns involved; bug #10214
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_AutoSizeColumn">
            <summary>
            The auto size column.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortColumnShellIndex">
            <summary>
            The shell index of the sort column. Default is 0 - the name column.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortColumnIndex">
            <summary>
            The current sort order as index of column.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortOrderDirty">
            <summary>
            Redetermine m_SortColumnShellIndex, m_SortColumnIndex. See <see cref="M:Jam.Shell.JamBaseShellListView.UpdateSortColumn"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortOrder">
            <summary>
            The initial sort order.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellBrowser">
            <summary>
            An instance of our ShellBrowser.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellChangeNotifier">
            <summary>
            A readonly instance of a ShellChangeNotifier.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_Initialized">
            <summary>
            The attribute is used by classes deriving from JamBaseShellListView.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_NoFillOnStartup">
            <summary>
            Determines if the control should be filled on startup or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellContextMenu">
            <summary>
            Determines if the ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShowContextMenu">
            <summary>
            Determines if the context menu should be shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ContextMenuStrip">
            <summary>
            The ContextMenuStrip that the component will convert to a ContextMenu instance.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_HeaderContextMenuStrip">
            <summary>
            The context menu that will be shown after the user right clicks on the column headers.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SelectedFiles">
            <summary>
            A collection of the currently selected files.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_AllowDrag">
            <summary>
            Indicates whether dragging items is allowed.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DropItem">
            <summary>
            Stores the drop item.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_IsDropTarget">
            <summary>
            Determines if the control is a drop target or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DropTargetHelper">
            <summary>
            Used to support drag images and Vista style drag cursors.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DraggedDataObject">
            <summary> During a drag and drop operation that origins in this control this member contains the <c>IDataObject</c>. Filled in the ItemDrag method of the control.</summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DroppedDataObject">
            <summary> During a drag and drop operation this member contains the <c>IDataObject</c> that is dragged over the control. Filled in <see cref="E:System.Windows.Forms.Control.DragEnter"/>.</summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_AutomaticRefresh">
            <summary>
            Indicates whether automatic refresh is enabled or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ThumbnailBorderColor">
            <summary>
            The color of the Thumbnail border.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ThumbnailSize">
            <summary>
            The Thumbnail size.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ThumbnailImages">
            <summary>
            The ImageList for the Thumbnail images.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SmallImages">
            <summary>
            The SystemImageListHelper for small images.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_LargeImages">
            <summary>
            The SystemImageListHelper for large images.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DetectRightClick">
            <summary>
            Local variable to detect whether the mouse is clicked or dragged
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DetectLeftClick">
            <summary>
            Local variable to detect whether the mouse is clicked or dragged
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShowInfoToolTips">
            <summary>
            If true, tooltips are shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SlowInfoTip">
            <summary>
            If true, the slow tooltip is used.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ColumnPropertiesCache">
            <summary>
            Cache for the current instance. Stores what columns are shown, their widths etc.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.JamHiddenColumnWidth">
            <summary>
            used to mark hidden columns in the array of saved column widths
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.#ctor">
            <summary>
            Constructor for the JamBaseShellListView.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetScrollPos(System.Boolean)">
            <summary>
            Gets the scroll position of the ListView.
            </summary>
            <param name="pHorizontal">if set to <c>true</c> returns the horizontal scroll position, else the vertical</param>
            <returns>The scroll position of the control or -1 it retrieval fails.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetListViewItemSorter">
            <summary>
            Return an instance of IComparer that should be used for sorting the lists in subclasses
            </summary>
            <returns>object implementing IComparer</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsColumnVisibleByDefault(System.Int32,System.Int32@)">
            <summary>
            Determines whether the column with the specified shellcolumnId is a column shown by default.
            </summary>
            <param name="shellColumnId">The shell column id.</param>
            <param name="columnWidth">Returns the width of the column: > 0 if the column is a default column, else 0</param>
            <returns>
            	<c>true</c> if the column should be shown by default; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InitColumns">
            <summary>
            Initializes the columns.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.AddShellColumn(System.Int32)">
            <summary>
            Adds a shell column to the list view.
            </summary>
            <param name="pShellColumnIndex">The shell column index.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.AddShellColumn(System.Int32,System.Int32)">
            <summary>
            Adds a shell column with the given width to the list view.
            </summary>
            <param name="pShellColumnIndex">The shell column index.</param>
            <param name="pWidth">The width the column should have.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SetColumnVisibility(System.Int32,System.Boolean)">
            <summary>
            Sets the visibility of a column.
            </summary>
            <param name="p_ColIndex">The shell column index. Note: Deleting column 0 is not allowed.</param>
            <param name="visible">True to show the column, false to hide.</param>
            <returns>
            0 or more: the index of the added column. 
            -1: the column was successfully removed. 
            -2: the 'name' column should be removed but thats not allowed.
            -3: the column index was not supported by the current folder.
            </returns>
            <remarks>
            If you don't know the shell column index, you may find it using the function <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)"/>.
            Just loop over the possible 255 columns and compare the returned column title with your wanted column title.
            Note that the column title depends on your system language.
            </remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SetColumnVisibility(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Sets the visibility of a column.
            </summary>
            <param name="p_ColID">The <see cref="T:Jam.Shell.SHCOLUMNID"/>. Note: Deleting the name column is not allowed.</param>
            <param name="visible">True to show the column, false to hide.</param>
            <returns>
            0 or more: the index of the added column. 
            -1: the column was successfully removed. 
            -2: the 'name' column should be removed but thats not allowed.
            </returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
            /// <remarks>
            If you don't know the SHCOLUMNID, you may find it using the function <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)"/> 
            and <see cref="M:Jam.Shell.ShellBrowser.GetShColumnIdFromColumnNumber(System.Int32)"/>.
            Just loop over the possible 255 columns and compare the returned column title with your wanted column title.
            As soon as you found the correct shell column number, use the <see cref="M:Jam.Shell.ShellBrowser.GetShColumnIdFromColumnNumber(System.Int32)"/>
            to convert it into a <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            Note that the column title depends on your system language.
            </remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FinalizeColumnVisibilityChange">
            <summary>
            Finalizes the column visibility change. The sort column is checked and the column order updated.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ShowColumn(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the column with the passed ShellColumnId.
            </summary>
            <param name="pShellColumnId">The <see cref="T:Jam.Shell.SHCOLUMNID"/> representing the column.</param>
            <returns>
            0 or more: the index of the added column.
            -1: column couldn't be inserted.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.UpdateSubitemsAfterColumnGetsVisible(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Loads subitems for a column that has been added at the passed position.
            </summary>
            <param name="p_ColID">The SHColumnID of the changed column.</param>
            <param name="p_LocalIndex">Local index of the column.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.HideColumn(Jam.Shell.SHCOLUMNID)">
            <summary>
            Hides the column with the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">The SHCOLUMNID to hide.</param>
            <returns>
            not used. Currently -2 means that the name column cannot be hidden.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DisplayHeaderContextMenu(System.Object)">
            <summary>
            Empty handler of the HeaderRightClick event. This needs to be implemented by the deriving classes.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SmartRefresh">
            <summary>
            Call a smart refresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FullRefresh">
            <summary>
            Call a full refresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetUIObject(System.Guid)">
            <summary>
            Get the UI object.
            </summary>
            <param name="riid"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GoUp">
            <summary>
            Goes up one directory level.
            </summary>
            <returns>true, if the operation was performed succesfully. false, if the operation could not be perofrmed, which can e.g. happen, if the current folder is the root of the shell namespace.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the selected file should change.
            </summary>
            <param name="p_ItemIdList">The absolute ItemIdList of the newly selected file.</param>
            <seealso cref="M:Jam.Shell.JamBaseShellListView.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Compare(System.Object,System.Object)">
            <summary>
            Override this method to compare objects given the <see cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/>.
            The basic implementation compares the items alphabetically.
            
            If you need to change this, you can start out like this:
            <code source="CodeExamples.cs" region="OverridenListCompare" lang="C#"/>
            </summary>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/>
            <param name="x">First LIST_ITEM</param>
            <param name="y">Second LIST_ITEM, which will be compared with first one.</param>
            <returns>Returns a value less than 0 if x is less than y, 
            0 if x is equal to y and a value greater
            than 0 if x is greater than y.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.RemoveItemFromList(Jam.Shell.ShellListBaseItem)">
            <summary>
            Removes the list element from the list
            </summary>
            <param name="item">a ShellListBaseItem that should be removed.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ListView" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.CleanUpThumbnails">
            <summary>
            This method cleans up the currently loaded thumbnails and created a new image list.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InitThumbnailImageList">
            <summary>
            Inits the thumbnail image list.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ResetItems">
            <summary>
            Resets the items and their subitems.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsCustomColumn(System.Int32)">
            <summary>
            Checks whether the given column index is a custom or shell column
            </summary>
            <param name="index">The index of the column that should be checked (0 for first column)</param>
            <returns>True if it`s a custom column. False if it`s a shell column or we cannot check (because there are no columns)</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.CustomCompare(System.Windows.Forms.ListViewItem,System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            Compares the given items by the content of the subitems at the SortColumn index.
            </summary>
            <remarks>Method is only working correctly if the subitem that is compared is loaded! </remarks>
            <param name="pItem1">The first item.</param>
            <param name="pItem2">The second item</param>
            <param name="pSortOrder">The SortOrder. 1 for Ascending, -1 for Descending.</param>
            <returns>
            Returns -1 if x is less than y, 0 if x is equal to y and 1 if x is greater than y.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ResetColumns">
            <summary>
            Resets the columns to the initial state.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ClearColumns">
            <summary>
            Clears the current columns and the header context menu. Please use this method instead of ListView.Columns.Clear()>.
            </summary> 
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Clear">
            <summary>
            Removes all items and columns from the control.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DoAutoSizeColumn">
            <summary>
            Autosizes the column that is set in <see cref="P:Jam.Shell.JamBaseShellListView.AutoSizeColumn"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetIndexOfShColumnId(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Returns the local index for the given ShellColumnID.
            </summary>
            <param name="p_ColID">A ShellColumnID.</param>
            <param name="mustBeVisible">if true only returns indexes of visible columns</param>
            <returns>The local column index.</returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetIndexOfShColumnId(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns the local index for the given ShellColumnID (if the column is existing and visible)
            </summary>
            <param name="p_ColID">A ShellColumnID.</param>
            <returns>The local column index.</returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsColumnVisible(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns whether the given SHColumnId is currently visible or not.
            </summary>
            <param name="pColId">The SHCOLUMNID of the column that should be checked.</param>
            <returns>True if it`s visible, False if hidden or not existing.</returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsColumnVisible(System.Int32)">
            <summary>
            Returns whether the given column id is currently visible or not.
            </summary>
            <param name="pShellIndex">The shell column index to be checked.</param>
            <returns>True if it's visible.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.UpdateHeaderMenu(Jam.Shell.SHCOLUMNID)">
            <summary>
            Updates the checked state of a header menu entry
            </summary>
            <param name="colId">The SHCOLUMNID of the column to check</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InitHeaderContextMenu">
            <summary>
            Initialize the HeaderContextMenu.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.EnumWindowCallBack(System.IntPtr,System.IntPtr)">
            <summary>
            Set HeaderRectangle to the area that contains the headerbar.
            </summary>
            <param name="hwnd">
            The pointer to the child window of the listview 
            which should be the headerbar</param>
            <param name="lParam"></param>
            <returns>false.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnHeaderContextMenuClick(System.Object,System.EventArgs)">
            <summary>
            Eventhandler for a HeaderContextMenuClick.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.HandleNeeded">
            <summary>
            Creates the handle if it has not been created already.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsEmpty">
            <summary>
            Checks if the list is empty.
            </summary>
            <returns>True, if the list is empty.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectedFilesReset">
            <summary>
            This method gets called to reset the collection of selected files that is
            accessible through the <see cref="P:Jam.Shell.JamBaseShellListView.SelectedFiles"/> property. It resets the 
            collection, the next time the user calls the getter, it will be refilled.
            It is used e.g. if an item gets renamed.
            <see cref="M:Jam.Shell.ShellListBaseItem.Rename(System.String)"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseDown event.
            </summary>
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the OnMouseUp event, to handle e.g. double clicks and right clicks on files or folders
            and the selection of files or folders, when the CheckBoxes are switched on.
            </summary>
            <param name="e">Provides data for the OnMouseUp event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            Sort the column, which is clicked.
            </summary>
            <param name="e">Provides data for the OnColumnClick event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.UpdateColumnBitmaps">
            <summary>
            Updates the sort icon in the column of the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Sort">
             <summary>
             Sorts the items of the list view. Uses a custom sort order if an <see cref="T:System.Collections.IComparer"/> is assigned to property <see cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>.
             If no custom sortorder is supplied the default sorting handles sorting by columns and is only useful in <see cref="F:Jam.Shell.ViewState.Details"/>.
             In this case <see cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/> must be non-negative.
             </summary>
             <example>
             This example sets a custom ListViewItemSorter on a FileList that handles the sorting when the <see cref="P:Jam.Shell.JamBaseShellListView.ViewState"/> is something else than <see cref="F:Jam.Shell.ViewState.Details"/>.
             <code>
             private class CustomItemComparer : System.Collections.IComparer
             {
                private FileList m_FileList;
                public CustomItemComparer(FileList pFileList)
                {
                    m_FileList = pFileList;
                }
            
                public int Compare(object x, object y)
                {
                    if (m_FileList.ViewState == ViewState.Details)
                        return m_FileList.Compare(x, y);
                    else
                    {
                        FileListItem item1 = (FileListItem) x;
                        FileListItem item2 = (FileListItem) y;
                        if (item1 == null || item2 == null) return 0;
                        return String.Compare(item1.FullPath, item2.FullPath, StringComparison.OrdinalIgnoreCase);
                    } 
                }
             }
             
             void TestForm_Load(object sender, EventArgs e)
             {
                 CustomItemComparer comparer = new CustomItemComparer(fileList1);
                 fileList1.ListViewItemSorter = comparer; //assigning already sorts           
             }
             </code>
             </example>
             <seealso cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.EndInit">
            <summary>
            Signals the object that initialization is complete.
            After this method is called, <see cref="F:Jam.Shell.JamBaseShellListView.m_Initialized"/> is true to indicate
            the state of the control.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectPidl(Jam.Shell.ItemIdList)">
            <summary>
            Selects the ListItem that corresponds to the given ItemIdList.
            </summary>
            <param name="pPidl">An ItemIdList relative to the current folder.</param>
            <returns>True if the item could be found and selected, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectPidl(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Selects the ListItem that corresponds to the given ItemIdList.
            </summary>
            <param name="pPidl">An ItemIdList relative to the current folder.</param>
            <param name="pEnsureVisible">if set to <c>true</c> the visibility of the item is ensured.</param>
            <returns>
            True if the item could be found and selected, false otherwise.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ItemOfPidl(Jam.Shell.ItemIdList)">
            <summary>
            Returns the ShellListItem for the given ItemIdList
            </summary>
            <param name="p_ItemIdList">An ItemIdList Relative to the current folder.</param>
            <returns>The ShellListITem that correponds to the given ITemIdList, null if no matching item could be found.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.RenameItemSelectedHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the click on the "Rename" context menu item of the Shell context menu and the F2 key press of the ShellFileList.
            It sets the selected item in edit mode.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FindContextMenuPosition">
            <summary>
            finds the position where to display the context menu based 
            upon the currently selected items and their positions
            </summary>
            <returns>The upperleft point+(20;20) of the ListView if nothing is selected, a point otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DisplayContextMenu">
            <summary>
            Shows the shell context menu for the currently selected items
            <seealso cref="P:Jam.Shell.JamBaseShellListView.ShowContextMenu"/>
            </summary>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the currently selected items
            </summary>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.LogError(System.String)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages"/> is set.
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.LogError(System.String,System.Exception)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages"/> is set. 
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
            <param name="exception">Exception a possible exception that is logged as well, may be null</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnItemShowToolTip(Jam.Shell.SystemListView.ShowToolTipEventArgs)">
            <summary>
            This method is extended to show tool tip texts of the particular shell objects.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.
            </summary>
            <remarks>We are using this event to initialize the control.</remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnHandleCreated(System.EventArgs)">
            <summary>
            Handles the OnHandleCreated event and e.g. initializes the image list
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnResize(System.EventArgs)">
            <summary>
            Raises the OnResize event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnBeforeLabelEdit event, to prepare renaming a file or folder in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnBeforeLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnAfterLabelEdit event, to rename files or folders in the file system, when the have been renamed in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnAfterLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectedListChange(System.Object,System.EventArgs)">
            <summary>
            Handler for the Change event of the SelectedFiles list.
            Selects all objects which names are included in the SelectedFiles list.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ItemSelectionChange(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            This member handles the <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged"/> event.
            </summary>
            <param name="source">the source that created the event</param>
            <param name="e">The parameter contains the event data for the ListViewItemSelection changed.
            If it is null, we do not clear the SelectedFiles Datastructure, since the method was called 
            directly from <see cref="M:Jam.Shell.JamBaseShellListView.SelectedListChange(System.Object,System.EventArgs)"/>.
            </param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)"/> and adds drag images and cursors.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/> and adds drag images and cursors.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/> and resets the DropTargetHelper.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.BaseOnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Calls the original inherited OnDragDrop method.
            </summary>
            <param name="drgevent">The <see cref="T:System.Windows.Forms.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/> and resets the drag effect.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnCreateColumns">
            <summary>
            Fires an event after the columns have been created
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnBeforeShellDrop(Jam.Shell.BeforeShellDropEventArgs)">
            <summary>
            Calls the BeforeShellDrop event if it is assigned.
            </summary>
            <param name="p_EventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnShowOptionChanged">
            <summary>
            Calls the ShowOptionChanged event if it is assigned.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnOperation(Jam.Shell.ShellOperation,System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            Helper function for <see cref="M:Jam.Shell.JamBaseShellListView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)"/> to avoid type conversion.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)">
            <summary>
            Fires an event if an operation was performed on the <see cref="T:Jam.Shell.JamBaseShellListView"/>.
            </summary>
            <param name="p_Operation">Contains the type of operation, which has been performed.</param>
            <param name="p_Paths">The p_Paths contains the file or folder names, that are affected.</param>
            <param name="p_Destination">Contains the destination, e.g. where files or folders have been pasted to.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnOperationForShellCommand(System.String,Jam.Shell.PathCollection,System.String)">
            <summary>
            Calls OnOperation for typical commands, currently cut, copy, paste and delete
            </summary>
            <param name="command">A valid command <see cref="T:Jam.Shell.ShellCommand"/></param>
            <param name="affectedFiles">The files the operation is executed upon. If null, they will be determined automatically</param>
            <param name="destination">The destination of the operation (if applicable)</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnCheckStateChanged(Jam.Shell.ShellListBaseItem,Jam.Shell.CheckState)">
            <summary>
            Fires an event if the <see cref="T:Jam.Shell.CheckState"/> of an item has changed.
            <seealso cref="M:Jam.Shell.ShellListBaseItem.InvertCheckState"/>
            </summary>
            <param name="item">The item, where the <see cref="T:Jam.Shell.CheckState"/> has been changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnBeforeShellColumnChanged(Jam.Shell.BeforeShellColumnChangedCancelArgs)">
            <summary>
            Calls the BeforeShellColumnChanged event if it is assigned.
            </summary>
            <param name="eventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)">
            <summary>
            Tracks column widths. Raises the System.Windows.Forms.ListView.ColumnWidthChanged event.
            </summary>
            <param name="e">A System.Windows.Forms.ColumnWidthChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Font">
            <summary>
            The font used to display text in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ViewState">
            <summary>
            Gets or sets how items are displayed in the ListView control.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.View">
            <summary>
            Overrides the ListView.View property. Use ViewState instead.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowInfoToolTips">
            <summary>
            Whether to show the informational shell tooltips, the default is true
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Columns">
            <summary>
            Gets the collection of all column headers that appear in the control.
            </summary>
            <returns>A <see cref="T:Jam.Shell.IJamShellColumnCollection"/> that represents the column headers that appear when the <see cref="P:System.Windows.Forms.ListView.View"/> property is set to <see cref="F:System.Windows.Forms.View.Details"/>.</returns>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.InternalColumns">
            <summary>
            Gets the columns as JamShellColumnCollection.
            </summary>
            <value>
            The column collection.
            </value>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.UseSlowInfoTip">
            <summary>
            If true, the slow tooltip that contains additional information like the folder size is used.
            Setting this value to false increases the performance.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.CheckBoxes">
            <summary>
            Use this property to turn on or off the checkboxes for file and folder selection. 
            The checkboxes will only work, if a <see cref="P:Jam.Shell.JamBaseShellListView.ShellControlConnector"/> has been 
            assigned to the ShellControlConnector property of this component. It will 
            automatically synchronize the selection state of the items in multiple shell 
            controls linked together with this ShellControlConnector.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IgnoreChanges">
            <summary>
            This property may only be set/unset from within the <see cref="T:Jam.Shell.ShellListItem"/> class.
            If true, the ListView will not act on events caused by the ShellChangeNotifier.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.CustomColumnCount">
            <summary>
            The number of Custom Columns in this Listview
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.CheckedItems">
            <summary>
            Refer to the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/> property
            to determine which items are selected. Please do not use this property, 
            it is currently not supported.
            The <see cref="P:Jam.Shell.JamBaseShellListView.CheckBoxes"/> in an ordinary <see cref="T:System.Windows.Forms.ListView"/> do 
            not support the grayed <see cref="T:Jam.Shell.CheckState"/> furthermore the ListView 
            does not support them at all in <see cref="P:Jam.Shell.JamBaseShellListView.View"/> TileView.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ThumbnailBorderColor">
            <summary>
            Get or set the color of the frame that is drawn around the thumbnails.
            If this value is set to null, no frame will be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Thumbnails">
            <summary>
            Obsolete: Use ViewState.Thumbnails instead.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ThumbnailSize">
            <summary>
            Use the ThumbnailSize property to get or set the size in pixels of the thumbnail images.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowExtraLargeIcons">
            <summary>
            Obsolete: Use ViewState.ExtraLargeIcons instead.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AutomaticRefresh">
            <summary>
            Set this property to true if you like the component to be refreshed automatically 
            if a Drive is added or removed.
            This property is directly connected to the Enabled property of an internal instance of <see cref="P:Jam.Shell.JamBaseShellListView.ShellChangeNotifier"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellChangeNotifier">
            <summary>
            Returns the reference to the ShellChangeNotifier that 
            is associated with this FileList instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.UsedShColumnIds">
            <summary>
            Returns an array of the currently used ShColumnIds.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.HeaderMenuStrip">
            <summary>
            Gets or sets the ContextMenuStrip that will be shown if the user rightclicks
            on the headerbar.
            Get: If it's null, we generate a list of available columns.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.DropItem">
            <summary>
            Gets or sets the item on that a current drag and drop operation would be executed.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AllowDrop">
            <summary>
            Use this property to turn on or off drop support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AllowDrag">
            <summary>
            Use this property to turn on or off drag support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages">
            <summary>
            If set to true the ShellList component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowContextMenu">
            <summary>
            If set to true, the context menu will be shown if a right click event occurs.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellBrowser">
            <summary>
            Gets or sets the shellbrowser instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.NoFillOnStartup">
            <summary>
            If set to true, the control will not fill automatically after it was created.
            The <see cref="M:Jam.Shell.IShellControl.FullRefresh"/> method must be called explicitly.
            Since filling shell control with the appropriate items is a costly operation, this
            property can be useful to prevent unnecessary refreshes of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsDropTarget">
            <summary>
            Gets or sets if this controls is a drop target or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.JamBaseShellListView.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsInitializing">
            <summary>
            The value this property is true between the calls BeginInit() and EndInit() 
            of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Sorting">
            <summary>
            Gets or sets the sort order for items in the control.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value specified is not one of the System.Windows.Forms.SortOrder values.
            </exception>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.SortColumn">
            <summary>
            The column according to which the listed objects are sorted.
            If this is set to a negative value, sorting is disabled by setting 
            <see cref="T:System.Windows.Forms.SortOrder"/> to SortOrder.None, this is useful to
            insert large amounts of items, e.g. during a search.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the value is &gt;= Columns.Count</exception>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.SortColumnShellID">
            <summary>
            Gets or sets the current sort order.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AutoSizeColumn">
            <summary>
            Adjust the size of the given column so that it fills the remaining horizontal space.
            </summary>
            <value>
            If a value greater or equal to zero is assigned to this property, the column width this
            index will be adjusted to fill the available horizontal space so that no scrollbar
            needs to be shown. A minimum size of 80 is preserved.
            </value>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.NumShellColumns">
            <summary>
            The number of system columns without the columns added by the user.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.VerticalScrollPos">
            <summary>
            Gets or sets the vertical scroll position. 
            
            </summary>
            <value>
            The vertical scroll position as vertical pixel position. If <see cref="P:Jam.Shell.JamBaseShellListView.ViewState"/> is <see cref="T:Jam.Shell.ViewState"/> the index of the TopItem.
            </value>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellContextMenu">
            <summary>
            Indicates whether the Windows ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowShellContextMenuOnTop">
            <summary>
            If set to to 'true', the shell context menu will be shown on top of the provided popup menu. 
            If set to 'false', the shell context menu will be shown below the provided popup menu.
            The value true is currently not supported. The menu items will be shown correctly, however their Click event cannot be triggered.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ContextMenuStrip">
            <summary>
            The ContextMenuStrip is converted to an ordinary ContextMenu. This makes it 
            possible to merge your ContextMenuStrip with the Default ShellContextMenu provided
            by the system.
            The "Opening" and "Closing" events of the ContextMenuStrip will be raised if the 
            ContextMenu "Popup"/"Collapse" event occurs. For menu items only the "Click" event
            is available. All other events are not available.
            All ToolStripMenuItems are converted, and ToolStripSeparators are recognized.
            The ShortCut Keys defined in a ToolStripMenuItem are not converted.
            If you would like to have the ShortCut-Keys, leave this Property null, instead set
            the ContextMenu property to your menu explicitly.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.SelectedFiles">
            <summary>
            This property provides access to a list of all files including their 
            extension, which are currently selected in the ShellListView. 
            Dependent on the user settings, the file names in the ListView may be 
            displayed without extension, which makes it difficult to further 
            process them when they are accessed only by the <see cref="P:System.Windows.Forms.ListView.SelectedItems"/>
            property. You can also use the SelectedFiles property to add files 
            to the selection by using SelectedFiles.Add method.
            <seealso cref="P:Jam.Shell.JamBaseShellListView.ShellControlConnector"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ColumnsInitialized">
            <summary>
            Returns whether the columns were already initialized for the current SpecialFolder.
            </summary>
            <returns> True if the columns were initialized.</returns>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ThumbnailImageList">
            <summary>
            Returns the ImageList that holds the currently used thubmnails.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.WorkItemTag">
            <summary>
            A internal number that is used to tag the workitems of a list view.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.VirtualMode">
            <summary>
            Not supported-
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.VirtualListSize">
            <summary>
            Not supported-
            </summary>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.Initialized">
            <summary>
            This event is fired after the initialization of the component.
            </summary>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>o
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.CreatedColumns">
            <summary>
            This event is fired after the columns were created.
            </summary>
            <remarks>You can use this event to control the columns that are shown in the list. If however you remove the <see cref="F:Jam.Shell.SHCOLUMNID.ShellColumnName"/> column it will be reinserted again.
            </remarks>
            <example>
            This example adds custom columns in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="CreatingCustomColumns" lang="C#"/>
            </example>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="AddRemoveShellColumns" lang="C#"/> 
            </example>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.OperationPerformed">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.JamBaseShellListView"/> executed a shell operation like copying.
            </summary>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.BeforeShellColumnChanged">
            <summary>
            This event is fired when a column is selected/deselected from the context menu of the list header.
            </summary>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.BeforeShellDrop">
            <summary>
            This event is fired before a ListView that inherits from <see cref="T:Jam.Shell.JamBaseShellListView"/> executes a shell drop.
            </summary>
            <remarks>
            <example>
            This example shows, how you can rename dropped files automatically.
            <code>
            using Jam.Shell;
            using System.IO;
            
            private PathCollection m_DroppedFiles;
            
            private void shellListView1_BeforeShellDrop(object sender, BeforeShellDropEventArgs e)
            {
                // maybe clear if old dropped files are present
                if (m_DroppedFiles != null)
                    m_DroppedFiles.Clear();
                
                /* 
                // If you don`t want the ShellDrop to be executed, just set the flag to false
                if (...)
                {
                    e.ExecuteShellDrop = false;
                    return;
                } 
                */
            
                /* - possibility to watch what is dropped
                for (int i = 0; i &lt; e.Files.Count; i++)
                {
                    MessageBox.Show(e.Files[i]);
                }*/
            
                // save the dropped files
                // here you could filter the files that should later be renamed
                m_DroppedFiles = e.Files;
            }
            
            private void shellListView1_OperationPerformed(object sender, OperationEventArgs e)
            {
                if (e.Operation == ShellOperation.Drop)
                {
                    // fill a new PathCollection, because the AffectedObjects will change during the rename process
                    PathCollection localDroppedFiles = new PathCollection(e.AffectedObjects);
                
                    // use a temporary ShellBrowser instance
                    using (ShellBrowser sb = new ShellBrowser())
                    {
                        // set the ShellBrowser folder to the drop destination
                        sb.Folder = e.Destination;
                        
                        foreach (string objectPath in localDroppedFiles)
                        {                    
                            // if the affected object can be found in our list,  rename it
                            if (m_DroppedFiles != null &amp;&amp; m_DroppedFiles.Contains(objectPath))
                            {
                                // set the objectname to the filename of the  dropped file
                                sb.ObjectName = Path.GetFileName(objectPath);
                                
                                // delete it from the list 
                                m_DroppedFiles.Delete(m_DroppedFiles.IndexOf(objectPath));
                                
                                // rename
                                sb.RenameObject("MyNewFileName.txt");
                                
                                // show the new name
                                //MessageBox.Show(sb.ObjectName);
                            }
                        }
                    }
                }
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.ShowOptionChanged">
            <summary>
            This event is fired after an display option changed.
            </summary>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.CheckStateChanged">
            <summary>
            This event is fired when the state of a checkbox was changed by the user.
            </summary>
        </member>
        <member name="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1">
            <summary>
            Generic <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection"/> class that subclasses of <see cref="T:Jam.Shell.JamBaseShellListView"/> use for their <see cref="P:System.Windows.Forms.ListView.SelectedItems"/> collections.
            Concrete subclasses must specify their item type in the ITEM_CLASS parameter.
            </summary>
            <typeparam name="ITEM_CLASS">If used/overriden must specify a concrete item type that is inheriting from ListViewItem</typeparam>
            <seealso cref="P:Jam.Shell.ShellListView.SelectedItems"/>
            <seealso cref="P:Jam.Shell.CustomFileList`1.SelectedItems"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1.#ctor(System.Windows.Forms.ListView)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/> class.
            </summary>
            <param name="owner">The <see cref="T:System.Windows.Forms.ListView"/> control that owns the collection.</param>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index within the collection.
            </summary>
            <param name="index">The index.</param>
            <returns>The Item.</returns>
        </member>
        <member name="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1">
            <summary>
            Generic ListViewItemCollection class that subclasses of <see cref="T:Jam.Shell.JamBaseShellListView"/> use for their <see cref="P:System.Windows.Forms.ListView.Items"/> collections.
            Concrete subclasses must specify their item type in the ITEM_CLASS parameter.
            </summary>
            <typeparam name="ITEM_CLASS">If used/overriden must specify a concrete item type that is inheriting from ListViewItem</typeparam>
            <seealso cref="P:Jam.Shell.ShellListView.Items"/>
            <seealso cref="P:Jam.Shell.CustomFileList`1.Items"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1.#ctor(System.Windows.Forms.ListView)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/> class.
            </summary>
            <param name="owner">The <see cref="T:System.Windows.Forms.ListView"/> that owns the collection.</param>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index within the collection.
            </summary>
            <param name="index">The index.</param>
            <returns>The Item.</returns>
        </member>
        <member name="F:Jam.Shell.SpecialFolderViewCache.m_ColumnPropertiesForSpecialFolderDict">
            <summary>
            Contains <see cref="T:Jam.Shell.ColumnProperties"/> objects for a specific ShellFolder.
            </summary>
        </member>
        <member name="T:Jam.Shell.ColumnProperties">
            <summary>
            A helper class that holds column specific properties.
            </summary>
        </member>
        <member name="M:Jam.Shell.ColumnProperties.#ctor(System.Int32)">
            <summary>
            Creates a new ColumnProperties object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ColumnProperties.SortColumn">
            <summary>
            Gets or sets the currently used sort column.
            </summary>
        </member>
        <member name="P:Jam.Shell.ColumnProperties.IsInitialized">
            <summary>
            Get/Sets whether the columns were already initialized.
            </summary>
        </member>
        <member name="P:Jam.Shell.ColumnProperties.MaxLocalColumnIndex">
            <summary>
            Gets/Sets the max column index of the currently used columns.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellListBaseItem">
            <summary>
            Represents an item of the windows shell namespace that serves as
            a common base for <see cref="T:Jam.Shell.ShellListItem"/> and <see cref="T:Jam.Shell.FileListItem"/>
            </summary>
            <seealso cref="T:Jam.Shell.ShellListItem"/>
            <seealso cref="T:Jam.Shell.FileListItem"/>
        </member>
        <member name="T:Jam.Shell.IListBaseItem">
            <summary>
            Defines some properties that list items have in common.
            <seealso cref="T:Jam.Shell.ShellListItem"/>
            <seealso cref="T:Jam.Shell.ShellSystemListItem"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.IListBaseItem.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.IListBaseItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            This property will only be set if the <c>ShowOverlayIcons</c> property of <see cref="P:Jam.Shell.ShellListView.ShowOverlayIcons"/> is set to true.
            </summary>
        </member>
        <member name="T:Jam.Shell.IShellItem">
            <summary>
            Defines a common interface for ShellListItem and ShellTreeNode.
            It will be extended in the future.
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellItem.Rename(System.String)">
            <summary>
            Rename a file item
            </summary>
            <param name="p_NewName">The new name the item will be renamed to.</param>
            <returns>true if the item was renamed successfully</returns>
        </member>
        <member name="P:Jam.Shell.IShellItem.FullPath">
            <summary>
            Get the full path of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.IShellItem.AbsoluteItemIdList">
            <summary>
            Get the absolute ItemIdList of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.IShellItem.Cut">
            <summary>
            Show the icon of a FileItem "ghosted" if the user has
            performed the cut operation (Ctrl-X)
            </summary>
        </member>
        <member name="P:Jam.Shell.IShellItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list 
            that should be shown in front of the normal icon.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.#ctor(System.String)">
            <summary>
            The default constructor.
            </summary>
            <param name="p_Text">The text caption passed to the base class <see cref="T:System.Windows.Forms.ListViewItem"/> constructor.</param>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_ShellListView">
            <summary>
            Holds the ListView of this ListItem as JamBaseShellListView typed variable.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_RelativeItemIdList">
            <summary>
            ItemIdList of this item relative to the folder p_Path ItemIdList.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_AbsoluteItemIdList">
            <summary>
            Absolute ItemIdList of this item.
            <seealso pref="ShellListBaseItem.RelativeItemIdList"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_ItemState">
            <summary>Stores the state of the item. <see cref="P:Jam.Shell.ShellListBaseItem.DetailsCompleted"/> and <see cref="P:Jam.Shell.ShellListBaseItem.Cut"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_OverlayImage">
            <summary>
            Used to store the value of the <see cref="P:Jam.Shell.ShellListBaseItem.OverlayImage"/> OverlayImage property, the index of the overlay item in the system image list of this item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_VariantColumnTexts">
            <summary> This list holds the column texts of the item. It`s filled in FillSubitems. </summary>
            <remarks> Vista or later only. </remarks>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.Reload(Jam.Shell.ItemIdList)">
            <summary>Reloads the item. If an ItemIdList is passed it is refreshed and used as new absolute ItemIdList for the item.</summary>
            <param name="pItemIdList">An absolute ItemIdList that is used as new absolute ItemIdList of the Item or null if only the details of the Item shall be reloaded</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.DetailsCompletedReset">
            <summary>
            Resets the <see cref="P:Jam.Shell.ShellListBaseItem.DetailsCompleted"/> statusflag. So the next time the
            <see cref="M:Jam.Shell.ShellListBaseItem.CompleteDetails"/> function is called, information on the item is retrieved again
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.PrepareSubitems(Jam.Shell.JamBaseShellListView)">
            <summary>
            Adds as many subitems as needed to fill the shell contents later.
            </summary>
            <param name="shellListView">The shellListView of this item.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RemoveSubItem(System.Int32)">
            <summary>
            Removes the subitem at the passed postion.
            </summary>
            <param name="pPosition">The position of the subitem to remove.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.Rename(System.String)">
            <summary>
            Renames the item.
            </summary>
            <param name="p_NewName">The new item name.</param>
            <returns>True if the renaming was successful.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.AfterRename(Jam.Shell.ShellBrowser,System.String,System.String)">
            <summary>
            Refreshes the item`s ItemIdLists, text and executes the PathWasRenamed methods
            </summary>
            <param name="sb">The ShellBrowser that is set to the new Path of the item.</param>
            <param name="newName">The new name of the item.</param>
            <param name="oldPath">The old name of the item.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RefreshGhostedState">
            <summary>
            Refreshes the ghosted state of the item, e.g. after a
            <see cref="T:ShellListView.SmartRefresh()"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RefreshOverlayImageIndex">
            <summary>
            Refreshes the overlay image index of the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvertCheckState">
            <summary>
            This method inverts the <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> of the <see cref="T:Jam.Shell.ShellListItem"/> 
            instance. If the Item was checked it's state will be set to unchecked.
            If it was Grayed or UnChecked it will be Checked afterwards.
            If the Item is not associated (contained) in a <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> or
            the <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> has no <see cref="T:Jam.Shell.ShellControlConnector"/> assigned,
            this method does nothing and returns immediately.
            Furthermore the ListView needs to have the <see cref="P:Jam.Shell.JamBaseShellListView.CheckBoxes"/> property
            enabled.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RefreshCheckState">
            <summary>
            Refreshes the value of the <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> CheckSate property.
            Calling this method has no effect if the Item was not previously been added to a <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetCheckState(Jam.Shell.CheckState)">
            <summary>
            This method should be used internally to update the <see cref="P:System.Windows.Forms.ListViewItem.StateImageIndex"/>
            of the item without side effects. (Using the public <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> property 
            will cause the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/> to be modified).
            </summary>
            <param name="value">The new checkstate of the item.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetThumbnailImage(System.Windows.Forms.ImageList,System.Drawing.Bitmap,Jam.Shell.ShellBrowser)">
            <summary>
            Invokes <see cref="M:Jam.Shell.ShellListBaseItem.SetThumbnailBitmap(System.Windows.Forms.ImageList,System.Drawing.Bitmap,Jam.Shell.ShellBrowser)"/> from the gui thread, this
            adds the bitmap to the imagecollection of the imagelist, sets the
            image index of this item accordingly.
            Queues another work-item to obtain a real thumbnail later on
            </summary>
            <param name="imageList">a thumbnail imagelist</param>
            <param name="bitmap">the surrogate bitmap that is initially set (obtained earlier from GetIconAsBitmap)</param>
            <param name="shellBrowser"></param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetThumbnailBitmap(System.Windows.Forms.ImageList,System.Drawing.Bitmap,Jam.Shell.ShellBrowser)">
            <summary>
            Adds the bitmap to the imagecollection of the imagelist, sets the
            image index of this item accordingly.
            Queues another work-item to obtain a real thumbnail later on
            </summary>
            <param name="imageList">a thumbnail imagelist</param>
            <param name="bitmap">the surrogate bitmap that is initially set (obtained earlier from GetIconAsBitmap)</param>
            <param name="shellBrowser"></param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.GetThumbnailCallback(System.Drawing.Image,System.Drawing.Bitmap,System.Object)">
            <summary>
            This method is called when the thumbnail image is rendered completely
            </summary>
            <param name="pThumbnail">The bitmap of the thumbnail image</param>
            <param name="pBitmapSource">The source the image was created from. It must not be disposed before the Image is released.</param>
            <param name="pState">The ShellListItem for that the thumbnail image had been rendered</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.Invalidate">
            <summary>
            Triggers a repainting of the image of the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetImageIndex(System.Int32)">
            <summary>
            This method sets the image index (<see cref="P:System.Windows.Forms.ListViewItem.ImageIndex"/>). It is used in conjunction with
            <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])"/>.
            </summary>
            <param name="imageIndex"></param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetOverlayIndex(System.Int32)">
            <summary>
            This method sets the overlay image index (<see cref="P:System.Windows.Forms.ListViewItem.ImageIndex"/>) it is used in conjunction with
            <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])"/>.
            </summary>
            <param name="imageIndex"></param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetCut(System.Boolean)">
            <summary>
            This method sets the <see cref="P:Jam.Shell.ShellListBaseItem.Cut"/> property it is used in conjunction with
            <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])"/>.
            </summary>
            <param name="cut">if true the item is shown ghosted</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetImageIndex(System.Int32)">
            <summary>Sets the ImageIndex property through BeginInvoke</summary>
            <param name="imageIndex">The image index to set</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetOverlayIndex(System.Int32)">
            <summary>Sets the OverlayImage index property through BeginInvoke</summary>
            <param name="imageIndex">The image index to set</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetCut(System.Boolean)">
            <summary>Sets <see cref="P:Jam.Shell.ShellListBaseItem.Cut"/> property through BeginInvoke</summary>
            <param name="cut">whether the items is shown as 'cut' or not.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.CompleteDetails">
            <summary>
            Completes the details of the ShellListBaseItem, given that it's <see cref="T:System.Windows.Forms.ListView"/> property is set,
            ie. the item has been added to the listview. Consider calling <see cref="M:Jam.Shell.ShellListBaseItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>
            if the Item has not yet been added to the ListView.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Completes the details of the ShellListBaseItem 
            </summary>
            <param name="listView">The listview that is used to gather information from</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetDetails(System.Windows.Forms.ListView,Jam.Shell.ShellListBaseItem.Details)">
            <summary>
            Invokes the <see cref="M:Jam.Shell.ShellListBaseItem.SetDetails(System.Windows.Forms.ListView,Jam.Shell.ShellListBaseItem.Details)"/> method from within the GUI thread
            </summary>
            <param name="listView">listview</param>
            <param name="details">the details to set</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetDetails(System.Windows.Forms.ListView,Jam.Shell.ShellListBaseItem.Details)">
            <summary>
            Always called from the gui thread
            </summary>
            <param name="listView"></param>
            <param name="details"></param>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.ShellListView">
            <summary>
            The same instance as <see cref="T:System.Windows.Forms.ListView"/>ListView but typed as <see cref="T:Jam.Shell.JamBaseShellListView"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.DetailsCompleted">
            <summary>
            Returns true if the <see cref="P:Jam.Shell.ShellListBaseItem.OverlayImage"/> index and the ImageIndex are valid
            <seealso cref="T:ShellListView.CompleteDetails"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.FullPath">
            <summary>
            Use to get the full path of this item.
            </summary>
            <returns>The full file system path of this item. An empty string if this item is not a file system object.</returns>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.AbsoluteItemIdList">
            <summary>
            Get the absolute PIDL corresponding to the complete path of the FileListItem
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.Checked">
            <summary>
            This property calls <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> and
            returns true only if the item is CheckState.Checked 
            and false if in CheckState.Grayed or CheckState.UnChecked.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.CheckState">
            <summary>
            If the <see cref="P:Jam.Shell.JamBaseShellListView.CheckBoxes"/> property of the <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> is true
            then this property can be used to get or set the check state.
            If the value that is set changes the item's checkstate, and a <see cref="T:Jam.Shell.ShellControlConnector"/> is
            assigned to the <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> the item is contained in, the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/>
            will be updated accordingly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.ColumnInfoAvailable">
            <summary>
            Returns true if the columns have been added as subitems
            See the <see cref="M:Jam.Shell.ShellListItem.FillSubitems"/> and <see cref="M:Jam.Shell.FileListItem.FillSubitems"/> methods.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.VariantColumnTexts">
            <summary> This array holds the column texts of the item. It`s filled in FillSubitems. </summary>
            <remarks> Vista or later only. 
            It`s internal here, because it`s currently just used and useful for the ShellList Items but will be used for the FileList soon.
            As we already implemented code into the BaseItem (for future usage in the ShellList and FileList), we need the array here.
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.Jam#Shell#IDropTarget#IsDropTarget">
            <summary>
            if this property is set to true, then the item is formatted as a highlighted drop target.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            This property will only be set if the <c>ShowOverlayIcons</c> property of <see cref="T:ShellListView.ShowOverlayIcons"/> is set to true.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.RelativeItemIdList">
            <summary>
            Get the relative PIDL of the current item.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellListBaseItem.ItemState">
            <summary>
            Flags that reflect the state of the ShellListBaseItem
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.ItemState.DetailsCompleted">
            <summary>The ImageIndex and <see cref="P:Jam.Shell.ShellListBaseItem.OverlayImage"/> index are valid, if this flag is set</summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.ItemState.ColumnInfoAvailable">
            <summary>The subitems have been filled with information</summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.ItemState.Cut">
            <summary>Whether the item's image is shown ghosted</summary>
        </member>
        <member name="T:Jam.Shell.ShellListBaseItem.Details">
            <summary>
            Details information that is used to set 
            item properties from the gui thread
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.Details.ToolTipText">
            <summary>
            The text of the item tooltip
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.Details.ImageIndex">
            <summary>
            An image index of the 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.Details.Ghosted">
            <summary>
            Whether the item is shown ghosted or not
            </summary>
        </member>
        <member name="T:Jam.Shell.RefreshLevel">
            <summary>Possible values for refresh operations for controls connected through a <see cref="T:Jam.Shell.ShellControlConnector"/>.</summary>
            <seealso cref="T:Jam.Shell.ShellControlConnector"/>
        </member>
        <member name="F:Jam.Shell.RefreshLevel.Full">
            <summary>Indicates that the callee should perform a full refresh of its contents.
            This will usually be an entire reload of the displyed items.</summary>
        </member>
        <member name="F:Jam.Shell.RefreshLevel.Smart">
            <summary>Indicates that the callee should perform a quick refresh of its contents.
            It is tolerable that changes in metadata are not detected. Removed and deleted items hsould be detected.
            The runtime of this method should be significantly faster thatn the one of the <see cref="M:Jam.Shell.ShellControlConnector.Refresh(Jam.Shell.RefreshLevel)"/> method.
            </summary>
        </member>
        <member name="F:Jam.Shell.RefreshLevel.Checkboxes">
            <summary>
            Just update the CheckBoxes.
            </summary>
        </member>
        <member name="T:Jam.Shell.ViewState">
            <summary>
            ViewState enumeration for ListView superseeds System.Windows.Forms.View
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.Details">
            <summary>
            Details view.
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.LargeIcons">
            <summary>
            LargeIcon view, typically 32x32
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.SmallIcons">
            <summary>
            SmallIcon view, typically 16x16
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.List">
            <summary>
            List view
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.Tile">
            <summary>
            Tile view
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.ExtraLargeIcons">
            <summary>
            ExtraLargeIcon view, typically 256x256
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.Thumbnails">
            <summary>
            Thumbnails view, size is defined by <see cref="P:Jam.Shell.JamBaseShellListView.ThumbnailSize"/>, typically 96x96
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.LargerIcons">
            <summary>
            LargerIcons view, typically 48x48
            </summary>
        </member>
        <member name="T:Jam.Shell.BeforeShellColumnChangedCancelArgs">
            <summary>
            Cancellable EventArgs for BeforeShellColumnChanged event.
            The event is cancellable by usage of inherited eventArgs.Cancel property.
            </summary>
        </member>
        <member name="M:Jam.Shell.BeforeShellColumnChangedCancelArgs.#ctor(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Creates a new instance of BeforeShellColumnChangedCancelArgs
            </summary>
            <param name="shellColumnId">The ShellColumnId that was selected.</param>
            <param name="colWasChecked">Whether the ShellColumnId was checked or unchecked</param>
        </member>
        <member name="P:Jam.Shell.BeforeShellColumnChangedCancelArgs.Checked">
            <summary>
            Whether the column was checked or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellColumnChangedCancelArgs.ShellColumnId">
            <summary>
            The ShellColumnId that was selected or deselected.
            </summary>
        </member>
        <member name="T:Jam.Shell.CheckStateChangedEventArgs">
            <summary>
            The CheckStateChangedEventArgs contains data for the <see cref="E:Jam.Shell.JamBaseShellListView.CheckStateChanged"/> event.
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemCheckStateChangedEventArgs`1">
            <summary>
            The baseclass for <see cref="T:Jam.Shell.NodeCheckStateChangedEventArgs"/> and
            <see cref="T:Jam.Shell.CheckStateChangedEventArgs"/>.
            </summary>
            <typeparam name="T">Item type the checkstate event is issued, e.g. <see cref="T:Jam.Shell.ShellListItem"/>, <see cref="T:Jam.Shell.ShellTreeNode"/></typeparam>
        </member>
        <member name="M:Jam.Shell.ItemCheckStateChangedEventArgs`1.#ctor(`0,Jam.Shell.CheckState)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemCheckStateChangedEventArgs`1"/> class.
            </summary>
            <param name="item">object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="P:Jam.Shell.ItemCheckStateChangedEventArgs`1.Item">
            <summary>
            object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemCheckStateChangedEventArgs`1.OldCheckState">
            <summary>
            Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.CheckStateChangedEventArgs.#ctor(Jam.Shell.ShellListBaseItem,Jam.Shell.CheckState)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.CheckStateChangedEventArgs"/> class.
            <seealso cref="T:Jam.Shell.ItemCheckStateChangedEventArgs`1"/>
            </summary>
            <param name="item"><see cref="T:Jam.Shell.ShellListBaseItem"/> object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="T:Jam.Shell.ItemIdListBase2">
            <summary>
            Used as base class for the <see cref="T:Jam.Shell.ItemIdList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of this class. This constuctor should not be called directly.
            </summary>
            <param name="p_Handle">The Pointer to an Win32 ItemIdList.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.ReleaseHandle">
            <summary>
            Free the current Win32 ItemIdList.
            </summary>
            <returns><c>true</c> if the handle is released successfully; otherwise, in the event of a catastrophic failure, <b>false</b></returns>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.Finalize">
            <summary>
            Releases unmanaged ressources before the instance is reclaimed by the Garbage Collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.Dispose">
            <summary>
            Releases ressources.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.Dispose(System.Boolean)">
            <summary>
            Releases managed ressources.
            </summary>
            <param name="disposing">The handle that the ItemIdList instance keeps is released if this parameter is true</param>
        </member>
        <member name="P:Jam.Shell.ItemIdListBase2.IsInvalid">
            <summary>
            Returns <c>true</c> if the currently stores ItemIdList is valid; <c>false</c> otherwise;
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemIdList">
            <summary>
            Wrapper class for ItemIdList structures of the Win32 Shell.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor">
            <summary>
            Initializes a new empty instance of the <see cref="T:Jam.Shell.ItemIdList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains a copy of the given ItemIdList.
            </summary>
            <param name="sourceItemIdList">An instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that should be copied to initalize the new instance.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(System.Environment.SpecialFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains an ItemIdList to the given special folder.
            </summary>
            <param name="aSpecialFolder">An enumerated constant that identifies a system special folder.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(Jam.Shell.ShellFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains an ItemIdList for the given special folder.
            </summary>
            <param name="aSpecialFolder">An enumerated constant that identifies a system special folder from the <see cref="T:Jam.Shell.ShellFolder"/></param>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected is not supported by the system the application is running on.</exception>
            <remarks>If a cached instance is sufficient, use <see cref="M:Jam.Shell.ItemIdList.GetForSpecialFolder(Jam.Shell.ShellFolder)"/> directly</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains an ItemIdList for the given path.
            </summary>
            <param name="aPath">A path for that the ItemIdList should be created.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(Jam.Shell.IShellFolder,System.String)">
            <summary>
            Creates an ItemIdList for given path in a Win32 IShellFolder.
            </summary>
            <param name="shlf">A reference to the IShellFolder interface.</param>
            <param name="aPath">The path relative to the given IShellFolder.</param>
            <remarks>Attention: The resulting ItemIdList might be invalid. Check the <see cref="P:Jam.Shell.ItemIdList.IsInvalid"/> property</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CreateForShellFolderAndPath(Jam.Shell.IShellFolder,System.String)">
            <summary>
            Factory method that creates an ItemIdList for given path in a Win32 IShellFolder.
            Without path the ItemIdList for Drives is returned
            </summary>
            <param name="shlf">A reference to the IShellFolder interface.</param>
            <param name="aPath">The path relative to the given IShellFolder.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPidlForShellFolderName(System.String)">
            <summary>
            Returns the pidl of the passed pShellFolderName, if it matches one.
            </summary>
            <param name="pShellFolderName">Name of the ShellFolder (e.g. "Libraries", "This PC").</param>
            <returns>The Pidl if available</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Parse(System.String)">
            <summary>
            Parses the specified p_DisplayPath and returns an <see cref="T:Jam.Shell.ItemIdList"/> instance.
            Finds physical paths, SpecialFolder names like "My PC" or concatenations of Special Folders and physical paths ("Libraries\Pictures\...", "My PC\c:\windows")
            Also resolves paths in zip files.
            </summary>
            <param name="p_DisplayPath">The path to parse</param>
            <returns>A valid ItemIdList or null if the path could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.FromIShellItem(Jam.Shell.IShellItemNative)">
            <summary>
            Creates an ItemIdList instance from the ShellItem passed.
            </summary>
            <param name="pShellItem">A IShellItemNative instance.</param>
            <returns>An ItemIdList or null if something went wrong.</returns>
        </member>
        <member name="F:Jam.Shell.ItemIdList.m_SpecialFolder">
            <summary>
            Used for caching the result of SpecialFolder.get
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.IsParentOf(Jam.Shell.ItemIdList)">
            <summary>
            Determines whether the passed ItemIdList is a child of this instance.
            </summary>
            <param name="p_ItemIdList">The child ItemIdList</param>
            <returns>true, if this instance is the parent of the passed ItemIdList</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetDomainFromIdList(Jam.Shell.ShellFolder,Jam.Shell.ItemIdList)">
            <summary>
            Returns the Domain for the given ItemIdList and ShellFolder.
            </summary>
            <param name="shellFolder"></param>
            <param name="itemIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ReleaseHandle">
            <summary>
            Free the current Win32 ItemIdList.
            </summary>
            <returns><c>true</c> if the handle is released successfully; otherwise, in the event of a catastrophic failure, <b>false</b></returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetForSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            Returns an ItemIdList for a SpecialFolder.
            </summary>
            <param name="aSpecialFolder">The SpecialFolder.</param>
            <returns>The ItemIdList of the SpecialFolder or null if not successful.</returns>
            <remarks>Don't dispose the result. It's the cached instance</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.IsSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            Compares the ItemIdList to a <see cref="T:Jam.Shell.ShellFolder"/>.
            </summary>
            <param name="aShellFolder">The shell folder to that the ItemIdList should be compared.</param>
            <returns>true if the ItemIdList represents the given shell folder, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Jam.Shell.ItemIdList"/>.</returns>
            <seealso cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Jam.Shell.ItemIdList"/> references the same object in the Windows Shell namespace.
            </summary>
            <param name="obj">The <see cref="T:Jam.Shell.ItemIdList"/> to compare the current <c>ItemIdList</c> with.</param>
            <returns><c>true</c> if the specified <see cref="T:Jam.Shell.ItemIdList"/> references the same shell object; otherwise false.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Equals(Jam.Shell.ItemIdList)">
            <summary>
            Determines whether the specified <see cref="T:Jam.Shell.ItemIdList"/> references the same object in the Windows Shell namespace.
            <seealso cref="M:Jam.Shell.ItemIdList.Equals(System.Object)"/>
            </summary>
            <param name="other">The <see cref="T:Jam.Shell.ItemIdList"/> to compare the current <c>ItemIdList</c> with.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:Jam.Shell.ItemIdList"/> references the same shell object; otherwise false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList)">
            <summary>
            Determines the relative order of "this" and "other".
            </summary>
            <param name="other">The ItemIdList to compare with.</param>
            <exception cref="T:System.ArgumentNullException">If argument was null.</exception>
            <returns>Negative return value if "other" should follow "this", zero if the two items are the same, a positive value otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.LastPart">
            <summary>
            Returns the last part of an ItemIdList as new ItemIdList.
            </summary>
            <returns>The last part of an ItemIdList.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPart(System.Int32,System.Int32)">
            <summary>
            Returns a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains only a part of the current ItemIdList.
            </summary>
            <param name="from">The index of the element of the ItemIdList where to start.</param>
            <param name="length">The number of elements of the ItemIdList that should be copied.</param>
            <returns>A new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class the contains te</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Concat(Jam.Shell.ItemIdList)">
            <summary>
            Concatenates the specified <see cref="T:Jam.Shell.ItemIdList"/> to the current one.
            </summary>
            <param name="toConcat"><see cref="T:Jam.Shell.ItemIdList"/> that should be concatenated.</param>
            <returns>A new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class which consists of the current ItemIdList and the specified <see cref="T:Jam.Shell.ItemIdList"/> concatenated.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ConcatRelativeIdList(System.IntPtr)">
            <summary>
            Concatenates a relative item idlist to the current one returning a new object
            </summary>
            <param name="idList">pointer to the relative item id list</param>
            <returns>a new ItemIdList</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.HasAttributes(Jam.Shell.SFGAOF)">
            <summary>
            Determines whether the object represented by this ItemIdList has the specified attributes.
            </summary>
            <param name="Attributes">The attributes.</param>
            <returns>True if the object has the attributes, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Reload">
            <summary>Reloads the ItemIdList by updating the ShellItem and reassigning the pidl. Turns non-functional ItemIdLists as they are sent by ShellNotifications into functional ones.</summary>
            <returns>True, if reloading the ItemIdList was successful. False if updating failed (e.g. because the associated item doesn't exist anymore).</returns>
            <remarks>If the itemIdList cannot be reloaded or the element to refresh is not existing anymore, nothing happens, the old ItemIdList stays in place, but the function returns false.</remarks>
        </member>
        <member name="F:Jam.Shell.ItemIdList.lockObj">
            <summary>
            Lock object that is used when releasing the handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ItemIdList.EmptyIdList">
            <summary>
            An empty ItemIdList.
            </summary>
            <remarks>Useful everywhere you need to pass a NULL PItemIdList to Windows API function. IItemIdList.IsInvalid returns True for this instance.</remarks>
            <seealso cref="P:Jam.Shell.ItemIdList.IsInvalid"/>
        </member>
        <member name="F:Jam.Shell.ItemIdList.m_SpecialFolder2ItemIdList">
            <summary>
            Static dictionary to cache the SpecialFolder --&gt; ItemIdList mapping.
            </summary>
            <seealso cref="P:Jam.Shell.ItemIdList.SpecialFolder"/>
        </member>
        <member name="F:Jam.Shell.ItemIdList.DESKTOP_ITEMIDLIST">
            <summary>
            Static instance of an ItemIDList to the desktop which is needed frequently in this class
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.AllocMem(System.Int32)">
            <summary>
            Allocates memory for storing an ItemIdList.
            </summary>
            <param name="size">The memory size that is required.</param>
            <returns>The pointer to the allocated memory.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPidlSize(System.IntPtr)">
            <summary>
            Calculates the size of the given Win32 ItemIdList in bytes.
            </summary>
            <param name="idList">Pointer to the Win32 ItemIdList.</param>
            <returns>The size of the given Win32 ItemIdList in Bytes.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPidlCount(System.IntPtr)">
            <summary>
            Returns the number of parts of that a Win32 ItemIdList consists.
            </summary>
            <param name="idList">A Win32 ItemIdList.</param>
            <returns>The number of parts of the given Win32 ItemIdList</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetStringFromStrRet(Jam.Shell.STRRET)">
            <summary>
            Returns the display name for the given STRRET structure.
            </summary>
            <param name="str_ret">A pointer to the STRRET structure. When the function returns, this pointer will no longer be valid.</param>
            <returns>A display name.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetStringFromStrRet(Jam.Shell.ItemIdList,Jam.Shell.STRRET)">
            <summary>
            Returns the display name for the given ItemIdList and STRRET structure.
            </summary>
            <param name="IdList">A pointer to the item's ItemIdList. This value can be NULL.</param>
            <param name="str_ret">A pointer to the STRRET structure. When the function returns, this pointer will no longer be valid.</param>
            <returns>A display name.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CopyItemIdList(System.IntPtr)">
            <summary>
            Creates a copy of a Win32 ItemIdList in the memory.
            </summary>
            <param name="source">The Win32 ItemIdList that should be copied.</param>
            <returns>The pointer to the copied Win32 ItemIdList.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CreateItemIdListForSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            Returns an ItemIdList for a special shell folder.
            </summary>
            <param name="p_SpecialFolder">An enumerated constant that identifies a system special folder.</param>
            <returns>An instance of the ItemIdList class that represents the requested <see cref="T:Jam.Shell.ShellFolder"/>.</returns>
            <remarks>The returned instances must not be disposed!! They are static.</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPidlFromPath(Jam.Shell.IShellFolder,System.String)">
            <summary>
            Returns a Pointer to a PIDL for the specified path, relative to the specified ShellFolder
             If null is passed for Shlfolder, then the Desktopfolder is used.
            </summary>
            <param name="Shlfolder">If the path is realtive, you need to supply the IShellFolder interface of the folder here, to which the path is realtive. Pass null for absolute paths.</param>
            <param name="path">The path of the element for that an PIDL should be returned.</param>
            <returns>A IntPtr representing the ItemIdList or IntPtr.Zero if the pidl could not be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ScanFolderForPath(Jam.Shell.ShellFolder,System.String,System.Int32)">
            <summary>Scans the given folder for passed path. </summary>
            <param name="pShellFolder">A ShellFolder representing the folder to scan. </param>
            <param name="pPath">A file-path.</param>
            <param name="pStartIndex">If > 0 doesn't try to find all elements of pPath, but starts at the given position.</param>
            <returns>A ItemIdList-Pointer if the element was found.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetIntPtrForNonFileSystemPath(System.String)">
            <summary>
            Tries to select a non-filesystem path like Computer\\Iphone\\Cam; bug #10117
            </summary>
            <param name="pPath">A path to a location.</param>
            <returns>A IntPtr for the given path or a parent of this path. IntPtr.Zero, if it could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.InitSpecialFolderList">
            <summary>
            Initializes the private field m_SpecialFolder2ItemIdList and m_ItemIdList2SpecialFolder if necessary.
            This method can be called multiple times, it will do its work only once.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.TestForSpecialFolder">
            <summary>
            Check if the given ItemIdList is a SpecialFolder.
            </summary>
            <returns>The SpecialFolder that is represented by the ItemIdList.</returns>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsInvalid">
            <summary>
            Returns <c>true</c> if the currently stored ItemIdList is valid; <c>false</c> otherwise;
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsInNetwork">
            <summary>
            <c>true</c> if this <see cref="T:Jam.Shell.ItemIdList"/> is part of the nethood; <c>false</c>
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Parent">
            <summary>
            Returns the parent ItemIdList or null if this instance does not have a parent.
            </summary>
            <seealso cref="P:Jam.Shell.ItemIdList.ParentPath"/>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Count">
            <summary>
            Returns the number of parts this ItemIdList consists of.
            </summary>
            <returns>The number of parts of this ItemIdList.</returns>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsRootOfNamespace">
            <summary>
            Returns true if the current ItemIdList is the root of the shell name space. This is commonly the "Desktop"
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Path">
            <summary>
            The corresponding file system path of this ItemIdList.
            This property may be empty if the current ItemIdList does not belong to a file system object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.DisplayPath">
            <summary>
            Returns a string representing the path for this item suitable for displaying.
            </summary>
            <value>
            A string representing the path of the item suitable for displaying.
            </value>
            <remarks>Compared to <see cref="P:Jam.Shell.ItemIdList.Caption"/> it returns the item's path. Compared to <see cref="P:Jam.Shell.ItemIdList.Path"/> that only returns physical paths and might be empty
            result of DisplayPath will contain a string suitable for displaying in the UI.
            </remarks>
            <seealso cref="P:Jam.Shell.ItemIdList.Caption"/>
            <seealso cref="P:Jam.Shell.ItemIdList.Path"/>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsFolder">
            <summary>
            Does this ItemIdList element represent a directory?
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.ParentPath">
            <summary>
            Returns the parent directory of the element represented by this ItemIdList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Caption">
            <summary>
            Returns the display name of the object for that this ItemIdList stands for. This does not 
            neccessarily return the complete filename of the object, refer to <see cref="P:Jam.Shell.ItemIdList.Path"/> if this
            functionality is required.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Name">
            <summary>Returns the physical name of the ItemIdList. </summary>
            <value>The physical name of the ItemIdList. </value>
        </member>
        <member name="P:Jam.Shell.ItemIdList.SpecialFolder">
            <summary>
            SpecialFolder allows you to get the type of the currently listed folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.NativeShellItem">
            <summary>
            Returns the ShellItem for the ItemIdList.
            Only works for AbsoluteItemIdLists.
            </summary>
            <value>
            An <see cref="T:Jam.Shell.IShellItemNative"/> instance representing this ItemIdList.
            </value>
        </member>
        <member name="P:Jam.Shell.ItemIdList.LinkTarget">
            <summary>
            Gets the link target if the element represented by this ItemIdList is a link.
            </summary>
            <value>
            The <see cref="T:Jam.Shell.ItemIdList"/> this instance links to, or this if an error occurred.
            </value>
        </member>
        <member name="P:Jam.Shell.ItemIdList.SpecialFolder2ItemIdList">
            <summary>
            Lazy getter for the ShellFolder --> ItemIdList dictionary.
            </summary>
        </member>
        <member name="T:Jam.Shell.IJamShellColumnCollection">
            <summary>
            Interface representing a ColumnCollection. This interface is returned by <see cref="P:Jam.Shell.JamBaseShellListView.Columns"/> 
            </summary>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="AddRemoveShellColumns" lang="C#"/> 
            </example>
            <example>
            This example adds custom columns in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="CreatingCustomColumns" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Show(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at its default shell position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be shown.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> that was added.</returns>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="AddRemoveShellColumns" lang="C#"/> 
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Add(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be added.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> that was added.</returns>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="AddRemoveShellColumns" lang="C#"/> 
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Insert(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inserts the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the passed position.
            </summary>
            <param name="pIndex">The position to insert the column at.</param>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be shown.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> that was added.</returns>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Add(System.Windows.Forms.ColumnHeader)">
            <summary>
            Adds the specified ColumnHeader to the collection. 
            </summary>
            <param name="pHeader">The ColumnHeader to add.</param>
            <returns>The position the column was added at.</returns>
            <example>
            This example adds custom columns in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="CreatingCustomColumns" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Remove(Jam.Shell.JamShellColumnHeader)">
            <summary>
            Removes the specified ColumnHeader from the collection.
            </summary>
            <param name="pHeader">The ColumnHeader to remove.</param>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Remove(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column.</param>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
            <example>This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source="CodeExamples.cs" region="AddRemoveShellColumns" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.GetColumnByShellIndex(System.Int32)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> identified by the passed shell index.
            </summary>
            <param name="pShellIndex">The shell index of the column.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> with the specified shell index.</returns>
            <example><code source="CodeExamples.cs" region="AccessingColumns" lang="C#"/></example> 
        </member>
        <member name="P:Jam.Shell.IJamShellColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Jam.Shell.JamShellColumnHeader"/>.
            </value>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> at the specified index, an <see cref="T:System.ArgumentOutOfRangeException"/> if the index does not exist.</returns>
        </member>
        <member name="P:Jam.Shell.IJamShellColumnCollection.Item(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>
            </summary>
            <value>
            The <see cref="T:Jam.Shell.JamShellColumnHeader"/>.
            </value>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> with the specified SHCOLUMNID. Null if the SHCOLUMNId does not exist.</returns>
            <example><code source="CodeExamples.cs" region="AccessingColumns" lang="C#"/></example> 
        </member>
        <member name="T:Jam.Shell.JamShellColumnCollection">
            <summary>
            The ColumnCollection class used internally in <see cref="T:Jam.Shell.JamBaseShellListView"/>s and subtypes. The instance can be accessed via its interface <see cref="T:Jam.Shell.IJamShellColumnCollection"/>
            </summary>
            <seealso cref="T:Jam.Shell.IJamShellColumnCollection"/>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.Columns"/>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.#ctor(Jam.Shell.JamBaseShellListView)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Add(System.Windows.Forms.ColumnHeader)">
             <summary>
             Adds an existing System.Windows.Forms.ColumnHeader to the collection.
             </summary>
             <param name="pValue">The System.Windows.Forms.ColumnHeader to add to the collection.</param>
             <returns>The zero-based index into the collection where the item was added.</returns>
            <remarks>ColumnHeaders that are not of type JamShellColumnHeader are cloned to the correct type.</remarks>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Add(Jam.Shell.JamShellColumnHeader)">
            <summary>
            Adds an existing JamShellColumnHeader to the collection.
            </summary>
            <param name="pValue">The JamShellColumnHeader to add to the collection. </param>
            <returns>The zero-based index into the collection where the item was added.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Clear">
            <summary>
            Removes all column headers from the collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the ColumnHeader located at the specified index.
            </summary>
            <param name="pIndex">Index of the ColumnHeader in the collection to be removed.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Show(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Shows the specified shell column at the position passed.
            </summary>
            <param name="pShellColumnId">The shell column to be displayed.</param>
            <param name="pPos">The position to show it at.</param>
            <returns>A <see cref="T:Jam.Shell.JamShellColumnHeader"/> for the newly created header. Returns null, if the passed SHCOLUMNID is not available.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Show(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at its default shell position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be shown.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Add(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be added.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(System.Int32)">
            <summary>
            Adds the header for the passed shell index. Doesn't load contents.
            </summary>
            <param name="pShellIndex">The shell index.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(System.Int32,System.Int32)">
            <summary>
            Adds the header at the specified position. Doesn't load contents.
            </summary>
            <param name="pPosition">The position to add the column at.</param>
            <param name="pShellIndex">The shell index of the column.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the header for the passed SHCOLUMNID.
            </summary>
            <param name="pShellColumnId">A SHCOLUMNID representing the column.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the header at the specified position.
            </summary>
            <param name="pPosition">The position.</param>
            <param name="pShellColumnId">A SHCOLUMNID representing the column.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.GetColumnByShellIndex(System.Int32)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> identified by the passed shell index.
            </summary>
            <param name="pShellIndex">The shell index of the column.</param>
            <returns>
            The <see cref="T:Jam.Shell.JamShellColumnHeader"/> with the specified shell index.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.GetColumnBySHColumnID(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the column specified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true if the there is a column displaying the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.HasCustomColumns">
            <summary>
            Returns true if the list contains custom columns.
            </summary>
            <returns>true if there are custom columns, false if all colums are ShellColumns or there are no columns at all.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.IsCustomColumn(System.Int32)">
            <summary>
            Determines whether the column specified by the passed index is a custom column, i.e. no ShellColumn, but one that contains user defined data.
            </summary>
            <param name="pIndex">Index of the column.</param>
            <returns>True if the column exists and is a custom column, false otherwise. Passing values exeeding the range of existing columns returns false.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Insert(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inserts the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the passed position.
            </summary>
            <param name="pIndex">The position to insert the column at.</param>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be shown.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Remove(Jam.Shell.JamShellColumnHeader)">
            <summary>
            Removes the specified ColumnHeader from the collection.
            </summary>
            <param name="pHeader">The ColumnHeader to remove.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Remove(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column.</param>
        </member>
        <member name="P:Jam.Shell.JamShellColumnCollection.Item(System.Int32)">
            <summary>
            Gets the JamColumnHeader at the specified index within the collection.
            </summary>
            <param name="pIndex">The index of the column header to retrieve from the collection.</param>
            <returns>A JamShellColumnHeader representing the column header located at the specified index.</returns>
        </member>
        <member name="P:Jam.Shell.JamShellColumnCollection.Item(System.String)">
            <summary>
            Gets the column header with the specified key from the collection.
            </summary>
            <param name="pKey">The key of the column header to retrieve from the collection.</param>
            <returns>A JamShellColumnHeader representing the column header with the specified key.</returns>
        </member>
        <member name="P:Jam.Shell.JamShellColumnCollection.Item(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> with the specified <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <value>
            The <see cref="T:Jam.Shell.JamShellColumnHeader"/>.
            </value>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>A JamShellColumnHeader representing the column header with the specified <see cref="T:Jam.Shell.SHCOLUMNID"/>.</returns>
        </member>
        <member name="T:Jam.Shell.JamShellColumnHeader">
            <summary>
            Represents a single column header in a <see cref="T:JamBaseShellListView"/> control.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamShellColumnHeader.DefaultColumnWidth">
            <summary>
            The default column width.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnHeader"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnHeader"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.#ctor(System.Windows.Forms.ColumnHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnHeader"/> class.
            </summary>
            <param name="pCloneFrom">A ColumnHeader that should be cloned.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.LoadShellIndex(Jam.Shell.ShellBrowser,System.Int32,System.Int32)">
            <summary>
            Loads the passed ShellIndex into the column, i.e. it's caption and width, not its contents.
            It is assumed that the Column is already contained in a Collection.
            </summary>
            <param name="pShellBrowser">A valid ShellBrowser instance. This is needed to retreive the correct</param>
            <param name="pShellIndex">The ShellIndex representing the column to get the column information from.</param>
            <param name="pWidth">The wanted width of the column. Only used if > 0.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.IsCustomColumn">
            <summary>
            Determines whether this column is a custom column instead of a shell column. 
            </summary>
            <returns>true if the column is a custom column, false if it is a shell column.</returns>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.ShellIndex">
            <summary>
            Gets or sets the ShellIndex of the column and  loads the ColumnHeader for the ShellIndex if the ColumnHeader is alreay part of a JamShellColumnCollection. 
            Contents of the column are not loaded or refreshed however. 
            </summary>
            <value>
            The ShellIndex of the column; 0 is always the column containing the name of an item.
            </value>
            <remarks>The ShellIndex is an integer that identifies the column. 
            It's meaning is relative to the <see cref="P:Jam.Shell.ShellListView.SpecialFolder"/> the List currently displays.
            </remarks>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.ShellColumnId">
            <summary>
            Gets or sets the ShellColumnId and loads the ColumnHeader for the ShellColumnId if the ColumnHeader is alreay part of a JamShellColumnCollection. 
            Contents of the column are not loaded or refreshed however. 
            </summary>
            <value>
            A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.
            </value>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.Visible">
            <summary>
            Gets or sets a value indicating whether the column is currently visible.
            </summary>
            <value>
              <c>true</c> if the col is visible <c>false</c> otherwise.
            </value>
            <remarks>If visible is false the column might either not be available or currently being hidden.</remarks>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.FixedPosition">
            <summary>
            Gets or sets a value indicating whether the column should have a fixed position rather than being moved by other shell columns.
            </summary>
            <value>
              <c>true</c> if the column cannot be moved to the right by other ShellColumns, false otherwise. <c>false</c>.
            </value>
        </member>
        <member name="T:Jam.Shell.PathEdit">
            <summary>
            The PathEdit is a simple component that allows the user to enter a path or to browse for it. 
            The user can open a browse dialog by pressing the button on the right. Use the Path property 
            to set a default path or the get the path that the user has finally chosen. 
            Use The FolderMode property to define if the user should enter / browse for a path to a file 
            or a folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.PathEdit.c_PropertyPath">
            <summary>
            Constant for the INotifyPropertyChanged interface
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.PathEdit"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnHandleCreatedForEditField(System.Object,System.EventArgs)">
            <summary>
            This event is triggered after the handle of the EditField control was created.
            It sends the autocompletion mode
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">the event arguments when this Event occurs</param>
        </member>
        <member name="M:Jam.Shell.PathEdit.BrowseForFolder">
            <summary>
            Internal method, which handles the browsing for folders.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.BrowseForFile">
            <summary>
            Internal method, which handles the browsing for files.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.Focus">
            <summary>
            Sets input focus to the TextBox control.
            </summary>
            <returns>If TextBox control has focus it returns true, otherwise false.</returns>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnResize(System.EventArgs)">
            <summary>
            Handles the resizing of PathEdit component.
            </summary>
            <param name="e">Contains general event data.</param>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnChange">
            <summary>
            Fires the Change event, when the text in the TextBox changes.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnPropertyChanged(System.String)">
            <summary>
            This method invokes the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:Jam.Shell.PathEdit.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.DialogTitle">
            <summary>
            Change the window title of the browse dialog, that will be opened if the user pressed the browse button on the right.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FileFilter">
            <summary>
            Edit your own filter options for the opendialog.
            Example: Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FolderMode">
            <summary>
            Use this property to select if the dialog for browsing for a file, or for a folder should be displayed.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.IsValidPath">
            <summary>
            Check if the selected file or folder is existing on your system at the moment.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Path">
            <summary>
            Use this property to get or set the path in the edit field.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.DefaultExt">
            <summary>
            Gets or sets the default file name extension.
            Example: "txt"
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Focused">
            <summary>
            Gets a value indicating whether the TextBox control has input focus.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.TextBox">
            <summary>
            Gives access to the embedded TextBox.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.ToolTip">
            <summary>
            Sets the ToolTip text for the embedded TextBox.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.ContextMenuStrip">
            <summary>
            Get or set the contextmenu strip of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Text">
            <summary>
            Get or set the text visible in the editor.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Button">
            <summary>
            Gives access to the embedded Button.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FolderBrowserDialog">
            <summary>
            Returns a reference to a FolderBrowserDialog.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FileBrowserDialog">
            <summary>
            Returns a reference to an OpenFileDialog
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FileNames">
            <summary>
            Contains the selected files from the FileBrowserDialog.
            </summary>        
        </member>
        <member name="P:Jam.Shell.PathEdit.ShellAutoCompletionMode">
            <summary>
            This property controls the availability of the shells autocompletion mode,
            if set to FileSystem, Url or both, the PathEdit control provides autocompletion
            mode with a via a drop down box.
            If disabled the default behavior is used. 
            Both, FileSystem and Url can be specified at once.
            <see cref="F:Jam.Shell.ShellAutoComplete.FileSystem"/> is enabled by default.
            <see cref="F:Jam.Shell.ShellAutoComplete.Url"/> needs to be used to also provide autocompletion for UNC-Paths.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.Change">
            <summary>
            Occurs when the Text in the TextBox changes.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.ButtonClick">
            <summary>
            This event occurs if the button of the PathEdit control has been clicked.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldClick">
            <summary>
            This event occurs if the user clicked on the editfield.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldKeyDown">
            <summary>
            Occurs when a key is pressed while the edit field has focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldKeyUp">
            <summary>
            Occurs when a key is released while the edit field has focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldKeyPress">
            <summary>
            Occurs when a key is pressed while the edit field has focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldEnter">
            <summary>
            Occurs when the edit field is entered and gains focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldLeave">
            <summary>
            Occurs when the edit field is left and lost focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.PropertyChanged">
            <summary>
            This event is issued if the TextField in the PathEdit changed.
            It is available here to be able to add a DataBinding to the <see cref="P:Jam.Shell.PathEdit.Path"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.StreamWrapper">
            <summary>
            Provides a very basic implementation of System.Runtime.InteropServices.IStream that wraps an System.IO.Stream.
            </summary>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.#ctor(System.IO.Stream)">
            <summary>
            Initialises a new instance of the StreamWrapper class, using the specified System.IO.Stream.
            </summary>
            <param name="inner"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="ppstm"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Commit(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="grfCommitFlags"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="pstm"></param>
            <param name="cb"></param>
            <param name="pcbRead"></param>
            <param name="pcbWritten"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="libOffset"></param>
            <param name="cb"></param>
            <param name="dwLockType"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Reads a sequence of bytes from the underlying System.IO.Stream.
            </summary>
            <param name="pv"></param>
            <param name="cb"></param>
            <param name="pcbRead"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Revert">
            <summary>
            This operation is not supported.
            </summary>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>
            Advances the stream to the specified position.
            </summary>
            <param name="dlibMove"></param>
            <param name="dwOrigin"></param>
            <param name="plibNewPosition"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.SetSize(System.Int64)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="libNewSize"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>
            Returns details about the stream, including its length, type and name.
            </summary>
            <param name="pstatstg"></param>
            <param name="grfStatFlag"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="libOffset"></param>
            <param name="cb"></param>
            <param name="dwLockType"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Writes a sequence of bytes to the underlying System.IO.Stream.
            </summary>
            <param name="pv"></param>
            <param name="cb"></param>
            <param name="pcbWritten"></param>
        </member>
        <member name="M:Jam.Shell.Log.LogException(System.String,System.Exception)">
            <summary>
            Logs the exception if Debug Build is used.
            </summary>
            <param name="msg"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.Log.LogDebugMessage(System.String)">
            <summary>
            Writes a message if Debug build is used.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Jam.Shell.Log.LogMessage(System.String)">
            <summary>
            Writes a message if TRACE is defined (in Debug and Release Builds).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:Jam.Shell.LoadPreviewEventArgs">
            <summary>
            The event arguments for ShellFilePreview.LoadPreview.
            Set the <see cref="P:Jam.Shell.LoadPreviewEventArgs.PreviewHandlerGuid"/>  if you want to use a custom Preview Handler or provide your own Preview Handler implementation in <see cref="P:Jam.Shell.LoadPreviewEventArgs.CustomPreviewHandler"/>
            </summary>
            <seealso cref="E:Jam.Shell.ShellFilePreview.LoadPreview"/>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.Path">
            <summary>
            Contains the path of the file or folder that is being loaded.
            </summary>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.LoadThumbnail">
            <summary>
            Set this property to true if the thumbnail of the file should be shown instead of the preview handler.
            Sets the previewHandlerGuid to Guid.Empty.
            </summary>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.PreviewHandlerGuid">
            <summary>
            Set a valid PreviewHandler Guid to use a custom preview handler.
            If null the PreviewHandler is determined automatically.
            If set to Guid.Empty the file is not previewed. Depending on LoadThumbnail its' thumbnail is loaded.
            </summary>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.CustomPreviewHandler">
             <summary>
             Set your own IShellPreviewHandler implementation to custom preview files.
             </summary>
             <value>
             An object implementing <see cref="T:Jam.Shell.IShellPreviewHandler"/>
             </value>
             <example>
             The following example loads cs files into a textbox.
             <code>
            class CustomPreviewHandler : IShellPreviewHandler
            {
              private TextBox m_TextBox;
            
              public bool Load(ShellFilePreview parent, string p_Path, ItemIdList p_AbsolutePidl)
              {
                m_TextBox = new TextBox();
                m_TextBox.Dock = DockStyle.Fill;
                m_TextBox.Parent = parent;
                m_TextBox.WordWrap = false;
                m_TextBox.ScrollBars = ScrollBars.Both;
                m_TextBox.Multiline = true;
                m_TextBox.Text = System.IO.File.ReadAllText(p_Path);
                parent.Controls.Add(m_TextBox);
                return true;
              }
            
              public void Show()
              {
              }
              
              public void Unload()
              {
                m_TextBox.Dispose();
              }
            
              public void Resize()
              {
               //nothing to do.
              }
            }
             
            private void shellFilePreview1_LoadPreview(object sender, LoadPreviewEventArgs e)
            {
              string file = e.Path;
              if (String.IsNullOrEmpty(file))
              {
                return;
              }
              if (".cs".Equals(System.IO.Path.GetExtension(file), StringComparison.OrdinalIgnoreCase))
              {
                e.CustomPreviewHandler = new CustomPreviewHandler();
              }
              else if (e.PreviewHandlerGuid == null)
              {
                //add actions to take if no registered PreviewHandler is available.
              }
            }
             </code>
             </example>
        </member>
        <member name="T:Jam.Shell.IShellPreviewHandler">
             <summary>
            Interface that is used by the <see cref="T:Jam.Shell.ShellFilePreview"/> component for the preview of different file types
             </summary>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Load(Jam.Shell.ShellFilePreview,System.String,Jam.Shell.ItemIdList)">
            <summary>
            Loads the file given through the parameters
            </summary>
            <param name="p_Parent">The ShellFilePreview component that hosts the preview.</param>
            <param name="p_Path">The file path to be displayed</param>
            <param name="p_AbsolutePidl">The absolute ItemIdList of the file to be displayed.</param>
            <returns>true if loading succeeded</returns>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Unload">
            <summary>
            Unloads the file and the preview.
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Show">
            <summary>
            Displays the Preview. 
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Resize">
            <summary>
            Resizes the preview
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellFilePreview">
            <summary>
            Use this component to display a preview of a file. Depending on the installed PreviewHandlers not all files types support a preview.
            If no preview is registered, a thumbnail of the file is shown.
            You may either use the <see cref="P:Jam.Shell.ShellFilePreview.Path"/> property to set a path to a file to load the preview or you may synchronize it to a <see cref="T:Jam.Shell.ShellListView"/> or <see cref="T:Jam.Shell.ShellTreeView"/> 
            component using the <see cref="P:Jam.Shell.ShellFilePreview.ShellControlConnector"/> property.
            </summary>
            <remarks>The component is using the Preview Handlers registered in the system to display the files, so that normally the same files that Windows Explorer can preview should be supported.
            There are occasional problems concerning the bitness of the application using the ShellFilePreview vs. the bitness of the PreviewHandler registered for a filetype. 
            With the <see cref="E:Jam.Shell.ShellFilePreview.LoadPreview"/> event it is also possible to use existing PreviewHandlers to display other file extensions.
            If you want to preview Microsoft Outlook .msg files and only the header is displayed, make sure to have Visual Styles enabled for your application. Call "Application.EnableVisualStyles()"
            or change your application manifest accordingly.
            </remarks>
            
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.WebPreviewHandler">
            <summary>The GUID of the WebPreviewHandler class. </summary>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_DisplayMsg">
            <summary>
            Message that is drawn on the control to indicate the status
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_ItemIdList">
            <summary>
            The absolute ItemIdList of the selected file.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_CanLoadItemIdListAsThumbnail">
            <summary>
            Temporary storage for LoadPreviewEventArgs.LoadThumbnail
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_CurrentPreviewHandler">
            <summary>
            The PreviewHandler that was last retreived
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.#ctor">
            <summary>
            Initialialises a new instance of the ShellFilePreview class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Dispose(System.Boolean)">
            <summary>
            Disposal method for the object that also cleans up resources that are used.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnEnabledChanged(System.EventArgs)">
            <summary>
            While disabled the control only stored the current filename. 
            On enabling a FullRefresh is triggered.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnResize(System.EventArgs)">
            <summary>
            Passes the resize event to the current PreviewHandler 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the error message text on the ShellFilePreview control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnLoadPreview(Jam.Shell.LoadPreviewEventArgs)">
            <summary>
            Calls the <see cref="E:Jam.Shell.ShellFilePreview.LoadPreview"/> event.
            </summary>
            <param name="eventArgs">A <see cref="T:Jam.Shell.LoadPreviewEventArgs"/> instance containing information about the file that is about to be previewed.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.PreviewHandlerGuidForType(System.String)">
            <summary>
            Searches the registry for a registered PreviewHandler for the fileextension that is passed.
            </summary>
            <param name="ext">The file extension (must be lowercase, including the beginning "."</param>
            <returns>The Guid of the ComObject that can handle files ending in the extension that is passed</returns>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Open(Jam.Shell.ItemIdList)">
            <summary>
            Opens the path that is passed with the matching preview handler.
            </summary>
            <param name="fileItemIdList">ItemIdList of the file to be previewed</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Clear">
            <summary>
            Clears the preview
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            Refreshes the control.
            </summary>
            <param name="pLevel">Ignored. A <see cref="M:Jam.Shell.ShellFilePreview.FullRefresh"/> is always triggered.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            Refreshes the control.
            </summary>
            <param name="pLevel">Ignored. A <see cref="M:Jam.Shell.ShellFilePreview.FullRefresh"/> is always triggered.</param>
            <param name="pItemIdList">Ignored. The currently displayed File is reloaded.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.FullRefresh">
            <summary>
            Forces the reload of the current file.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.SmartRefresh">
            <summary>
            Forces the reload of the current file. There is no difference compared to <see cref="M:Jam.Shell.ShellFilePreview.FullRefresh"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Called by <see cref="c:ShellControlConnector"/> when the current folder has changed.
            </summary>
            <param name="p_ItemIdList">Not supported.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Called by <see cref="c:ShellControlConnector"/> when the selected file has changed.
            </summary>
            <param name="p_ItemIdList"><see cref="P:Jam.Shell.ShellFilePreview.ItemIdList"/> of the newly selected file or null.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.GoUp">
            <summary>
            Not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.PrintRegisteredPreviewHandlers">
            <summary>
            For debugging purposes: prints the registered PreviewHandlers to Debug Log
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.ItemIdList">
            <summary>
            Gets or sets the absolute ItemIdList that is previewed. 
            </summary>
            <remarks>As compared to the <see cref="P:Jam.Shell.ShellFilePreview.Path"/> property there are files that do not have a physical path but still have an ItemIdList (like files on attached devices). 
            If the ShellFilePreview shall be synchronized with other ShellBrowser components this is most easily done using the <see cref="P:Jam.Shell.ShellFilePreview.ShellControlConnector"/> property.
            However currently synchronization to a <see cref="T:Jam.Shell.FileList"/> is not supported. In this case you can use this property to do a manual synchronization.
            </remarks>
            <value>An <see cref="P:Jam.Shell.ShellFilePreview.ItemIdList"/></value>
            <example>
            The following example uses the property to synchronize with a FileList
            <code>
            if (fileList1.SelectedItems.Count &gt; 0)
            {
                shellFilePreview1.ItemIdList = ((FileListItem) fileList1.SelectedItems[0]).AbsoluteItemIdList;
            }
            </code>
            </example>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.Path">
            <summary>
            Gets or sets the path of the file that is displayed. 
            </summary>
            <value>
            An absolute path.
            </value>
            <exception cref="T:System.IO.FileNotFoundException"> is thrown if the file does not exist.</exception>
            <remarks>If the ShellFilePreview should be synchronized to a <see cref="T:Jam.Shell.ShellListView"/> or a <see cref="T:Jam.Shell.ShellSystemList"/> it is easier to assign the <see cref="P:Jam.Shell.ShellFilePreview.ShellControlConnector"/>
            property to both components. 
            </remarks>
            <seealso cref="P:Jam.Shell.ShellFilePreview.ItemIdList"/>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.AutomaticRefresh">
            <summary>
            Controls whether the component automatically reloads the preview when the file is changed. "
            </summary>
            <value>
              <c>true</c> if previews are refreshed automatically otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Jam.Shell.ShellFilePreview.LoadPreview">
            <summary>
            Event is thrown when a file is previewed. It can be implemented to set a custom preview control.
            </summary>
            <example> 
            This example shows how to use the HTML preview handler for files with the extensions CSM:
            <code>
            private void shellFilePreview1_LoadPreview(object sender, LoadPreviewEventArgs e)
            {
              if (string.IsNullOrEmpty(e.Path))
                return;
              if (".cms".Equals(Path.GetExtension(e.Path), StringComparison.OrdinalIgnoreCase))
                e.PreviewHandlerGuid = new Guid("F8B8412B-DEA3-4130-B36C-5E8BE73106AC");
            }
            </code>
            </example>
            <example>
            To provide a custom Previewhandler see example at <see cref="P:Jam.Shell.LoadPreviewEventArgs.CustomPreviewHandler"/>
            
            <code>
            </code>
            </example>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.ShellControlConnector">
            <summary>
            ShellControlConnector for this class. Set this property to the same <see cref="c:ShellControlConnector"/> instance of a <see cref="T:Jam.Shell.ShellListView"/>, <see cref="T:Jam.Shell.ShellTreeView"/> or <see cref="T:Jam.Shell.ShellSystemList"/>
            to keep the <see cref="T:Jam.Shell.ShellFilePreview"/> in sync with these components. It will then always preview the selected file.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellFilePreview.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.IsInitialized">
            <summary>
            Indicates whether the component is initialized.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="T:Jam.Shell.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.AllControlPanelItems">
            <summary>
              Looks up a localized string similar to All Control Panel Items.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ArrangeIconsBy">
            <summary>
              Looks up a localized string similar to Arrange Icons by:.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Blank">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ControlPanel">
            <summary>
              Looks up a localized string similar to Control Panel.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Elipsis">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ExplorerBrowser16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ExtensionsHiddenKey">
            <summary>
              Looks up a localized string similar to Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ExtensionsHiddenValue">
            <summary>
              Looks up a localized string similar to HideFileExt.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.FileExists">
            <summary>
              Looks up a localized string similar to File already exists..
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamComponent_Checkbox_Warning">
            <summary>
              Looks up a localized string similar to A ShellControlConnector must be assigned to the ShellControlConnector property of this .
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamPathEdit16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellChangeNotifier16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellCombo16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellControlConnector16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellCustomCombo16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellDriveList16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellFileList16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellFilePreview16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellHistoryToolStrip16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellHistoryToolStripArrowLeft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellHistoryToolStripArrowRight">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellList16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellTree16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamThumbnailImage16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ListView_OwnerDraw">
            <summary>
              Looks up a localized string similar to OwnerDraw must stay true for the ShellListView to work.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Location_Unavailable">
            <summary>
              Looks up a localized string similar to Location unavailable.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.NewFolder">
            <summary>
              Looks up a localized string similar to New Folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.NewShortcut">
            <summary>
              Looks up a localized string similar to New Shortcut.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ParentFolder">
            <summary>
              Looks up a localized string similar to ...
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ShellBrowserIcon16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ShellNewRegistryKey">
            <summary>
              Looks up a localized string similar to Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Discardable\\PostSetup\\ShellNew.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.TreeView_ShowLines_Warning">
            <summary>
              Looks up a localized string similar to The ShowLines property can&apos;t be activated, if UseSystemStyles is set to true and the detected operating system is Windows Vista or later. This is to keep the look&amp;feel consistent, ShowLines together with the Vista TreeView..
            </summary>
        </member>
        <member name="T:Jam.Shell.PathCollection">
            <summary>
            A class that allows to store paths and prevents duplicates
            </summary>
        </member>
        <member name="F:Jam.Shell.PathCollection.m_UpdateCounter">
            <summary>
            Indicates whether the list is changing at the moment; bug #9923
            </summary> 
        </member>
        <member name="F:Jam.Shell.PathCollection.m_AllowDuplicates">
            <summary>
            Normally list only takes unique paths. In certain cases (e.g. in the BeforeShellDrop/OperationPerformed EventArgs, allowing duplicates is required).
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor">
            <summary>
            Initializes a new instance of the <b><see cref="T:Jam.Shell.PathCollection"/></b> class 
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it with the given enumerable string collection.
            </summary>
            <param name="p_StringCollection">Items with that the list should be filled initially.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(System.Windows.Forms.IDataObject)">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it
            with the filename(s) in the given IDataObject
            </summary>
            <param name="p_dataObject">IDataObject from Drag+Drop</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(System.Collections.Specialized.StringCollection)">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it with the given <b>StringCollection</b>
            </summary>
            <param name="p_StringCollection">Items with that the list should be filled initially.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it with the given <c>String</c>.
            </summary>
            <param name="p_InitialMember">A string which should be the first item in the <see cref="T:Jam.Shell.PathCollection"/>.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Dispose">
            <summary>
            Releases ressources.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.Dispose(System.Boolean)">
            <summary>
            Releases managed ressources.
            </summary>
            <param name="disposing">The handle that the ItemIdList instance keeps is released if this parameter is true</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.ToString">
            <summary>
            Override the inherited method ToString().
            </summary>
            <returns>Returns a string, which contains all entries of the <see cref="T:Jam.Shell.PathCollection"/> list.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.OnChanged">
            <summary>
            Fires the Change event.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.OnChanging">
            <summary>
            Fires the Changing event.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.AddPath(System.String)">
            <summary>
            Adds the given path to the list of path. It does not fire the Changing and Change event.
            </summary>
            <param name="aPath">The file system path that should be added.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Add(System.String)">
            <summary>
            Adds the given path to the list of path.
            </summary>
            <param name="item">The file system path that should be added.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Add(System.Collections.IEnumerable)">
            <summary>
            Add all items of the given enumrable class to the list.
            </summary>
            <param name="eEnum"><b>IEnumerable</b> interface of the items that should be added.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Delete(System.Int32)">
            <summary>
            Removes the path with the given index from the list.
            </summary>
            <param name="index">The index of the path that should be removed.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Remove(System.String)">
            <summary>
            Removes a path from the list.
            </summary>
            <param name="item">The path that should be removed</param>
            <returns><b>true</b> if <paramref name="item"/> was found and removed successfully; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.PathWasRenamed(System.String,System.String)">
            <summary>
            Call this method to update the collection, e.g. upon path rename.
            </summary>
            <param name="p_OldName">The old name of the item</param>
            <param name="p_NewName">The new name of the item</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator">
            <summary>
            Retuend the enumerator for the entire list.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire list.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.Objects(System.Int32)">
            <summary>
            Returns the object associated with a path.
            </summary>
            <param name="index">The index of the path for that the associated object should be returned</param>
            <returns>The object associated with this path.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.Update(System.Int32,System.Object)">
            <summary>
            Updates the object associated with a path.
            </summary>
            <param name="index">The index of the item that should be updated.</param>
            <param name="o">The new object that should be associated with the this item.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Contains(System.String)">
            <summary>
            Returns true if the given path is in the list
            </summary>
            <param name="item">A file system path</param>
            <returns>true, if the path is contained in the list, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the given path.
            </summary>
            <param name="item">The path for that the index should be returned.</param>
            <returns>The index of the path in this collection if the given path was found; -1 otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.Clear">
            <summary>
            Removes all elements from the list
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.Clone">
            <summary>
            Creates a copy of the current PathCollection
            </summary>
            <returns>A PathCollection object with the same elements as the current one</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Jam.Shell.PathCollection"/> to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Jam.Shell.PathCollection"/>. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.UnifyPath(System.String)">
            <summary>
            Brings the path into a unified format. This makes it easier to eliminate duplicates.
            </summary>
            <param name="aPath">the path that should be formated</param>
            <returns>The given path in a unified format</returns>
        </member>
        <member name="F:Jam.Shell.PathCollection.DOUBLE_SLASH">
            <summary>
            Contains a pair of slashes as it appears at the beginning of UNC paths.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.IncludeTrailingPathDelimiter(System.String)">
            <summary>
            Makes sure that the given paths end with System.IO.Path.DirectorySeparatorChar.
            </summary>
            <param name="aPath">A directory path</param>
            <returns>The given path with one trailing DirectorySeparatorChar</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.ExcludeTrailingPathDelimiter(System.String)">
            <summary>
            Makes sure that the given paths does not end with System.IO.Path.DirectorySeperatorChar.
            </summary>
            <param name="aPath">A directory path</param>
            <returns>The given path without a trailing DirectorySeperatorChar</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.FileOrFolderExists(System.String)">
            <summary>
            Checks if the given path exists.
            </summary>
            <param name="aPath">A path to a file or directory</param>
            <returns>true, if the given path exists on the current PC, false if it does not exist.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsAbsolutePath(System.String)">
            <summary>
            Determines if the given path is absolute.s
            </summary>
            <param name="p"></param>
            <returns>true if the path is absolute</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsLocalPath(System.String)">
            <summary>
            Checks if the given path is an absolute local path (including mapped network drives), i.e. if it starts with a drive letter and is followed by a colon and a backslash ("c:\")
            </summary>
            <param name="p">The path to check</param>
            <returns>true if the given path is an absolute local path or mapped network drive, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsDrive(System.String)">
            <summary>
            Checks if the given path is a drive.
            </summary>
            <param name="aPath">A file system path</param>
            <returns>true, if the given path is a directory like "C:\", flase otherwise</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetLongPath(System.String)">
            <summary>
            A wrapper for ShellApi.GetLongPathName
            </summary>
            <param name="path">A file system path that is suspected to be in 8.3 stye (c:\docume~1\filexy~2.txt)</param>
            <returns>The long file name</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.SamePath(System.String,System.String)">
            <summary>
            Checks if two paths are identical
            </summary>
            <param name="path1">A file system path</param>
            <param name="path2">Another file system path</param>
            <returns>true, if both paths are identical, false if they differ</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsUNCPath(System.String)">
            <summary>
            Checks if the given path is a UNC path like \\Server\share. It does not check if the path really exists.
            see also http://msdn2.microsoft.com/en-us/library/aa365247.aspx#maximum_path_length
            </summary>
            <param name="aPath">A path that should be checked</param>
            <returns>ture, if the given path is a UNC path, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetDomainFromUNCPath(System.String)">
            <summary>
            Returns the domain name from a UNC path
            </summary>
            <param name="aPath">A UNC path.</param>
            <returns>The domain part of a UNC path. null if the given path is not a UNC path.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetUNCPathFromMappedDrive(System.String)">
            <summary>
            This method needs the mpr.dll to work. (UNCPath length = max 1024 chars)
            This method should only be used with mapped drives, e.g. for a fixed drive an IOException occurs (Not Connected)
            See <see cref="P:System.IO.DriveInfo.DriveType"/> to determine whether the drive is a network share.
            </summary>
            <param name="filePath">The path to be converted</param>
            <returns>converted path </returns>
            <exception cref="T:System.ArgumentException">If the argument is not a valid path</exception>
            <exception cref="T:System.IO.IOException">If the windows system call fails</exception>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetParentPathFromPath(System.String)">
            <summary>
            Returns the parent path of the given path.
            </summary>
            <param name="aPath">The path of a file or directory.</param>
            <returns>A <see cref="T:System.String"/> containing the parent path for <paramref name="aPath"/>, or a null reference if <paramref name="aPath"/> denotes a root directory.</returns>
            <remarks>The given for directories may or may not include a trailing path delimiter char, it will not have any influence on the result.</remarks>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsSubPathOf(System.String,System.String)">
            <summary>
            Checks if a given path is a parent path of the other given path.
            </summary>
            <param name="p_SuperiorPath">The possible parent (superior) path.</param>
            <param name="p_PossibleSubPath">A path for that should be checked if it is a sub-path of <paramref name="p_SuperiorPath"/>.</param>
            <returns>true if <paramref name="p_SuperiorPath"/> is a prent path of <paramref name="p_PossibleSubPath"/>.</returns>
            <remarks><paramref name="p_SuperiorPath"/> does not necessarily need to ba a direct parent of <paramref name="p_PossibleSubPath"/></remarks>
            <example>
            <para><code>PathCollection.IsSubPathOf(@"C:\", @"C:\Windows\System32")</code> returns <b>true</b>.</para>
            <para><code>PathCollection.IsSubPathOf(@"C:\Temp", @"C:\Windows\System32")</code> returns <b>false</b>.</para>
            </example>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize(System.String)">
            <summary>
            Returns the size of a folder, including all files in all subfolders.
            </summary>
            <param name="p_Path">The full path of the folder.</param>
            <returns>The size of the given folder in Bytes.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.ArgumentNullException"><i>p_Path</i> is a null reference</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.PathTooLongException">The given path contains a subfolder that's fullpath has more than 260 characters.</exception>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFileSize(System.String)">
            <summary>
            Gets the file size in byte. 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFiles(System.String)">
            <summary>
            Get files in path given as a parameter
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Get files from path given as a parameter
            </summary>
            <param name="path"></param>
            <param name="searchPattern"></param>
            <param name="searchOption"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize(System.String,System.Int32@,System.Int32@)">
            <summary>
            Returns the size of a folder, including all files in all subfolders, and the file count.
            </summary>
            <param name="p_Path">The full path of the folder.</param>
            <param name="p_FileCount">A variable in that the number of files will be returned.</param>
            <param name="p_FolderCount">A variable in that the number of subfolders will be returned.</param>
            <returns>The size of the given folder in Bytes.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.ArgumentNullException"><i>p_Path</i> is a null reference</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <summary>
            path must include a trailing backslash
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize260(System.String,System.Int32@,System.Int32@)">
            <summary>
            Returns the size of a folder, including all files in all subfolders, and the file count for paths that 
            don't contain folders longer than 260 characters, this is the old implementation that was used in ShellBrowser.Net
            up to and including version 4.0.0.3
            </summary>
            <param name="p_Path">The full path of the folder.</param>
            <param name="p_FileCount">A variable in that the number of files will be returned.</param>
            <param name="p_FolderCount">A variable in that the number of subfolders will be returned.</param>
            <returns>The size of the given folder in Bytes.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.ArgumentNullException"><i>p_Path</i> is a null reference</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <summary>
            path must include a trailing backslash
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSizeThreadProc(System.Object)">
            <summary>
            Asynchronoulsy calculates the size of a folder, including all files in all subfolders, and the file count.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize(System.String,Jam.Shell.PathCollection.GetFolderSizeCallbackDelegate,System.Object)">
            <summary>
            Asynchronoulsy calculates the size of a folder, including all files in all subfolders, and the file count.
            </summary>
            <param name="p_Path">The full path of the folder for that the size should be calculated.</param>
            <param name="p_Callback">A delegate that should be called with the results of the calculation.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize(System.String,Jam.Shell.PathCollection.GetFolderSizeCallbackDelegate,System.Object,System.Int32)">
            <summary>
            Asynchronoulsy calculates the size of a folder, including all files in all subfolders, and the file count.
            </summary>
            <param name="p_Path">The full path of the folder for that the size should be calculated.</param>
            <param name="p_Callback">A delegate that should be called with the results of the calculation.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <param name="handle">A handle that identifies the control that requested the call.</param>
        </member>
        <member name="P:Jam.Shell.PathCollection.Item(System.Int32)">
            <summary>
            Returns a path with a certain index. 
            </summary>
            <param name="index">The index of the path that should be returned.</param>
            <returns>The path with the given index.</returns>
        </member>
        <member name="P:Jam.Shell.PathCollection.CheckIfExists">
            <summary>
            If true, paths that do not exist will not be added to the list
            </summary>
        </member>
        <member name="P:Jam.Shell.PathCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathCollection.AllowDuplicates">
            <summary>
            Gets or sets a value indicating whether to allow duplicate entries in the list.
            </summary>
            <value>
              <c>false</c> (default) if duplicate entries are suppressed; otherwise, <c>true</c>.
            </value>
        </member>
        <member name="E:Jam.Shell.PathCollection.Change">
            <summary>
            This event gets fired after items were added or deleted.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathCollection.Changing">
            <summary>
            This event gets fired before items are added or deleted.
            </summary>
        </member>
        <member name="T:Jam.Shell.PathCollection.GetFolderSizeTaskInfo">
            <summary>
            Used to supply data when calculating the folder size asynchronously.
            </summary>
        </member>
        <member name="T:Jam.Shell.PathCollection.GetFolderSizeCallbackDelegate">
            <summary>
            This delegate is used by <see cref="M:Jam.Shell.PathCollection.GetFolderSize(System.String,Jam.Shell.PathCollection.GetFolderSizeCallbackDelegate,System.Object)"/> to get folder sizes asynchronously. 
            </summary>
            <param name="path">The path for that its entire size was determined.</param>
            <param name="foldersize">The size of the path in bytes.</param>
            <param name="filecount">The number of files in the path.</param>
            <param name="foldercount">The number of folders in the path.</param>
            <param name="State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <seealso cref="M:Jam.Shell.PathCollection.GetFolderSize(System.String,Jam.Shell.PathCollection.GetFolderSizeCallbackDelegate,System.Object)"/>
        </member>
        <member name="T:Jam.Shell.FileEnumerator">
            <summary>
            A class that allows to enumerate all selected files of a <see cref="T:Jam.Shell.PathSelectionList"/> recursively.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileEnumerator.#ctor(Jam.Shell.PathCollection)">
            <summary>
            Initializes a new instance of the <b><see cref="T:Jam.Shell.FileEnumerator"/></b> class.
            </summary>
            <param name="aPathCollection">A PathSelectionList or a PathCollection can be passed here.</param>
        </member>
        <member name="M:Jam.Shell.FileEnumerator.GetEnumerator">
            <summary>
            Enumerate all files of the paths in the PathCollection.
            </summary>
            <returns>Returns the path of the selected files.</returns>
        </member>
        <member name="M:Jam.Shell.FileEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an Enumerator to use the PathSelectionList in a foreach statement.
            </summary>
            <returns>Returns all files for the selected paths.</returns>
        </member>
        <member name="T:Jam.Shell.CheckState">
            <summary>
            Available system image list sizes
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.Disabled">
            <summary>
            Checkboxes are disabled.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.None">
            <summary>
            Checking this item is not possible.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.Checked">
            <summary>
            This item is full checked.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.UnChecked">
            <summary>
            This item is not checked.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.Grayed">
            <summary>
            This item is partly checked.
            </summary>
        </member>
        <member name="T:Jam.Shell.BaseSelectionList">
            <summary>
            Base class for the PathSelectionList.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseSelectionList.m_Size">
            <summary>
            the current size.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseSelectionList.m_FileCount">
            <summary>
            the current file count.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseSelectionList.m_FolderCount">
            <summary>
            the current folder count.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.BaseSelectionList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Jam.Shell.BaseSelectionList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.Dispose(System.Boolean)">
            <summary>
            Releases managed ressources.
            </summary>
            <param name="disposing">true if called </param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.AbortSizeCalculation">
            <summary>
            Aborts the calculation of the selected files size.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.CalculateAndUpdateSize(System.String,System.Boolean)">
            <summary>
            Calculates the count and size for the given folder and updates the properties.
            </summary>
            <param name="p_Path">Path for that the size should be determined.</param>
            <param name="p_Subtract">true, if count and size should be subtracted from the current data.</param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.GetListItem(System.Int32)">
            <summary>
            Returns an item of the list at the passed index.
            </summary>
            <param name="Index">Contains the index of the entry which should be returned.</param>
            <returns>The string at the passed index.</returns>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.PathSelected(System.String,System.Boolean@)">
            <summary>
            Abstract definiton of the method PathSelected in the base class.
            </summary>
            <param name="Path">Passed Path, which should be checked.</param>
            <param name="bIsSubItemOf">Out parameter, which indicates if the path is part of a selected folder.</param>
            <returns>Returns the CheckState of the path.</returns>        
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.CompletePathSelected(System.String)">
            <summary>
            Ensures that the smallest complete selected path is added.
            </summary>
            <param name="p_Path">Path of a file or folder, which was added to the selection list.</param>
            <returns>Returns the smallest complete selected path, which is selected.</returns>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.AddPathToSelection(System.String)">
            <summary>
            Adds a path to the list of selected paths.
            </summary>
            <param name="p_Path">Path, which should be added.</param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.RemovePathFromSelection(System.String)">
            <summary>
            Use this procedure to remove an item from the selection list.
            </summary>
            <param name="p_Path">Full qualified path, which should be rmoved from the selection</param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.Clear">
            <summary>
            Removes all elements from the list
            </summary>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.Size">
            <summary>
            Get the total size of the selected items.
            </summary>
            <remarks>This property will only return valid results if <see cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/> is set to <c>true</c>.</remarks>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.FileCount">
            <summary>
            Get the total number of selected files.
            </summary>
            <remarks>This property will only return valid results if <see cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/> is set to <c>true</c>.</remarks>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.FolderCount">
            <summary>
            Get the total number of selected folders.
            </summary>
            <remarks>This property will only return valid results if <see cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/> is set to <c>true</c>.</remarks>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles">
            <summary>
            Use CalculateSelectedFiles to control whether the size and count of the selected files should be calculated or not.
            </summary>
            <seealso cref="P:Jam.Shell.BaseSelectionList.Size"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.FileCount"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.FolderCount"/>
        </member>
        <member name="T:Jam.Shell.PathSelectionList">
            <summary>
            This class is used as a property  of the JamShellLink component for managing the list of selected paths that the user selects with shell controls that have the CheckBoxes property set to True. You can modify the list using the AddPathToSelection and RemovePathFromSelection method. You can save or load the list using the SaveToIniFile and LoadFromIniFile methods.
            </summary>
        </member>
        <member name="F:Jam.Shell.PathSelectionList.m_CurrentCalculations">
            <summary>
            Counts the current calculations.
            </summary>
        </member>
        <member name="F:Jam.Shell.PathSelectionList.m_CurrentlyUpdating">
            <summary>
            Indicates whether the list is being updated at the moment.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.FormatSelectionPath(System.String@)">
            <summary>
            Unifies the given path and checks if it exists.
            </summary>
            <param name="p_Path">The path that should be unified an checked.</param>
            <returns>true, if the path exists, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.IsItemFullSelected(System.String)">
            <summary>
            returns True if an item is in the selection list directly, or if one of its parent folders is in the selection list
            </summary>
            <param name="p_Path">path, which should be checked about the CheckState</param>
            <returns>returns True if an item is in the selection list directly, or if one of its parent folders is in the selection list</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.GetCheckState(System.String,System.Boolean@)">
            <summary>
            For internal use: Check if item is in the selection.
            </summary>
            <param name="p_Path">Contains the path which should be checked.</param>
            <param name="bIsSubItemOf">Indicates, if the path is a subitem of a selected folder.</param>
            <returns>Returns the CheckState of the given path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.RemoveSubFolders(System.String)">
            <summary>
            Remove subfolders of the path from the current selection.
            </summary>
            <param name="p_Path">Contains the parent path from which the subfolders should be removed.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CalculateAndUpdateSize(System.String,System.Boolean)">
            <summary>
            Calculates the count and size for the given folder and updates the properties.
            </summary>
            <param name="p_Path">Path for that the size should be determined.</param>
            <param name="p_Subtract">true, if count and size should be subtracted from the current data.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.GetFolderSizeCallback(System.String,System.Int64,System.Int32,System.Int32,System.Object)">
            <summary>
            This callback method is called once the asynchronous calculation of a folder size is finished.
            </summary>
            <param name="p_Path">The path for that the folder size.</param>
            <param name="p_Size">The size of the folder in Bytes.</param>
            <param name="p_FileCount">The number of files in this path.</param>
            <param name="p_FolderCount">The number of folders in this path.</param>
            <param name="p_State">A user supplied state object, in this case a bool value that indicates if the folder size should be subtracted from the existing values, instead of adding them.</param>
            <see cref="M:Jam.Shell.PathCollection.GetFolderSize(System.String,Jam.Shell.PathCollection.GetFolderSizeCallbackDelegate,System.Object)"/>
            <see cref="M:Jam.Shell.PathSelectionList.CalculateAndUpdateSize(System.String,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.OnCompletedSizeCalculation">
            <summary>
            Raises the <see cref="E:Jam.Shell.PathSelectionList.CompletedSizeCalculation"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.AddAllExclude(System.String,System.String)">
            <summary>
            Adds all folders of a given path except the folder passed in p_ExcludeFolder.
            </summary>
            <param name="p_Path">Contains the parent folder.</param>
            <param name="p_ExcludeFolder">Contains the path which should be excluded from selection.</param>
            <returns>p_Path without the excluded folder</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CompleteChildPathSelected(System.String)">
            <summary>
            Checks if a folder path is completly selected.
            </summary>
            <param name="sFQPath">The folder path, which should be checked.</param>
            <returns>Returns true, if the folder path is completly selected.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.PathSelected(System.String,System.Boolean@)">
            <summary>
            For internal use: Check if item is in the selection.
            </summary>
            <param name="Path">Passed Path, which should be checked.</param>
            <param name="bIsSubItemOf">Out parameter, which indicates if the path is part of a selected folder.</param>
            <returns>Returns the CheckState of the path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.IsPathSelected(System.String)">
            <summary>
            This function returns for the given path, if it is fully, partially or not part of the list of selected files.
            </summary>
            <param name="aPath">the path</param>
            <returns>Returns the selection state of the given path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.IsLinkedPath(System.String)">
            <summary>
            Check if the passed path is a link.
            </summary>
            <param name="sFQPath">Full qualified path, which should be checked.</param>
            <returns>Returns true when the passed path is a link and false if not.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.PathWasRenamed(System.String,System.String)">
            <summary>
            Searches the path in the selected files and if found, 
            replaces it by the new name within the collection.
            </summary>
            <param name="pOldPath">The full file system path of the path before it was renamed.</param>
            <param name="pNewPath">The full file path of the new name.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.BeginUpdate">
            <summary>
            Prevent that the SelectionListChanged event is fired until EndUpdate is called. Every call of BeginUpdate() increments an UpdateCounter variable.
            </summary>
            <seealso cref="M:Jam.Shell.PathSelectionList.EndUpdate"/>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.BoolToSelectionState(System.Boolean)">
            <summary>
            Returns a Checkstate for a given Boolean.
            </summary>
            <param name="p_Value">Boolean value.</param>
            <returns>Checkstate.Checked if p_value is true. If not, Checkstate.Unchecked is returned.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.EndUpdate">
            <summary>
            Every call of EndUpdate() decrements the UpdateCounter variable. When the UpdateCounter is 0, then the SelectionListChanged event is fired.
            </summary>
            <seealso cref="M:Jam.Shell.PathSelectionList.BeginUpdate"/>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.AddPathToSelection(System.String)">
            <summary>
            Adds a path to the list of selected paths.
            </summary>
            <param name="p_Path">Path, which should be added.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.DeleteEntry(System.Int32)">
            <summary>
            Overloaded method DeleteEntry, which deletes an entry at the passed position with default recalculating size and filecount.
            </summary>
            <param name="Index">Index, which list entry should be deleted.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.DeleteEntry(System.Int32,System.Boolean)">
            <summary>
            Deletes an entry at the passed position with recalculating size and filecount, when CalculateSizeAndCount is true.
            </summary>
            <param name="Index">Index, which list entry should be deleted.</param>
            <param name="CalculateSizeAndCount">Can be used to prevent the recalculating size and filecount</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.RemovePathFromSelection(System.String)">
            <summary>
            Use this procedure to remove an item from the selection list.
            </summary>
            <param name="pPath">Full qualified path, which should be rmoved from the selection</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.RemovePathFromSelectionInternal(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pPath"></param>
            <param name="pRecursive"></param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CompletePathSelected(System.String)">
            <summary>
            Ensures that the smallest complete selected path is added.
            </summary>
            <param name="p_Path">Path of a file or folder, which was added to the selection list.</param>
            <returns>Returns the smallest complete selected path, which is selected.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CompletePathSelectedExclude(System.String,System.String)">
            <summary>
            Checks the parent folder of a folder is full selected.
            </summary>
            <param name="Folder">The parent folder of the currently checked folder.</param>
            <param name="ExFolder">The currently checked folder.</param>
            <returns>Returns the smallest complete selected path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.ResetCounters">
            <summary>
             Resets File- and FolderCount
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.OnSelectionChanged">
            <summary>
            Fires the SelectionChanged event.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.GetFileEnumerator">
             <summary>
             Returns an Enumerator to use the PathSelectionList in a foreach statement.
             </summary>
             <remarks>		
             The Enumerator will only return files in the list, not directories or drives.
             If the <see cref="T:Jam.Shell.PathSelectionList"/> contains a Drive or a large directory using GetFileEnumerator might be slow, because all Files contained in the Directories are iterated.
             As compared to GetFileEnumerator iterating the <see cref="T:Jam.Shell.PathSelectionList"/> directly will return a unified list consisting of folders and files. 
             <para> </para>
             If folder "c:\Windows" is added to a <see cref="T:Jam.Shell.PathSelectionList"/> GetFileEnumerator will return all files in Windows and its subdirectories. 
             Iterating it directly will returns "c:\Windows\*". To use this in e.g. a <see cref="T:Jam.Shell.FileList"/> you must trim the "*".
            </remarks>
             <example>
             <code>
             IEnumerator&lt;string&gt; fileEnum =
                 shellControlConnector1.SelectionList.GetFileEnumerator();
             while (fileEnum.MoveNext())
             {
                 //do something with fileEnum.Current;
             }
             or
             foreach (string file in selectionList.getFileEnumerator() {
                 //do something with file
             }
             </code>
             </example>
             <returns>Returns all files for the selected paths.</returns>
        </member>
        <member name="P:Jam.Shell.PathSelectionList.IsLocalPathSelected">
            <summary>
            Returns true, if files on local drives are selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathSelectionList.IsUNCPathSelected">
            <summary>
            Returns true, if files on UNC paths are selected.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathSelectionList.CompletedSizeCalculation">
            <summary>
            This event is triggered whenever the calculation of the folder size is finished for a folder.
            </summary>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.FileCount"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.Size"/>
        </member>
        <member name="E:Jam.Shell.PathSelectionList.SelectionChanged">
            <summary>
            This event is triggered whenever the selection list is changed.
            </summary>
        </member>
        <member name="T:Jam.Shell.NotificationEvents">
            <summary>
            The types of notification events that may occur
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.AssociationChange">
            <summary>
            A file type association has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.AttributesChange">
            <summary>
            The attributes of an item or folder have changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileChange">
            <summary>
            An existing nonfolder item has changed, but the item still exists and has not been renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileCreate">
            <summary>
            A nonfolder item has been created.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileDelete">
            <summary>
            A nonfolder item has been deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileRename">
            <summary>
            The name of a nonfolder item has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.DriveAdd">
            <summary>
            A drive has been added.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.DriveRemove">
            <summary>
            A drive has been removed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.ShellDriveAdd">
            <summary>
            A drive has been added and the Shell should create a new window for the drive.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.DriveSpaceChange">
            <summary>
            The amount of free space on a drive has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.MediaInsert">
            <summary>
            Storage media has been inserted into a drive.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.MediaRemove">
            <summary>
            Storage media has been removed from a drive.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderCreate">
            <summary>
            A folder has been created.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderDelete">
            <summary>
            A folder has been removed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderRename">
            <summary>
            The name of a folder has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderUpdate">
            <summary>
            An existing item (a folder or a nonfolder) has changed, but the item still exists and has not been renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.NetShare">
            <summary>
            A folder on the local computer is being shared via the network.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.NetUnshare">
            <summary>
            A folder on the local computer is no longer being shared via the network.
            </summary>
            <remarks>It`s deprecated, use NetShare instead.</remarks>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.ServerDisconnect">
            <summary>
            The computer has disconnected from a server.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.ImageListChange">
            <summary>
            An image in the system image list has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.Unknown">
            <summary>
            All events have occurred.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellChangeNotifier">
            <summary>
            Use this component to get information about changes in the file system (copy, move or delete operations) and other changes relevant for shell operations. The Directory property decides which part of the shell namespace will be watched for changes.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellChangeNotifier.m_Desktop">
            <summary>
            save the reference to the com-object; bug #5714
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellChangeNotifier"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Dispose(System.Boolean)">
            <summary>
            Remove reference to the ChangeNotifierCallBackForm
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.DirectoriesChanged(System.Object,System.EventArgs)">
            <summary>
            This method is called when the paths in the Directories property have changed
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.ExcludeMyComputer">
            <summary>
            Excludes the empty string from the observed directories
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.ShellNotifyRegister(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Registers the given ItemIdList in order to receive change notifications for it.
            </summary>
            <param name="pIdList">ItemIdList of the folder to receive chnage notifications for</param>
            <param name="pWatchSubTree">true, if notifications for subfolders are desired as well</param>
            <returns>Handle, that can be used to call ShellNotifiyUnregister() later</returns>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.ShellNotifyUnregister(System.Int32)">
            <summary>
            Unregisters the saved handle to receive no more change notifications.
            </summary>
            <param name="NotifyHandle">The NotifyHandle that should be unregistered.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Start">
            <summary>
            Starts monitoring the paths in the Directories property
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Stop">
            <summary>
            Stops monitoring the paths in the Directories property
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Clear">
            <summary>
             Removes all directories from the <see cref="P:Jam.Shell.ShellChangeNotifier.Directories"/> property and so watches the entire file system again.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.OnChange(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>
            Fires the OnChange event, when something happened in the monitored directories.
            </summary>
            <param name="Event">Provides data for the OnChange event.</param>
            <param name="Path1">Contains information like a path, where something happened, or the name of a file before it has been renamed.</param>
            <param name="Path2">Contains information like the name of a file after it has been renamed.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.OnChangePIDL(Jam.Shell.NotificationEvents,Jam.Shell.ItemIdList,Jam.Shell.ItemIdList)">
            <summary>
            Fires the OnChange event, when something happened in the monitored directories.
            </summary>
            <param name="Event">Provides data for the OnChange event.</param>
            <param name="Pidl1">Contains information like the ItemIdList of a path, where something happened, or the name of a file before it has been renamed.</param>
            <param name="Pild2">Contains information like the name of a file after it has been renamed.</param>
        </member>
        <member name="F:Jam.Shell.ShellChangeNotifier.DEBUG">
            <summary>
            For debugging, used by tests.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Restart">
            <summary>
            Restarts the change notifier if it is already started
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.SendChangeNotify(Jam.Shell.NotificationEvents,System.String)">
            <summary>
            Sends a shell change notification to the system that informs other processes about a achange.
            </summary>
            <param name="p_Event">The event shat should be send.</param>
            <param name="p_Path">The path that is affected by the change.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.SendChangeNotify(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>
            Sends a shell change notification to the system that informs other processes about a achange.
            </summary>
            <param name="p_Event">The event shat should be send.</param>
            <param name="p_Path1">The first path that is affected by the change.</param>
            <param name="p_Path2">The second path that is affected by the change.</param>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.AllDrivesWatched">
            <summary>
            Returns true if the instance was started with no explicit directories or pidl to watch. In this case all drives are watched recursively for changes.
            </summary>
            <value><c>true</c> if all drives are watched for changes recursively otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.PIDL">
            <summary>
            Allows th set a Shell ItemIdList that should be monitored. Intended for internal use only.
            If this property is set, the default is "My Computer" as an empty string, is then not monitored.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Enabled">
            <summary>
            Set to true to enable listening to change notifications.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Recursive">
            <summary>
            Set to true, if change notifications for subfolders are desired as well.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.EventFilter">
            <summary>
            Allows to define which shell change events should be reported.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Directories">
            <summary>
            The directories to receive change notifications for. Leave empty to receive change notifications for the whole file system.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellChangeNotifier.ChangePIDL">
            <summary>
            This event is fired when a change event for the given ItemIdList list of the given paths in the <see cref="P:Jam.Shell.ShellChangeNotifier.Directories"/> property occured.
            </summary>
            <seealso cref="E:Jam.Shell.ShellChangeNotifier.Change"/>
        </member>
        <member name="E:Jam.Shell.ShellChangeNotifier.Change">
            <summary>
            This event is fired when a change event was fired from the system for one of the monitored paths in the <see cref="P:Jam.Shell.ShellChangeNotifier.Directories"/> property.
            </summary>
        </member>
        <member name="T:Jam.Shell.ChangeNotificationEventArgs">
            <summary>
            The ChangeNotificationEventArgs contains data for the <see cref="E:Jam.Shell.ShellChangeNotifier.Change"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ChangeNotificationEventArgs.#ctor(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ChangeNotificationEventArgs"/> class.
            </summary>
            <param name="aEvent">Contains the type of the event.</param>
            <param name="aPath1">The variable path1 contains the path of the file or folder for that the event occurred, except for event types that do not refer to a certain file system type: AssociationChange, ImageListChange.</param>
            <param name="aPath2">The variable path2 contains the destination path for the events: FolderRename, FileRename. For all other events, path2 should be ignored.</param>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationEventArgs.Event">
            <summary>
            Contains the type of the event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationEventArgs.Path1">
            <summary>
            The variable path1 contains the path of the file or folder for that the event occurred, except for event types that do not refer to a certain file system type: AssociationChange, ImageListChange.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationEventArgs.Path2">
            <summary>
            The variable path2 contains the destination path for the events: FolderRename, FileRename. For all other events, path2 should be ignored.
            </summary>
        </member>
        <member name="T:Jam.Shell.ChangeNotificationPidlEventArgs">
            <summary>
            The ChangeNotificationEventArgs contains data for the <see cref="E:Jam.Shell.ShellChangeNotifier.ChangePIDL"/> event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationPidlEventArgs.Event">
            <summary>
            Contains the type of the event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationPidlEventArgs.Pidl1">
            <summary>
            The variable path1 contains the path of the file or folder for that the event occurred, except for event types that do not refer to a certain file system type: AssociationChange, ImageListChange.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationPidlEventArgs.Pidl2">
            <summary>
            The variable path2 contains the destination path for the events: FolderRename, FileRename. For all other events, path2 should be ignored.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellComboItem">
            <summary>
            This class keeps information about the items displayed in the ShellComboBox.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellItem">
            <summary>
            This class keeps information about item id lists, their names, and if desired their associated
            icons.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItem.m_Caption">
            <summary>
            The caption of the entry that is displayed in the list of the ShellCombo component.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItem.m_IconImageIndex">
            <summary>
            The system iconnumber for the symbol that is to be displayed
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItem.m_PIDL">
            <summary>
            The ItemIdList of the item that is displayed
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItem.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Sets up a ShellItem
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellItem.#ctor(Jam.Shell.ItemIdList,System.String)">
            <summary>
            Sets up a ShellItem with a custom caption
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
            <param name="p_Caption">the caption that is displayed </param>
        </member>
        <member name="M:Jam.Shell.ShellItem.CompareTo(Jam.Shell.ShellItem)">
            <summary>
            Compares to ShellItems by comparing their ItemIdLists.
            <see cref="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList)"/>
            </summary>
            <param name="other">The other item this item is compared to</param>
            <returns>Negative return value if "other" should follow "this", zero if the two items are the same, -1 if other is null, a positive value otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.ShellItem.PIDL">
            <summary>
            The <see cref="T:Jam.Shell.ItemIdList"/> this Item is associated with.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItem.Caption">
            <summary>
            The Caption of the Item, ie. the virtual system name.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItem.IconImageIndex">
            <summary>
            The icon image index that is displayed next to the itemname.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItem.SystemImage">
            <summary>
            Gets a Bitmap instance based upon the <see cref="P:Jam.Shell.ShellItem.IconImageIndex"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboItem.m_Indent">
            <summary>
            The indent, ie. how much the item is shifted to the right
            (proportional to its depth in the directory tree).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboItem.m_Persistent">
            <summary>
            Persistent items have this flags set. Those Items are visible all the time 
            and need not to be removed if e.g. a folder change event occurs
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Int32)">
            <summary>
            Sets up a non persistent ShellComboItem.
            You need to construct a ShellComboItem with <see cref="M:Jam.Shell.ShellComboItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Int32,System.Boolean)"/> 
            to explicitly create persistent items
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
            <param name="p_Caption">the caption displayed in the dropdown-menu</param>
            <param name="p_Indent">The Indentation of the item if displayed in the tree structure</param>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Int32,System.Boolean)">
            <summary>
            Sets up a ShellComboItem.
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
            <param name="p_Caption">the caption displayed in the dropdown-menu</param>
            <param name="p_Indent">The Indentation of the item if displayed in the tree structure</param>
            <param name="p_Persistent">true if the the Item is persistent</param>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.DrawItem(System.Windows.Forms.Control,System.Windows.Forms.DrawItemEventArgs,System.Boolean)">
            <summary>
            Draws the item within the combobox
            </summary>
            <param name="evtArgs">The EventArgs of the DrawItem Event</param>
            <param name="p_DisplayControl">the control that is displaying the item</param>
            <param name="p_ShowFullPath">if true the fullpath of the item is shown if its in the ComboBoxEditField</param>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.CompareTo(Jam.Shell.ShellComboItem)">
            <summary>
            The method compares to ShellItems whith each other. 
            <seealso cref="M:Jam.Shell.ShellItem.CompareTo(Jam.Shell.ShellItem)"/>
            <seealso cref="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList)"/>
            </summary>
            <param name="other">The other item to compare with.</param>
            <returns>See the <see cref="M:Jam.Shell.ShellItem.CompareTo(Jam.Shell.ShellItem)"/> method.</returns>
        </member>
        <member name="P:Jam.Shell.ShellComboItem.Indent">
            <summary>
            The indent of the item when displayed according to the depth in the folder hierarchy
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboItem.IsPersistent">
            <summary>
            Persistent items have this flags set. Those Items are visible all the time 
            and need not to be removed if e.g. a folder change event occurs
            </summary>
        </member>
        <member name="T:Jam.Shell.CustomEditComboBox">
            <summary>
            This class provides an editable TextBox which may be extended, e.g. by the 
            ShellApi, that is laid over the display field of the ComboBox control.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_ShellAutoCompletionMode">
            <summary>
            shell autocompletion mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_UseSystemStyles">
            <summary>
            If false the component won't use the vista styles.
            <see cref="P:Jam.Shell.CustomEditComboBox.UseSystemStyles"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_UseSystemFont">
            <summary>
            If true the component will use the default system font.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_OverlayTextBox">
            <summary>
            The textbox attribute keeps a reference to a textbox in case the user wants to 
            enter a string to search for folders, it is placed above the ShellCombobox.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_Initializing">
            <summary>
            flag indicating whether the component is initializing
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.SetAutoCompletionMode">
            <summary>
            Sets the auto completion mode.
            </summary>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.SetFont(System.Drawing.Font)">
            <summary>
            Sets the font without adjusting other properties.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.#ctor">
            <summary>
            Default Constructor, registers to the ComboBox Initialized event.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OnOverlayResize(System.Object,System.EventArgs)">
            <summary>
            This method is called from the OverlayTextBox.Resize Event.
            It calls the AdjusTextBoxSize method.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OnSizeChanged(System.EventArgs)">
            <summary>
            This event is triggered after the size of the combobox changed. Fixes bug #4397.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.ActivateSelectedItem(System.String)">
            <summary>
            Abstract method that is implemented in <see cref="M:Jam.Shell.ShellComboBox.ActivateSelectedItem(System.String)"/>
            </summary>
            <param name="path">The item path.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OnHandleCreated(System.EventArgs)">
            <summary>
            This event is triggered after the handle of the control was created.
            </summary>
            <param name="e">the event arguments when this Event occurs</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.AdjustTextBoxSize">
            <summary>
            Adjusts the size of the edit field so that it is inside the combo box.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OverlayTextBox_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method catches the KeyUp event of the OverlayTextBox and
            currently handles the Enter-Key.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">The arguments of the key event.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.EnableSystemStyles">
            <summary>
            Sets system specific behaviour,
            i.e. FullRowSelect in Vista and upwards.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.ShellAutoCompletionMode">
            <summary>
            This property controls the availability of the shells autocompletion mode,
            if set to FileSystem, Url or both, the ComboBox provides a TextField the 
            user can type to. If disabled the default combobox behavior without editing
            functionality is used. Both, FileSystem and Url can be specified at once and 
            are enabled by default.
            ShellAutoComplete.Url needs to be used to also provide autocompletion for UNC-Paths.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.DPIFactor">
            <summary>
            Returns the factor the default dpi value 96 is multiplized with.
            For example 1,25 if the user selected 125% dpi.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.OverlayTextBox">
            <summary>
            Provides access to the TextBox field of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.UseSystemStyles">
            <summary>
            Use this property to turn on or off the usage of the system specific design, i.e. enable Vista visual styles of the explorer components.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.UseSystemFont">
            <summary>
            Set this property to true if you want the component to utilize the default system font.
            It is also set to true if the <see cref="P:Jam.Shell.CustomEditComboBox.UseSystemStyles"/> property is set.
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomEditComboBox.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.CustomEditComboBox.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.CustomEditComboBox.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control and adapts <see cref="P:Jam.Shell.CustomEditComboBox.UseSystemFont"/> is set to false.
            </summary>
            <returns>The <see cref="T:System.Drawing.Font"/> to apply to the text displayed by the control.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
              <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
              </PermissionSet>
        </member>
        <member name="T:Jam.Shell.CustomFolderComboBox">
            <summary>
            The CustomFolderComboBox is a simple component that allows to display folders and drives 
            in a combo box with its associated icons. It is kept with basic functionality to allow for 
            further extension by the programmer.
            See <see cref="T:Jam.Shell.ShellComboBox"/> for an advanced component which derives from the CustomFolderComboBox.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFolderComboBox.m_ShowFullPath">
            <summary>
            if set to true the fullpath is shown in the ComboBox
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.#ctor">
            <summary>
            Default constructor of the CustomFolderComboBox base-class
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.CustomFolderComboDrawItemHandler(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            This is the event handler registered to <see cref="M:Jam.Shell.ShellComboItem.DrawItem(System.Windows.Forms.Control,System.Windows.Forms.DrawItemEventArgs,System.Boolean)"/> it displays the items
            as files or folders
            </summary>
            <param name="sender">sender of the event</param>
            <param name="p_DrawItemEvent">event data</param>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.UpdateOverlayTextBox">
            <summary>
            Updates the Text of the OverlayTextBox by either setting the items caption
            or the items path depending on the ShowFullPath property
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.OnShowOptionChanged(System.Object,System.Boolean)">
            <summary>
            This method needs to be called if a a ShowOption changed.
            </summary>
            <param name="p_Sender">Sender of the event.</param>
            <param name="p_NeedFullRefresh">pass true if the component needs a full refresh, false if a call to <see cref="M:System.Windows.Forms.Control.Invalidate"/> is sufficient.</param>
        </member>
        <member name="P:Jam.Shell.CustomFolderComboBox.ShowFullPath">
            <summary>
            If set to true, the full path of the selected item is shown in the combobox
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFolderComboBox.ShowOptionChangedEvent">
            <summary>
            Register to this event to get informed about an optionchange of the Show{...} properties.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShowOptionEventArgs">
            <summary>
            OptionEventArgs is a simple possibility to indicate whether a FullRefresh is
            needed after Options have changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShowOptionEventArgs.#ctor">
            <summary>
            Construct the OptionEvent, default to FullRefresh
            </summary>
        </member>
        <member name="M:Jam.Shell.ShowOptionEventArgs.#ctor(System.Boolean)">
            <summary>
            Construct the OptionEvent
            </summary>
            <param name="p_NeedFullRefresh">If set to true, a full refresh will performed, if false the component is invalidated.</param>
        </member>
        <member name="P:Jam.Shell.ShowOptionEventArgs.NeedFullRefresh">
            <summary>
            Returns true if a component fullrefresh is needed.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellComboBox">
            <summary>
            The ShellComboBox is a simple component that allows to display folders and drives 
            in a combo box with its associated icons. It is perfectly analogous to the windows explorer 
            file selection dropdown list and provides an editable field as well.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_DropDownWidthAutoAdjust">
            <summary>
            Whether the width of the dropdown box should be adjusted. <see cref="P:Jam.Shell.ShellComboBox.DropDownWidthAutoAdjust"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_CurrentFolderIdList">
            <summary>
            The currently selected ItemIdList, null if nothing is selected.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShellBrowser">
            <summary>
            A <see cref="P:Jam.Shell.ShellComboBox.ShellBrowser"/> instance that is used to navigate through the files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShellControlConnector">
            <summary>
            this variable holds a reference to an attached ShellControlConnector which is
            the mediator between different ShellBrowser components and keeps the views in sync
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowDrives">
            <summary>
            whether to include "Drives" in the ComboBox.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowDesktopContent">
            <summary>
            whether to include the content of the desktop.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowMyDocuments">
            <summary>
            whether to include "My Documents" folder in the ComboBox.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowNethood">
            <summary><see cref="P:Jam.Shell.ShellComboBox.ShowNethood"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowNetwork">
            <summary><see cref="P:Jam.Shell.ShellComboBox.ShowNetwork"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowRecycleBin">
            <summary><see cref="P:Jam.Shell.ShellComboBox.ShowRecycleBin"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_FileSystemOnly">
            <summary>
            if set to true virtual objects not havin a filesystem path will not be shown.
            <seealso pref="FileSystemOnly"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_NoFillOnStartup">
            <summary>
            if set to true the componet won't fill itself by scanning the filesystem on startup.
            <seealso pref="NoFullOnStartup"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_DropDownStyle">
            <summary>
            The dropdown style of the component
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.#ctor">
            <summary>
            Default constructor of the ShellComboBox
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.ActivateSelectedItem(System.String)">
            <summary>
            This method is called from the TextBoxKeyUp event, it checks 
            what kind of item the user selected, if it is a folder, the 
            component changes to that folder and issues a <see cref="M:Jam.Shell.ShellComboBox.FolderChanged(Jam.Shell.ItemIdList)"/> event
            otherwise it tries to shellexecute the item.
            </summary>
            <param name="path">The item path.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.FindItemWithText(System.String)">
            <summary>
            Iterates over the items and checks if the caption of an item equals the given string.
            </summary>
            <param name="pItemText">All item captions are compared to this string.</param>
            <returns>The index of the item if it can be found, -1 if not.</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.RemoveNonPersistentItems">
            <summary>
            Removes Items from the ShellComboItems list that are not persistent.
            </summary>
            <returns>a collection of the removed <see cref="T:Jam.Shell.ShellComboItem"/>s</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.RefreshPersistent">
            <summary>
            This method also refreshes the persistent items - it is used if properties that are normally
            set at designtime are modified at runtime, e.g. IncludeRemoveableDrives is switched on,
            since those Items are persistent items, they are not refreshed by default 
            <seealso cref="P:Jam.Shell.ShellComboBox.ShowMyDocuments"/>
            <seealso cref="P:Jam.Shell.ShellComboBox.ShowDrives"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.GetPersistentItems(System.Collections.Generic.List{Jam.Shell.ItemIdList})">
            <summary>
            This method is extended by <see cref="M:Jam.Shell.ShellComboBox.RefreshPersistent"/>
            to support more Special Folders to be displayed.
            </summary>
            <param name="p_PIDLList">a list of ItemIdLists, that can be appended.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddPersistentRootItemDesktop">
            <summary>
            This adds the persistent root item for the virtual folder "Desktop"
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddShellFolder(Jam.Shell.ShellBrowser,Jam.Shell.ShellFolder,Jam.Shell.ShellComboBox.ListKind,System.Boolean)">
            <summary>
            This method adds a list of persistent objects from a folder to the CustomFolderBox.
            </summary>
            <param name="p_ShellBrowser">The ShellBrowser instance to use.</param>
            <param name="p_ShellFolder">The ShellFolder to add.</param>
            <param name="p_Filter">Whether to filter special/nonspecial items.</param>
            <param name="p_Persistent">Whether the added items shall belong to the persistent items.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.ShellComboBoxOptionChanged(System.Object,Jam.Shell.ShowOptionEventArgs)">
            <summary>
            This method is registered to the event delegate <see cref="E:Jam.Shell.CustomFolderComboBox.ShowOptionChangedEvent"/> 
            and handles the FullRefresh, respectively a component invalidation.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="p_Args">Event arguments.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.OnDropDown(System.EventArgs)">
            <summary>
            Refreshes the non-persistent items in the control (ie. if changes on the desktop occurred)
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.FullRefresh">
            <summary>
            Rescans the folders and refreshes the components' entire display 
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.SmartRefresh">
            <summary>
            The SmartRefresh only refreshes the non persistent items but its 
            functionality equals a <see cref="M:Jam.Shell.ShellComboBox.FullRefresh"/> for the ShellCombo.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddDesktopContent">
            <summary>
            Adds the Desktop content if <see cref="P:Jam.Shell.ShellComboBox.ShowDesktopContent"/> is true
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Change the current folder to the one given in parameter
            throws <see cref="T:System.ArgumentNullException"/> if the argument was null
            </summary>
            <param name="p_ItemIdList">the folder to change to</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddIdListToCombo(Jam.Shell.ItemIdList)">
            <summary>
            Adds the folders of the given ItemIdList as non-persistent items to the combobox.
            </summary>
            <param name="p_ItemIdList">the ItemIdList to add</param>
            <returns>The index to the last item of the p_ItemIdList within the ShellCombo</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddIdListToCombo(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Adds the folders of the given ItemIdList as (non)persistent items to the combobox.
            </summary>
            <param name="p_ItemIdList">the ItemIdList to add</param>
            <param name="p_Persistent">whether the added items are persistent</param>
            <returns>The index to the last item of the p_ItemIdList within the ShellCombo</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            This method does nothing because ShellCombo does not display files.
            </summary>
            <param name="p_ItemIdList">An ItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.GoUp">
            <summary>
            Go up one level in the tree,
            does nothing if the SelectedNode is null of if the SelectedNode has no Parent (is root)
            </summary>
            <returns>true, if the operation could be performed, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.OverlayTextBoxClicked(System.Object,System.EventArgs)">
            <summary>
            If the OverlayTextBox is clicked, it's text is selected.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The eventArgs.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.OverlayTextBoxEntered(System.Object,System.EventArgs)">
            <summary>
            If the OverlayTextBox is clicked, it's text is selected.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The eventArgs.</param>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_InSelectedIndexEvent">
            <summary>
            An internal flag that indicates whether a selectedindex changed event 
            has occured, it prevents event loops.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.CustomFolderComboSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            The event handler for the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged"/> event.
            it notifies the ShellControlConnector about the selection change if 
            it has been registered.
            </summary>
            <param name="sender">the sender of the event</param>
            <param name="eventArgs">its arguments</param>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.DropDownWidthAutoAdjust">
            <summary>
            Gets or sets a value indicating whether the combobox should adjust the width of the dropdown menu.
            The default value is true (In contrast to the default <see cref="T:System.Windows.Forms.ComboBox"/>
            which does not support this)
            </summary>
            <value>Whether this is a dropdown with auto adjustment of the width.</value>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.Items">
            <summary>
            Gets an object representing the content of the <see cref="T:Jam.Shell.CustomFolderComboBox"/>
            </summary>
            This Property is here to prevent the designer from serializing.
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowDrives">
            <summary>
            If set to true, the ShellComboBox includes the Drives installed in the System.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowDesktopContent">
            <summary>
            If set to true, the ShellComboBox includes the first level of content of the Desktop folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowMyDocuments">
            <summary>
            If set to true, the ShellComboBox includes the files in the first level of the "My Documents" folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowNethood">
            <summary>
            If set to true, the Nethood is shown in the ShellCombo.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowNetwork">
            <summary>
            If set to true, the Network is shown in the ShellCombo.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowRecycleBin">
            <summary>
            If set to true, the ShellCombo will show the Recycle Bin icon.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.FileSystemOnly">
            <summary>
            If this option is set to true, the ShellCombo will only show items of the filesystem and exclude virtual file items.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.NoFillOnStartup">
            <summary>
            If set to true the ShellCombo will not scan the filesystem and fill on startup, this is useful if the path to show is known only on runtime.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ItemHeight">
            <summary>
            Gets or sets the height of an item in the combo box
            </summary>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShellBrowser">
            <summary>
            A <see cref="P:Jam.Shell.ShellComboBox.ShellBrowser"/> instance that is used to navigate through the files.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.DrawMode">
            <summary>
            DrawMode must always be OwnerDrawFixed for the ShellCombo to work.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.DropDownStyle">
            <summary>
            If DropDownStyle is DropDown, the shell autocompletion mode is enabled.
            If it is DropDownList, the shell autocompletion is disabled, ie. no edit field is provided.
            The default value is <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown"/>. ComboBoxStyle.Simple is not supported and ignored.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.CurrentFolderIdList">
            <summary>
            Get or set the ItemIdList of the currently selected folder,
            returns null if nothing is selected, may not be explicitly set to null.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.SelectedPath">
            <summary>
            Use this property to get or set the currently selected path the ShellCombo is displaying.
            The path may be empty if the user selected an object that does not belong to the filesystem (i.e. Network). If you'd like to also handle these virtual file items, consider using the <see cref="P:Jam.Shell.ShellComboBox.CurrentFolderIdList"/> property instead.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellComboBox.ListKind">
            <summary>
            The enumeration is used by <see cref="M:Jam.Shell.ShellComboBox.AddShellFolder(Jam.Shell.ShellBrowser,Jam.Shell.ShellFolder,Jam.Shell.ShellComboBox.ListKind,System.Boolean)"/> methods.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.FolderItems">
            <summary>add folders</summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.SpecialItems">
            <summary>add special items</summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.FileItems">
            <summary>add file items</summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.AllItems">
            <summary>add all items</summary>
        </member>
        <member name="T:Jam.Shell.ShellOperation">
            <summary>
            Enumeration of possible operations that may happen for a shell control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Copy">
            <summary>
            Objects have been copied.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Move">
            <summary>
            Objects have been moved.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Drag">
            <summary>
            Objects have been dragged from the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Drop">
            <summary>
            Objects have been dropped on the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Cut">
            <summary>
            Objects have been cut in the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Paste">
            <summary>
            Objects have been pasted to the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Delete">
            <summary>
            Objects have been deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Remove">
            <summary>
            Objects have been remvoed from the control, e.g. they have been moved or cut and pasted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Add">
            <summary>
            Objects have been added to the control, e.g. because they ahve been pasted or dropped.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Rename">
            <summary>
            An object has been renamed in the control.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellCommand">
            <summary>
            This class provides methods to determine whether a command is a default shell command
            the default ShellCommands
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Default">
            <summary>This is a constant string that represents the default shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Open">
            <summary>This is a constant string that represents the 'open' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Copy">
            <summary>This is a constant string that represents the 'copy' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Cut">
            <summary>This is a constant string that represents the 'cut' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Delete">
            <summary>This is a constant string that represents the 'delete' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Paste">
            <summary>This is a constant string that represents the 'paste' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Rename">
            <summary>This is a constant string that represents the 'rename' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.RunAs">
            <summary>This is a constant string that represents the 'runas' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Explore">
            <summary>This is a constant string that represents the 'explore' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Undelete">
            <summary>This is a constant string that represents the 'undelete' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Properties">
            <summary>This is a constant string that represents the 'properties' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.EmptyBitBucket">
            <summary>This is a constant string that represents the 'empty' shell command</summary>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsDefault(System.String)">
            <summary>Checks if the given command is the default shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the default shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsOpen(System.String)">
            <summary>Checks if the given command is the 'open' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the open shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsCopy(System.String)">
            <summary>Checks if the given command is the 'copy' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the copy shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsCut(System.String)">
            <summary>Checks if the given command is the 'cut' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'cut' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsDelete(System.String)">
            <summary>Checks if the given command is the 'delete' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'delete' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsUndelete(System.String)">
            <summary>Checks if the given command is the 'undelete' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'undelete' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsPaste(System.String)">
            <summary>Checks if the given command is the 'paste' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'paste' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsRename(System.String)">
            <summary>Checks if the given command is the 'rename' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'rename' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsRunAs(System.String)">
            <summary>Checks if the given command is the 'runas' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'runas' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsExplore(System.String)">
            <summary>Checks if the given command is the 'explore' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'explore' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsProperties(System.String)">
            <summary>Checks if the given command is the 'properties' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'properties' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsEmptyBitBucket(System.String)">
            <summary>Checks if the given command is the 'empty' shell command.</summary>
            <param name="command">The command string to check.</param>
            <returns><c>true</c> if the given command is the 'empty' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="T:Jam.Shell.OperationEventArgs">
            <summary>
            Provides data for the <see cref="P:Jam.Shell.OperationEventArgs.Operation"/> event.
            </summary>
            <seealso cref="T:Jam.Shell.ShellListView"/>
            <seealso cref="T:Jam.Shell.ShellTreeView"/>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.ShellControl">
            <summary>
            The control that was affected
            </summary>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.Operation">
            <summary>
            The opration that was performed.
            </summary>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.AffectedObjects">
            <summary>
            The paths of the files or folders that were affected by the performed operation.
            </summary>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.Destination">
            <summary>
            In case of operations like copy or move this property contains the destination path. This property is null for other operations, to which it does not have a meaning.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellControlConnector">
            <summary>
            This component is able to synchronize several of the visual shell components <see cref="T:Jam.Shell.ShellTreeView"/>, <see cref="T:Jam.Shell.ShellListView"/> and <see cref="T:Jam.Shell.ThumbnailImage"/>. Just drop a ShellControlConnector component to this form and assign the ShellControlConnector property of all shell components to the ShellControlConnector component. You can refresh all connected shell controls by using the FullRefresh() method. If you want to use CheckBoxes in a <see cref="T:Jam.Shell.ShellTreeView"/> or <see cref="T:Jam.Shell.ShellListView"/>, that must be connected to a ShellControlConnector. The ShellControlConnector will synchronize the selected files and folder in the different shell controls.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.#ctor">
            <summary>
            The constructor for the ShellControlConnector class,
            it internally registers an EventHandler to its SelectionList change event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.OnFolderChanged">
            <summary>
            Triggers the FolderChanged event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.OnFileChanged">
            <summary>
            Fire the OnFileChanged event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.RegisterShellControl(Jam.Shell.IShellControl)">
            <summary>
            Registers a control with the ShellControlConnector
            </summary>
            <param name="aControl">A shell control that implements the IShellControl interface</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.DeregisterShellControl(Jam.Shell.IShellControl)">
            <summary>
            Deregisters a control with the ShellControlConnector
            </summary>
            <param name="aControl">A shell control that implements the IShellControl interface</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.SmartRefreshControls(Jam.Shell.IShellControl)">
            <summary>
            Calls the <see cref="M:Jam.Shell.IShellControl.SmartRefresh"/> SmartRefresh() method for all connected controls
            </summary>
            <param name="p_CallingControl">The calling control, which gets omitted when calling SmartRefesh() for all controls. Use null to apply the operation on all connected controls.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.Refresh(Jam.Shell.IShellControl,Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>Refreshes the information displayed in all controls connected with this ShellControlConnector except the passed control, which usually will be the caller.</summary>
             <param name="pSenderControl">The control that sent the command. It won't be notified again.</param>
             <param name="pLevel">The level of refresh that should be performed.</param>
             <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
             <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.Refresh(Jam.Shell.RefreshLevel)">
            <summary>Refreshes the information displayed in all controls connected with this ShellControlConnector.</summary>
            <param name="pLevel"> The level of refresh that should be performed. </param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.FullRefreshControls(Jam.Shell.IShellControl)">
            <summary>
            Calls the <see cref="M:Jam.Shell.IShellControl.FullRefresh"/> FullRefresh() method for all connected controls.
            </summary>
            <param name="p_CallingControl">The calling control, which gets omitted when calling FullRefesh() for all controls. Use null to apply the operation on all connected controls.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.PathChanged(Jam.Shell.IShellControl,Jam.Shell.ItemIdList)">
            <summary>
            This public method is used by the connected controls for synchronization. Usually this method should not be called by the user directly.
            </summary>
            <param name="p_Sender">Contains the sender, which triggered the change of the folder.</param>
            <param name="p_ItemIdList">Contains information about the folder.</param>
            <seealso cref="M:Jam.Shell.IShellControl.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.CheckRootFolder(Jam.Shell.ShellFolder,Jam.Shell.ItemIdList)">
            <summary>
            Checks whether the folder is accessible
            </summary>
            <param name="p_RootedAt"></param>
            <param name="p_ItemIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.CheckRootFolder(System.String,Jam.Shell.ItemIdList)">
            <summary>
            Check whether the folder path is a root path of that the item id list represents.
            </summary>
            <param name="p_FolderPath"></param>
            <param name="p_ItemIdList"></param>
            <returns>true, if the folder path is a root path</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.InformConnectedControls(Jam.Shell.IShellControl,Jam.Shell.ItemIdList)">
            <summary>
            Informs the connected controls about a path change, the method allows 
            the p_Sender parameter being null, which results in notifying all connected
            controls about the path change.
            </summary>
            <param name="p_Sender">The p_Sender is excluded from the FolderChanged event if != null.</param>
            <param name="p_ItemIdList">The ItemIdList of the new path.</param>
        </member>
        <member name="F:Jam.Shell.ShellControlConnector.m_HistoryItems">
            <summary>
            A list of <see cref="T:Jam.Shell.ShellItem"/>s with the history of items viewed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellControlConnector.m_HistoryCursor">
            <summary>
            The cursor pointing at the index of the currently selected item
            in the history list.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.MoveInHistory(System.Int32)">
            <summary>
            Move the pointer in the History by delta items.
            If delta is positive, move forward.
            Move backward if delta is negative.
            </summary>
            <param name="delta">The steps to move the history cursor.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.IsMovePossible(System.Int32)">
            <summary>
            Checks if a move by delta steps in the history is possible.
            </summary>
            <param name="delta">Move by steps if delta is negative move backward, else forward</param>
            <returns>True, if the cursor can be moved, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.GetHistoryElement(System.Int32)">
            <summary>
            Retrieve the history element at the index given.
            </summary>
            <param name="p_Index">The index of the element to get.</param>
            <returns>A <see cref="T:Jam.Shell.ShellItem"/> or null if the index is not within range.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.GetHistoryEnumerable">
            <summary>
            Use this method to enumerate all <see cref="T:Jam.Shell.ShellItem"/> instances
            that are available in the History.
            </summary>
            <returns>An enumerator to the <see cref="T:Jam.Shell.ShellItem"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.GetCaptionForHistoryElement(System.Int32)">
            <summary>
            Retrieve the caption of a history element at the index given.
            </summary>
            <param name="p_Index">The index of the element to get the caption from.</param>
            <returns>The caption of a ShellItem or null if the index is not within range.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.SelectedFileChanged(Jam.Shell.IShellControl,Jam.Shell.ItemIdList)">
            <summary>
            This public method is used by the connected controls for synchronization. Usually this method should not be called by the user directly.
            </summary>
            <param name="p_Sender">Contains the sender, which triggered the change of the file.</param>
            <param name="p_ItemIdList">Contains information about the file.</param>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.ConsiderRootedAtProperty">
            <summary>
            If this property is set to true the <see cref="T:Jam.Shell.ShellControlConnector"/> will take the 
            <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> or <see cref="P:Jam.Shell.ShellTreeView.RootedAtFileSystemFolder"/> property 
            of a connected <see cref="T:Jam.Shell.ShellTreeView"/> control into account. 
            For example if RootedAt is set to "c:\" then the ShellControlConnector will filter out
            any folder change event that would point connected controls like the <see cref="T:Jam.Shell.ShellListView"/> to 
            a folder that is not reachable by traversing the directory tree from the root given in the 
            <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> directory.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.HistoryCursor">
            <summary>
            This property contains the index of the current item in the history list
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.HistoryCount">
            <summary>
            Get the count of the items available in the history.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.Enabled">
            <summary>
            Enabled returns true, if the messages should be passed through, false if the messages should be ignored.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.ShowParentfolderItem">
            <summary>
            true, if appropriate controls may display a parent folder item or may go to the parent folder.
            false, if controls should prevent changing to the parent folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.SelectionList">
            <summary>
            If the Checkboxes property of a control connected to a ShellControlConnector is enabled,
            this property contains the checked items. 
            </summary>
            <seealso cref="T:Jam.Shell.PathSelectionList"/>
        </member>
        <member name="E:Jam.Shell.ShellControlConnector.FolderChanged">
            <summary>
            EventHandler for the FolderChanged event, which is triggered when the path has changed in one of the connected controls.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellControlConnector.FileChanged">
            <summary>
            EventHandler for the FolderChanged event, which is triggered when the selected files has changed in one of the connected controls.
            </summary>
        </member>
        <member name="T:Jam.Shell.DriveListItem">
            <summary>
            Class contains infos about any items within the Lists
            </summary>
        </member>
        <member name="T:Jam.Shell.CustomFileListItem">
            <summary>
            The baseclass for list items in the <see cref="T:Jam.Shell.CustomFileList`1"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileListItem.m_Path">
            <summary>
            The absolute path of the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.GetItemPidls">
            <summary>
            Retrieves the relative and absolute ItemIdLists of the given path.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.SetAbsoluteItemIdList(Jam.Shell.ItemIdList)">
            <summary>
            Enables setting the AbsoluteItemIdList for a ListItem.
            </summary>
            <param name="absItemIdList">the absolute ItemIdList for the ListElement. If not set it will be loaded from the path when needed.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.#ctor">
            <summary>
            Initalizes a new ListItem with an empty caption.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.#ctor(System.String)">
            <summary>
            Initializes a new ListItem with the caption given in the parameter.
            </summary>
            <param name="p_Caption">The caption of the listitem.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.AcquireImageIndecesViaThreadPool">
            <summary>
            Implement this method to complete the details from a threadpool
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileListItem.Path">
            <summary>
            Get or set the Path of the filelist item.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileListItem.IsPathBeingChecked">
            <summary>
            Gets or sets a value indicating whether the item`s path is currently being checked in the background.
            </summary>
            <value>
            <c>true</c> if the item`s path is currently being checked in the background; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Jam.Shell.DriveListItem.#ctor">
            <summary>
            Standard constructor for a drive list item
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.#ctor(System.String)">
            <summary>
            Create a drivelist item and immediately assign a path to it
            </summary>
            <param name="path">The </param>
        </member>
        <member name="M:Jam.Shell.DriveListItem.AcquireImageIndecesViaThreadPool">
            <summary>
            For the DriveListItem this method simply calls <see cref="M:Jam.Shell.DriveListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Sets the missing item information, namely available and total disk space and available percent
            </summary>
            <param name="listView"></param>
        </member>
        <member name="M:Jam.Shell.DriveListItem.FillSubitems">
            <summary>
            Fill the columns for the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.FillSubitems(System.Int32)">
            <summary>
            Fill the columns for the item>.
            </summary>
            <param name="p_Index"></param>
        </member>
        <member name="P:Jam.Shell.DriveListItem.Path">
            <summary>
            Get or set the drive-path of the item,
            the value needs to be a real drive, otherwise an exception is thrown
            </summary>
            <exception cref="T:System.ArgumentException">If the path is not pointing to a drive</exception>
        </member>
        <member name="P:Jam.Shell.DriveListItem.TotalBytes">
            <summary>
            Get the total diskspace for the current item
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveListItem.AvailableBytes">
            <summary>
            Get the available diskspace for the current item
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveListItem.AvailablePercent">
            <summary>
            Gets the percentual availability of disk space of the current item
            </summary>
        </member>
        <member name="T:Jam.Shell.DriveList">
            <summary>
            Use the DriveList to display available drives in the host.
            Items that are contained in the list are of type <see cref="T:Jam.Shell.DriveListItem"/>. This applies to the <see cref="P:Jam.Shell.CustomFileList`1.Items"/> and the <see cref="P:Jam.Shell.CustomFileList`1.SelectedItems"/> properties.
            </summary>
        </member>
        <member name="T:Jam.Shell.CustomFileList`1">
            <summary>
            The base class for file lists.
            Implement the two abstract methods <see cref="M:Jam.Shell.CustomFileList`1.CompleteDetails(`0)"/> and <see cref="M:Jam.Shell.JamBaseShellListView.InitColumns"/>
            to use this class. You can also extend your own class from <see cref="T:Jam.Shell.FileListItem"/> and pass that
            as the generic parameter or simply use the FileListItem class provided in the ShellBrowser package if 
            you do not intend to add special properties.
            </summary>
            <typeparam name="LIST_ITEM">Needs to extend FileListItem and can specify more columns if needed.</typeparam>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_BackgroundWorker">
            <summary>
            This background worker can be used to add items to the list asynchronously.
            <seealso pref="BackgroundWorker"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_AllowDropToTheBackground">
            <summary>
            Whether the user is allowed to drop items onto the background of the component.
            <seealso pref="AllowDropToTheBackground"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ColorCompressed">
            <summary>
            The color that should be used for a compressed file
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ColorEncrypted">
            <summary>
            The color that should be used for an encrypted file
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ShowOverlayIcons">
            <summary>
            Flag indicating if the overlay icons are shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_CheckIfExists">
            <summary>
            Flag indicating, if the existence of items should be checked.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_AllowDuplicates">
            <summary>
            <see cref="P:Jam.Shell.CustomFileList`1.AllowDuplicates"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_UseThreadPool">
            <summary>
            <see cref="P:Jam.Shell.CustomFileList`1.UseThreadPool"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ReadOnly">
            <summary>
            <see cref="P:Jam.Shell.CustomFileList`1.ReadOnly"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ItemsDictionary">
            <summary>
            This dictionary contains LIST_ITEM entries sorted by filename, for fast access
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetSelectedItemCollectionType">
            <summary>
            Gets the type of the selected item collection.
            </summary>
            <returns>A <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/> class typed with the list item type of this list.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetItemCollectionType">
            <summary>
            Gets the type of the item collection.
            </summary>
            <returns>A <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/> class typed with the list item type of this list.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetListViewItemSorter">
            <summary>
            Returns the IComparer that should be used for sorting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.ResetItemDetails">
            <summary>
            Resets all items so the next time their <see cref="M:Jam.Shell.ShellListBaseItem.CompleteDetails"/> method is 
            called, the information is retrieved again.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetUIObject(System.Guid)">
            <summary>
            Returns for the currently selected item a COM object that implements the requested interface.
            </summary>
            <param name="riid">IID of the interface that should be returned</param>
            <returns>The UIObject that is returned by <see cref="M:Jam.Shell.ShellBrowser.GetUIObject(System.Guid)"/></returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CheckBoxHit(System.String)">
            <summary>
            This method is currently a surrogate for the implementation of the checkbox functionality
            that will follow.
            </summary>
            <param name="path">path to it</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Reset">
            <summary>
            This has to be implemented by the inherting control.
            </summary>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CompleteDetails(`0)">
            <summary>
            Completes the details of an item, like image index, sub items etc.
            </summary>
            <param name="aItem">The item to complete the details for.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.BeforeShellCommandHandler(System.Object,Jam.Shell.BeforeShellCommandEventArgs)">
            <summary>
            Handles the "BeforeShellCommand" that is triggered before the chosen shellcommand is executed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The BeforeShellCommandEventArgs.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.IsItemInList(System.String)">
            <summary>
            Checks whether an item with the given filename can be found in the list.
            </summary>
            <param name="p_FileName">the filename to check for</param>
            <returns>true if the filename is in the filelist</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.ReturnItemInList(System.String)">
            <summary>
            Returns the item that is associated to the filename given as a parameter.
            Uses the SortedDictionary that is maintained within the FileList to
            determine whether the p_FileName is contained as a key if the AllowDuplicates property is set to true.
            Otherwise it iterates through the list of items in O(n) to find the first entry.
            </summary>
            <param name="p_FileName">The filename to search for through the dictionary</param>
            <returns>null, if the item is not in the list otherwise a reference to the item</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddStrings(System.String[])">
            <summary>
            Adds a list of paths to the filelist.
            The items are initialized to be unchecked. It is assumed that the paths do not contain
            duplicates. If you want pass a filelist that may contain duplicates, use the
            <see cref="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)"/> method.
            </summary>
            <param name="p_Paths">a list of absolute paths or filenames to add</param>
            <returns>a list of items that where added</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddStrings(System.String[],System.Boolean)">
            <summary>
            Adds a list of paths to the filelist. It is assumed that the paths do not contain
            duplicates. If you want pass a filelist that may contain duplicates, use the
            <see cref="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)"/> method.
            </summary>
            <param name="p_Paths">a list of absolute paths or filenames to add</param>
            <param name="p_Checked">if true the items are added with state checked</param>
            <returns>a list of items that where added</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
            Adds a list of paths to the filelist. It is assumed that the paths do not contain
            duplicates. If you want to pass a filelist that may contain duplicates, use the
            <see cref="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)"/> method.
            </summary>
            <param name="p_Paths">a list of absolute paths or filenames to add</param>
            <param name="p_Checked">if true the items are added with state checked</param>
            <param name="p_ContainsDuplicates">set this to true if the list might contain duplicates (slower)</param>
            <returns>a list of items that where added</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddPidls(Jam.Shell.ItemIdList[],System.Boolean,System.Boolean)">
            <summary>
            Like addStrings, but adds items by ItemIdLists instead. Used internally to keep already retreived ItemIdLists.
            Attention: not all files have a PIDL (i.e. ItemIdList.Handle). To be able to add those files anyway, the ItemIdList.Path must contain a value.
            </summary>
            <param name="pidls">Array of absolute ItemIdLists for the elements to be added</param>
            <param name="p_Checked">if true the items are added with state checked</param>
            <param name="p_ContainsDuplicates">set this to true if the list might contain duplicates (slower)</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Add(System.String)">
            <summary>
            Adds a path to the filelist. The item is initialized unchecked and 
            it is assumed, that it is no duplicate entry.
            </summary>
            <param name="p_Path">The path to add</param>
            <returns>The item that was added, null if CheckIfExists was enabled and the file has not been found.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CreateListItem(System.String,System.Boolean,System.Boolean,Jam.Shell.ItemIdList,System.Boolean@)">
            <summary>
            Creates a new ListItem
            </summary>
            <param name="p_Path">The absolute path to create a list item for.</param>
            <param name="p_Checked">The checked state of the newly created item</param>
            <param name="p_CheckDuplicates">Forces to check for a duplicate O(n), 
            even if the <see cref="P:Jam.Shell.CustomFileList`1.AllowDuplicates"/> functionality is disabled and therefore no 
            Dictionary&lt;Path,Item&gt; datastructure is available.</param>
            <param name="p_PathAlreadyExisted">Is true, 
            if the p_CheckDuplicates was true and a duplicate path entry has been found.
            Is true if the property <see cref="P:Jam.Shell.CustomFileList`1.AllowDuplicates"/> is false and the fullpath
            was found in the dictionary.</param>
            <param name="absoluteItemIdList">pass the absolute ItemIdList for the element if availabe. This will speed up later actions like sorting/displaying</param>
            <returns>The newly created ListItem, or if p_PathAlreadyExisted is true, the
            existing item instance.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Add(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a file or path to the list.
            </summary>
            <param name="p_Path">The item to add.</param>
            <param name="p_Checked">Whether the item is marked or not.</param>
            <param name="p_CheckDuplicates">If true, checks for a duplicate path already contained in the list.</param>
            <returns>the item that was added, null if CheckIfExists was enabled and the file has not been found.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Clear">
            <summary>
            Removes all items from the FileList
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CheckAll">
            <summary>
            Sets the Checked state of all Items to "checked" (true).
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.UnCheckAll">
            <summary>
            Sets the Checked state of all Items to "unchecked" (false).
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetFullPath(`0)">
            <summary>
            Get the full path of an item.
            </summary>
            <param name="p_FileListItem">the item to retrieve the full path for.</param>
            <returns>full path of the listitem</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetFullPath(System.Int32)">
            <summary>
            Get the fullpath of an item at the index specified.
            </summary>
            <param name="p_Index">the index </param>
            <returns>full path at index</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDoubleClick(System.EventArgs)">
            <summary>
            Overrides the OnDoubleClick eventhandler to invoke the default command on the selected item.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.InvokeCommandOnSelected(System.String)">
            <summary>
            Invokes the given command on the selected item(s).
            </summary>
            <param name="command">A command verb, like "open", "properties", "delete", etc.</param>
            <returns>true if the command was invoked successfully, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.InvokeContextMenuCommand(System.String)">
            <summary>
            Invokes the given shell command on the selected file(s).
            </summary>
            <param name="command">The command as string that should be executed, e.g. "copy" or "open". An empty string will invoke the default command.</param> 
            <returns>true if successful. false if an error occured.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.PrepareMultiObjects(Jam.Shell.ShellBrowser)">
            <summary>
            Prepares the selected items in the list for being used with the m_ShellBrowser, an instance of <see cref="T:Jam.Shell.ShellBrowser"/>.
            </summary>
            <returns><b>true</b>if one or more items have been successfully prepared; otherwise <b>false</b></returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Remove(System.String)">
            <summary>
            Removes an item from the list.
            </summary>
            <param name="p_Filename">the file or path of the item that is to be removed from the list</param>
            <returns>the item that has been removed, null if it has not been found in the list</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Remove(`0)">
            <summary>
            Removes an item from the list.
            </summary>
            <param name="p_Item">The item to delete</param>
            <returns>the item that has been removed, null if the item was not in the list</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.RemoveItemFromList(Jam.Shell.ShellListBaseItem)">
            <summary>
            Removes the list element from the list
            </summary>
            <param name="item">a CustomFileListItem that should be removed.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnAddItem(Jam.Shell.AddFileItemEventArgs)">
            <summary>
            Raises the <see cref="E:AddItem"/> event.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.AddFileItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseEnter event.
            </summary>
            <param name="e">event arguments</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseLeave event.
            </summary>
            <param name="e">event arguments</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overrides the OnKeyDown eventhandler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.SelectAll">
            <summary>
            Use SelectAll to select all items in a ShellFileList.
            </summary>
            <returns>Returns true, if all files were selected.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.FullRefresh">
            <summary>
            This method removes not existing items if the property CheckIfExists is true.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.SmartRefresh">
            <summary>
            This method is left empty in the <see cref="T:Jam.Shell.CustomFileList`1"/> and <see cref="T:Jam.Shell.FileList"/> classes.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.SelectedItems">
            <summary>
            Gets the items that are selected in the control.
            </summary>
            <returns>A <see cref="T:JamBaseShellListView.ShellListViewSelectedItemCollection{LIST_ITEM}" /> that contains the items that are selected in the control. 
            If no items are currently selected, an empty <see cref="T:JamBaseShellListView.ShellListViewSelectedItemCollection{LIST_ITEM}" /> is returned.</returns>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.Items">
            <summary>
            Gets a collection containing all items in the control.
            </summary>
            <returns>A <see cref="T:JamBaseShellListView.ShellListViewItemCollection{LIST_ITEM}" /> that contains all the items in the <see cref="T:CustomFileList{ITEM_CLASS}" /> control.</returns>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.AllowDuplicates">
            <summary>
            Whether to allow duplicates in the Filelist or not, the default is to allow them.
            If AllowDuplicates is set to false, insertion to the FileList may get significantly slower
            for large sets of files.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ItemsDictionary">
            <summary>
            This dictionary contains LIST_ITEM entries sorted by filename, for fast access
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.BackgroundWorker">
            <summary>
            Returns the Backgroundworker that is associated with each FileList instance.
            The BackgroundWorker is the required and preferred way to asynchronously
            add items to a component from a different thread. 
            See http://msdn2.microsoft.com/en-us/library/ms171728.aspx.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.UseThreadPool">
            <summary>
            Whether to use the system threadpool to obtain information on listview items.
            If this property is false (the default value), the complete file detail information is retrieved as
            soon as the item is displayed the first time within the listview.
            Sometimes it is useful to have all file information fetched as soon as possible without loosing userinterface
            responsiveness. If set to true, the item information for all files in the listview is additionally 
            fetched from the background this further enhances performance on multicore systems.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.AllowDropToTheBackground">
            <summary>
            If this property is set to true, the user is allowed to drop items onto the background in order to add them to the displayed list of files.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.CopyMode">
            <summary>
            Copy mode allows you to control the behaviour when files or folders get dropped.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.AutoScrollDelay">
            <summary>
            The delay in milliseconds after that the control scrolls automatically during a drag and drop operation.
            A value of 0 disables the auto scroll feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.OwnerDraw">
            <summary>
            The value of the OwnerDraw property must always be true. This is why the Property is
            reimplemented here. The setting to false is ignored, and a debug message is shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.CheckBoxes">
            <summary>
            Use this property to turn on or off the checkboxes for file and folder selection. 
            The checkboxes will only work, if a <see cref="T:Jam.Shell.ShellControlConnector"/> has been 
            assigned to the ShellControlConnector property of this component. It will 
            automatically synchronize the selection state of the items in multiple shell 
            controls linked together with this ShellControlConnector.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.NoFillOnStartup">
            <summary>
            This property is always false for FileList and DriveList.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ShowColorCompressed">
            <summary>
            If set, compressed files and folders will be shown in that particular Color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ShowColorEncrypted">
            <summary>
            If set, encrypted files and folders will be shown in that particular color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ShowOverlayIcons">
            <summary>
            If set to 'false', no overlay icons will be shown, which improves the performance of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.CheckIfExists">
            <summary>
            If set to true, it is checked whether the files that are added to the list 
            do exist on the filesystem.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ReadOnly">
            <summary>
            Prevents operations that change the file system from being executed.
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.AddItem">
            <summary>
            This event is fired if a file is to be added to the listview. It is possible to prevent adding the file by setting the CanAdd flag in the <see cref="T:Jam.Shell.AddItemEventArgs"/> to false.
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.RemoveItem">
            <summary>
            This event is issued if a file is removed from the listview. 
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.ClearItems">
            <summary>
            This event occurs if the FileList is cleared by calling the clear() method.
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.ItemListChanged">
            <summary>
            This event occurs if the FileList changed, ie. an item was removed, added or the list is cleared.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.#ctor">
            <summary>
            Standard constructor for the drivelist
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.FullRefresh">
            <summary>
            Refreshes the view by clearing all items and re-adding all drives again
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.CompleteDetails(Jam.Shell.DriveListItem)">
            <summary>
            Completes item details of a drivelist item,
            unused in the current implementation, will call <see cref="M:Jam.Shell.DriveListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>
            </summary>
            <param name="aItem"></param>
        </member>
        <member name="M:Jam.Shell.DriveList.InitColumns">
            <summary>
            Initializes the columns.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.Add(System.String)">
            <summary>
            Adds the specified path if it is not already included in the list.
            </summary>
            <param name="p_Path">The path to add to the <see cref="T:Jam.Shell.DriveList"/></param>
            <returns>The <see cref="T:Jam.Shell.DriveListItem"/> that was added or the duplicate already contained in the list.</returns>
        </member>
        <member name="M:Jam.Shell.DriveList.DisplayHeaderContextMenu(System.Object)">
            <summary>
            Handles the HeaderRightClick event. Not implemented so far.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Jam.Shell.DriveList.Compare(System.Object,System.Object)">
            <summary>
            Comparison method for ListView items of the <see cref="T:Jam.Shell.DriveList"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.DriveList.ShellChangeNotifier_Change(System.Object,Jam.Shell.ChangeNotificationEventArgs)">
            <summary>
            This method is called if a drive is added or removed. If so, the DriveList is refreshed.
            </summary>
            <param name="sender">The event sender</param>
            <param name="e">The ChangeNotification arguments</param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnDoubleClick(System.EventArgs)">
            <summary>
            This event occurs if the user double-clicked onto an item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            Overrides the <see cref="M:Jam.Shell.DriveList.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)">
            <summary>
            Handles drawing of the sub item
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Jam.Shell.DriveList.ViewState">
            <summary>
            Returns the ViewState that is always Details for the ShellDriveList.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.View">
            <summary>
            Returns the ViewState that is always Details for the ShellDriveList.
            </summary>
            <remarks>Obsolete - use ViewState instead.</remarks>
        </member>
        <member name="P:Jam.Shell.DriveList.WarnLevelPercent">
            <summary>If the free space on the drive is below this value, the bar will be drawn in yellow.</summary>
            <remarks>The default value is 2 percent. Set this property to 0 if you do not want the color to be changed.</remarks>
            <seealso>ErrorLevelPercent</seealso>
        </member>
        <member name="P:Jam.Shell.DriveList.ErrorLevelPercent">
            <summary>If the free space on the drive is below this value, the bar will be drawn in red.</summary>
            <remarks>The default value is 8 percent. Set this property to 0 if you do not want the color to be changed.</remarks>
            <seealso>WarnLevelPercent</seealso>
        </member>
        <member name="P:Jam.Shell.DriveList.AllowDrag">
            <summary>
            Overwrites the <see cref="P:Jam.Shell.JamBaseShellListView.AllowDrag"/> property because the DriveList does not support Drag/Drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.AllowDrop">
            <summary>
            Overwrites the <see cref="P:Jam.Shell.JamBaseShellListView.AllowDrop"/> property because the DriveList does not support Drag/Drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnNameText">
            <summary>
            The text in the "name" column header, if this value is null, a
            localized windows system string is used per default 
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnSizeText">
            <summary>
            The text in the "size" column header, if this value is null, a
            localized windows system string is used per default 
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnFreeText">
            <summary>
            The text in the "free" column header, if this value is null, a
            localized windows system string is used per default 
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnFreePercentageText">
            <summary>
            The text in the "% free" column header, if this value is null, a
            localized windows system string is used per default
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBorderColor">
            <summary>
            The border color of the percentage bar
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBarWarningColor">
            <summary>
            The bar color if the percentage is below warning level.
            </summary>
            <seealso>WarningLevelPercent</seealso>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBarErrorColor">
            <summary>
            The bar color if the percentage is below error level.
            </summary>
            <seealso>ErrorLevelPercent</seealso>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentFillColor">
            <summary>
            The fill color of the free disk space percentage bar
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBarColor">
            <summary>
            The fill color of the occupied disk space percentage bar
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentTextColor">
            <summary>
            The text color of the percentage bar
            </summary>
        </member>
        <member name="T:Jam.Shell.FileListItem">
            <summary>
            Class contains infos about any items within the Lists.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.FillSubitemsIfEmpty">
            <summary>
            Helper method to enhance readability.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.FillSubitems">
            <summary>
            Fills the columns of the listview with basic information such as filename/path
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.FillSubitems(System.Int32)">
            <summary>
            Fills the columns of the listview with basic information such as filename/path
            </summary>
            <param name="p_Index">Just the subitem at the index position should be filled.</param>
        </member>
        <member name="M:Jam.Shell.FileListItem.Rename(System.String)">
            <summary>
            Renames the item.
            </summary>
            <param name="p_NewName">The new item name.</param>
            <returns>True if the renaming was successful.</returns>
        </member>
        <member name="M:Jam.Shell.FileListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Completes the details for a filelist item
            </summary>
            <param name="listView">The listview the items is associated with</param>
        </member>
        <member name="M:Jam.Shell.FileListItem.AcquireImageIndecesViaThreadPool">
            <summary>
            This method enqueues a work item into the system threadpool to 
            get the image indeces of the particular FileListItem.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.CompleteDetailsCallBack(System.Object)">
            <summary>
            This method is called if the user work item gets dequeued from the threadpool.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.FileListItem.#ctor">
            <summary>
            Initalizes a new ShellListItem with an empty caption.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.#ctor(System.String)">
            <summary>
            Initializes a new ShellListItem with the caption given in the parameter.
            </summary>
            <param name="p_Caption">The caption of the listitem.</param>
        </member>
        <member name="M:Jam.Shell.FileListItem.DetermineFileSizeAndFileCount">
            <summary>
            Determines the file size of the item and if its a folder, the number of files it contains.
            See <see cref="P:Jam.Shell.FileListItem.FileSize"/> and <see cref="P:Jam.Shell.FileListItem.FileCount"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileListItem.Path">
            <summary>
            Get or set the Path of the filelist item.
            </summary>
            <example>
            This smaple code shows the path of the last item in a FileList:
            <code>
            FileListItem fli = (FileListItem)FileList1.Items[FileList.Items.Count-1];
            MessageBox.Show(fli.Path);
            </code>
            </example>
        </member>
        <member name="P:Jam.Shell.FileListItem.FileSize">
            <summary>
            If this item is a file this property returns its size,
            if this item is a folder it returns the files contained in that folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileListItem.FileCount">
            <summary>
            Returns "1" if the item is a file, if the item is a folder, the number of files contained in that folder
            </summary>
        </member>
        <member name="T:Jam.Shell.IFileMatcher">
            <summary>
            This interface is used to call a file matching mechanism from the background worker thread managed within 
            a FileSearcher instance. Furthermore it is used by the File/Folder change notification.
            </summary>
        </member>
        <member name="M:Jam.Shell.IFileMatcher.FileMatches(Jam.Shell.SearchOptions,System.String)">
            <summary>
            Check if a file matches
            </summary>
            <param name="p_SearchOptions">the search criteria</param>
            <param name="filename">the filename to match</param>
            <returns>true if the file matches</returns>
        </member>
        <member name="T:Jam.Shell.FileSearcher">
            <summary>
            The FileSearcher class wraps a search request into a class instance.
            It provides a method DoSearchWork that is to be registered to a BackgroundWorker.DoWork
            event handler.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileSearcher.m_DirectoryEstimationDepth">
            <summary>
            The depth the searcher scans for subdirectories and counts them 
            before starting the actual search this value should not be greater than 3.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileSearcher.m_QueueOfFilesFound">
            <summary>
            This queue is used to synchronize between the UI-Component and the searched
            items...
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.DequeueFile">
            <summary>
            Dequeues a file from the queue of the found items.
            </summary>
            <returns>a file or null if the queue is empty</returns>
        </member>
        <member name="M:Jam.Shell.FileSearcher.ClearQueueOfFoundFiles">
            <summary>
            Issues a Queue.Clear() operation to empty the queue of the found files.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.#ctor(Jam.Shell.SearchOptions,System.String[],System.ComponentModel.BackgroundWorker,Jam.Shell.IFileMatcher)">
            <summary>
            Construct a FileSearcher object.
            Registers itself to the DoWork event of the BackgroundWorker passed and keeps
            a reference to asynchronously cancel the search. The FileSearcher object will
            not try to estimate the percentage, use <see cref="M:Jam.Shell.FileSearcher.#ctor(Jam.Shell.SearchOptions,System.String[],System.ComponentModel.BackgroundWorker,Jam.Shell.IFileMatcher,System.Byte)"/>
            if you want to estimate the percentage.
            </summary>
            <param name="p_SearchOptions"></param>
            <param name="p_SearchPaths"></param>
            <param name="p_SearchWorker">The BackgroundWorker object.</param>
            <param name="p_FileMatcher">An object implementing the IFileMatcher interface that is can be used to extend/tune the search criterion</param>
        </member>
        <member name="M:Jam.Shell.FileSearcher.#ctor(Jam.Shell.SearchOptions,System.String[],System.ComponentModel.BackgroundWorker,Jam.Shell.IFileMatcher,System.Byte)">
            <summary>
            Construct a FileSearcher object.
            Registers itself to the DoWork event of the BackgroundWorker passed and keeps
            a reference to asynchronously cancel the search. The FileSearcher object will
            roughly estimate the percentage until the search finishes if the recursive flag
            is set in the SearchOptions 
            </summary>
            <param name="p_SearchOptions"></param>
            <param name="p_SearchPaths"></param>
            <param name="p_SearchWorker">The BackgroundWorker object.</param>
            <param name="p_FileMatcher">An object implementing the IFileMatcher interface that is can be used to extend/tune the search criterion</param>
            <param name="p_DirectoryEstimationDepth">The depth the directory searchpath is scanned for subfolders (values 2 or 3 are good), to give an estimation of the time needed to finish the search. If this parameter is 0 no estimation is performed.</param>
        </member>
        <member name="M:Jam.Shell.FileSearcher.Start">
            <summary>
            Starts the search
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.Cancel">
            <summary>
            Asynchronously cancels the search
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.EstimationCountDirectories(System.String[],System.Int32)">
            <summary>
            Counts subdirectories in folders. Level should not be greater than 3.
            </summary>
            <param name="p_Paths">The folders to estimate.</param>
            <param name="p_Level">The depth to count directories.</param>
            <returns>The number of subdirs in the levels below (no deeper than level).</returns>
        </member>
        <member name="M:Jam.Shell.FileSearcher.DoSearchWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            This method starts to search the directory given in the searchpath.
            precondition: m_SearchPath is set to a valid and existing path!
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.OnSearchExceptionOccurred(Jam.Shell.SearchExceptionEventArgs)">
            <summary>
            Fires an event if an exception during a search occurred.
            </summary>
            <param name="p_EventArgs"></param>
        </member>
        <member name="E:Jam.Shell.FileSearcher.SearchExceptionOccurred">
            <summary>
            This event is fired everytime an exception occurs when a single item is processed during the search 
            process. It is possible to handle or ignore the exception and mark this in the <see cref="T:Jam.Shell.SearchExceptionEventArgs"/>
            If e.g. the exception if permanent and is left unhandled the search will cancel, a <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event
            will immediately follow which passes the Exception in the event args again, so it can be finally handled.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileSearcher.ShowErrors">
            <summary>
            Set this to true if errors should be shown during the search within a messagebox.
            </summary>
        </member>
        <member name="T:Jam.Shell.FileList">
            <summary>
            Use the Filelist if you want to search for files or folders within a specific path.
            You can also display several files residing in different folders, and allow the user to 
            use drag&amp;drop operations to manage the files.
            <para> </para>
            Items that are contained in the list are of type <see cref="T:Jam.Shell.FileListItem"/>. This applies to the <see cref="P:Jam.Shell.CustomFileList`1.Items"/> and the <see cref="P:Jam.Shell.CustomFileList`1.SelectedItems"/> properties.
            </summary>
            <remarks>
            To get the path of an item in the <c>FileList</c>, use the <see cref="P:Jam.Shell.FileListItem.Path"/> property.
            </remarks>
        </member>
        <member name="F:Jam.Shell.FileList.m_SearchOptions">
            <summary>
            Keeps a reference for the search options, that is used by the FileSearcher object
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_FileSearcher">
            <summary>
            The FileSearch reference encapsulates the searching capabilities of the component
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_InFolderColumnIndex">
            <summary>
            The index for the "In Folder" column.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_CustomHeaderMenuCreated">
            <summary>
            We need a custom header menu because of the custom index of the folder path column.
            this flag indicates whether it was created.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_countFolders">
            <summary>
            True if folder should be counted too.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_Desktop">
            <summary>
            save the reference to the com-object; bug #5714
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.FileList_ClearItems(System.Object,System.EventArgs)">
            <summary>
            If the file list is cleared this method resets <see cref="P:Jam.Shell.FileList.TotalFileSize"/> and <see cref="P:Jam.Shell.FileList.TotalFileCount"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.FileList.RefreshFileCountAndSize">
            <summary>
            Refreshes TotalFileCount/-Size. <see cref="E:Jam.Shell.FileList.SizeOrCountRefreshed"/> is triggered when finished.
            </summary>
            <remarks> If the CountFolders property is True, the folder values are counted in the background and may take some time to be available.</remarks> 
        </member>
        <member name="M:Jam.Shell.FileList.GetSelectedItemCollectionType">
            <summary>
            Gets the type of the selected item collection.
            </summary>
            A <see cref="T:Jam.Shell.FileListItem"/> typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/>
        </member>
        <member name="M:Jam.Shell.FileList.#ctor">
            <summary>
            Constructs a FileList object
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.FileList.Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:Jam.Shell.FileListItem"/> objects by their ItemIdList with each other. 
            </summary>
            <param name="x">First FileListItem</param>
            <param name="y">Second FileListItem, which will be compared with first one.</param>
            <returns>
            Returns a value less than 0 if x is less than y, 
            0 if x is equal to y and a value greater
            than 0 if x is greater than y.
            </returns>
            <remarks>User added columns will be compared by the Text property of the ShellListItems.</remarks>
        </member>
        <member name="M:Jam.Shell.FileList.Add(System.String,System.Boolean)">
            <summary>
            Adds a path to the filelist. The item is initialized with state given in checked parameter and 
            it is assumed, that it is no duplicate entry.
            </summary>
            <param name="pPath">The path to add</param>
            <param name="pChecked">set this to true, if the item should be checked.</param>
            <returns>The item that was added</returns>
        </member>
        <member name="M:Jam.Shell.FileList.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data, <see cref="P:System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault"/> is explicitly set to true</param>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String)">
            <summary>
            Searches the path given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPath">The path in which to search for the pattern.</param>
            <exception cref="T:System.Exception">If no valid, existing p_Path is provided.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String,System.Boolean)">
            <summary>
            Searches the path given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPath">The path in which to search for the pattern.</param>
            <param name="pEstimate">if true, the searcher tries to estimate percentage of search progress and sets a value in <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
            <exception cref="T:System.ArgumentException">If no valid, existing p_Path is provided.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String[])">
            <summary>
            Searches the paths given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPaths">Array of paths in which to search for the pattern.</param>
            <exception cref="T:System.Exception">If any of the provided paths is not valid, or not existing.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String[],System.Boolean)">
            <summary>
            Searches the paths given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPaths">Array of paths in which to search for the pattern.</param>
            <param name="pEstimate">if true, the searcher tries to estimate percentage of search progress and sets a value in <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
            <exception cref="T:System.ArgumentException">If any of the provided paths is not valid, or not existing.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)">
            <summary>
            Searches the paths given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <remarks>The search itself is done in a background worker thread. With event <see cref="E:Jam.Shell.FileList.SearchFileMatches"/> you can further customize the search result.
             Information on Progress is passed via event <see cref="E:Jam.Shell.FileList.SearchProgressChanged"/>. 
            <para> </para>
            Exceptions that occur during the search are by default suppressed, but you can influence this with event <see cref="E:Jam.Shell.FileList.SearchExceptionOccurred"/>.
            </remarks>
            <param name="pPaths">Array of paths in which to search for the pattern.</param>
            <param name="pEstimate">if true, the searcher tries to estimate percentage of search progress and sets a value in <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
            <param name="pThrowExceptionOnInvalidPath">if set to true an exception is thrown if a path does not exist this often occurs with removable devices</param>
            <exception cref="T:System.ArgumentException">If any of the provided paths is not valid, or not existing.</exception>
        </member>
        <member name="M:Jam.Shell.FileList.m_FileSearcher_SearchExceptionOccurred(System.Object,Jam.Shell.SearchExceptionEventArgs)">
            <summary>
            Raises the SearchExceptionOccured event.
            </summary>
            <param name="pSender">the sender of the exception</param>
            <param name="pEventArgs">the event args with which to control the exception handling</param>
        </member>
        <member name="M:Jam.Shell.FileList.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnBeforeLabelEdit event, to prepare renaming a file or folder in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnBeforeLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.FileList.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnAfterLabelEdit event, to rename files or folders in the file system, when the have been renamed in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnAfterLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.FileList.ShellChangeNotifier_Change(System.Object,Jam.Shell.ChangeNotificationEventArgs)">
            <summary>
            This method is called if a file change happens for the current search path and
            the property <see cref="P:Jam.Shell.JamBaseShellListView.AutomaticRefresh"/> is true. If so, the FileList is updated accordingly.
            </summary>
            <param name="pSender">The event sender</param>
            <param name="e">The ChangeNotification arguments</param>
        </member>
        <member name="M:Jam.Shell.FileList.SearchCancel">
            <summary>
            Call this method to cancel a pending search.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.TotalSizeOrCountRefreshed">
            <summary>
            The TotalFileSize/-Count have been refreshed.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.WorkerSearchProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            The progress of the Search Backgroundworker changed.
            </summary>
            <param name="sender"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:Jam.Shell.FileList.WorkerSearchCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            A search is complete, was cancelled or an exception was thrown.
            Anyhow the BackgroundWorker finished. An event is fired to notify the 
            user of the component as well.
            </summary>
            <param name="sender">BackgroundWorkerThread</param>
            <param name="arguments">Them Completion event arguments of the worker thread</param>
        </member>
        <member name="M:Jam.Shell.FileList.FileMatches(Jam.Shell.SearchOptions,System.String)">
            <summary>
            Override this method to implement/extend your own FileMatching mechanism.
            </summary>
            <example>
            <code>
            class MyFileList : Jam.Shell.FileList 
            {
                protected override bool FileMatches(SearchOptions p_SearchOptions, string filename)
                {
                    if (!base.FileMatches(p_SearchOptions, filename)) 
                    {
                        return false;
                    }
                    //your matching logic here; i.e. open the file, search for pattern...
                    return true;
                }
            }
            </code>
            </example>
            <param name="p_SearchOptions">The SearchOptions that where specified for the search run.</param>
            <param name="filename">Absolute filename of the item the search process is currently handling</param>
            <returns>true if the file matches the search criterion</returns>
        </member>
        <member name="M:Jam.Shell.FileList.Reset">
            <summary>
            Resets the SpecialFolder of the internal ShellBrowser. This is especially needed for Column or subitem initialization.
            </summary>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Jam.Shell.FileList.InitColumns">
            <summary>
            Initializes the columns by reading the column headers from the users personal folder.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.ShowColumn(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the column with the passed ShellColumnId.
            </summary>
            <param name="pShellColumnId">The <see cref="T:Jam.Shell.SHCOLUMNID"/> representing the column.</param>
            <returns>
            0 or more: the index of the added column.
            -1: column couldn't be inserted.
            </returns>
        </member>
        <member name="M:Jam.Shell.FileList.UpdateSubitemsAfterColumnGetsVisible(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Updates the subitems after a column gets visible.
            </summary>
            <param name="p_ColID">The SHColumnID of the changed column.</param>
            <param name="p_LocalIndex">Local index of the column.</param>
        </member>
        <member name="M:Jam.Shell.FileList.ClearColumns">
            <summary>
            Clears the current columns and the header context menu. Please use this method instead of ListView.Columns.Clear().
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.CompleteDetails(Jam.Shell.FileListItem)">
            <summary>
            Completes the details of an item, like image index, sub items etc.
            </summary>
            <param name="aItem">the item</param>
        </member>
        <member name="M:Jam.Shell.FileList.DisplayHeaderContextMenu(System.Object)">
            <summary>
            Handles the HeaderRightClick event.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Jam.Shell.FileList.OnFileMatches(Jam.Shell.FileMatchEventArgs)">
            <summary>
            Fires an event that a file matches the default search criteria if the user registers to the SearchFileMatches event
            the user can further decide whether the file should match.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.FileMatchEventArgs"/>.</param>
        </member>
        <member name="M:Jam.Shell.FileList.OnSearchCompleted(Jam.Shell.SearchCompletedEventArgs)">
            <summary>
            Fires an event if the Search has completed.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.SearchCompletedEventArgs"/>.</param>
        </member>
        <member name="M:Jam.Shell.FileList.OnSearchProgressChanged(Jam.Shell.SearchProgressChangedEventArgs)">
            <summary>
            Fires an event if the Search has completed.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
        </member>
        <member name="P:Jam.Shell.FileList.ViewState">
            <summary>
            Gets or sets how items are displayed in the ShellListView control.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.SearchOptions">
            <summary>
            The SearchOptions are used to set different options before calling
            the <see cref="M:Jam.Shell.FileList.Search(System.String)"/> method.
            <seealso cref="P:Jam.Shell.FileList.SearchOptions"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.CountFolders">
            <summary>
            True if the TotalFileSize and TotalFileCount should include folders.
            Warning: FileSize/FileCount are calculated in a background-thread,
            so the correct result may take some time if the "file" is a folder 
            and files are located in it's subfolders (recursive calculation).
            In that case, the default value -1 is returned if the calculation
            could not finish in time.
            This behaviour will be fixed soon (bug #2895).
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.TotalFileCount">
            <summary>
            This property returns the number of files in the FileList. If the FileList contains folders the files in those particular folders are also counted.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.TotalFileSize">
            <summary>
            This property returns the size of all files in the FileList. If the FileList contains folders, the foldersize is determined recursively.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.InFolderColumnIndex">
            <summary>
            The column index of the column containing the parent folder of a file.
            </summary>
        </member>
        <member name="E:Jam.Shell.FileList.BeforeShellCommand">
            <summary>
            This event is fired when a shell command is to be executed, ie. via the context menu
            It is possible to permit the execution of the shell command by modifying the BeforeShellCommandEventArgs
            </summary>
        </member>
        <member name="E:Jam.Shell.FileList.SizeOrCountRefreshed">
            <summary>
            This event occurs if the FileList.TotalFileCount or FileList.TotalFileSize were refreshed.
            </summary>
        </member>
        <member name="E:Jam.Shell.FileList.SearchFileMatches">
            <summary>
            Register to this event if you want to further investigate the files the component examines. 
            In the <see cref="T:Jam.Shell.FileMatchEventArgs"/> you have access to the Filename and can explicitly 
            specify whether the file matches, e.g. after you performed a pattern match within the data of the file.
            </summary>
        </member>
        <member name="E:Jam.Shell.FileList.SearchCompleted">
            <summary>
            This event is fired when a search operation is complete, has been cancelled, or an exception has been thrown.
            </summary>
        </member>
        <member name="E:Jam.Shell.FileList.SearchProgressChanged">
            <summary>
            This event is fired everytime the progress of the searcher changes, that is when new items are filled to the FileList.
            </summary>
        </member>
        <member name="E:Jam.Shell.FileList.SearchExceptionOccurred">
            <summary>
            This event is fired everytime an exception occurs when a single item is processed during the search 
            process. It is possible to handle or ignore the exception and mark this in the <see cref="T:Jam.Shell.SearchExceptionEventArgs"/>
            If e.g. the exception is permanent and is left unhandled the search will cancel, a <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event
            will immediately follow which passes the Exception in the event args again, so it can be finally handled.
            </summary>
        </member>
        <member name="T:Jam.Shell.FileMatchEventArgs">
            <summary>
            Event arguments for the FileMatchEvent
            </summary>
        </member>
        <member name="M:Jam.Shell.FileMatchEventArgs.#ctor(System.String)">
            <summary>
            The standard construct, given the full filepath as a parameter
            </summary>
            <param name="p_File">filepath+name</param>
        </member>
        <member name="P:Jam.Shell.FileMatchEventArgs.File">
            <summary>
            The absolute filename of the item that is currently diagnosed of matching the search
            criterion.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileMatchEventArgs.FileMatchesSearchCriterion">
            <summary>
            Set this to false if the file does not match the search criterion anymore
            and shall not be added to the FileList
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchCompletedEventArgs">
            <summary>
            The SearchCompletedEventArgs contains data for the <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchCompletedEventArgs"/> class,
            the EventArgs are initialized as NOT cancelled and NO error.
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchCompletedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchCompletedEventArgs"/> class
            </summary>
            <param name="p_Cancelled">set this to true to indicate that the search operation was cancelled.</param>
        </member>
        <member name="M:Jam.Shell.SearchCompletedEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchCompletedEventArgs"/> class.
            </summary>
            <param name="p_Error">Pass the Exception that was thrown within the BackgroundWorker to hand it over to the user.</param>
        </member>
        <member name="P:Jam.Shell.SearchCompletedEventArgs.Cancelled">
            <summary>
            Returns true if the Search was cancelled.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchCompletedEventArgs.Error">
            <summary>
            Returns null if no Error occured, the Exception otherwise.
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchProgressChangedEventArgs">
            <summary>
            The SearchProgressChangedEventArgs contains data for the <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchProgressChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/> class.
            </summary>
            <param name="p_LastSeenFile">The file that was last seen while searching</param>
            <param name="p_CurrentFolder">The current folder that is being processed</param>
        </member>
        <member name="M:Jam.Shell.SearchProgressChangedEventArgs.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/> class.
            </summary>
            <param name="p_LastSeenFile">The file that was last seen while searching</param>
            <param name="p_CurrentFolder">The current folder that is being processed</param>
            <param name="p_PercentageEstimated">The estimated percentage of the entire search</param>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.LastFileSeen">
            <summary>
            Returns the last filename that was seen by the background search 
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.CurrentFolder">
            <summary>
            Returns the current folder the background search is in
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.PercentageEstimated">
            <summary>
            Returns the estimated percentage of the search within the files. This is only
            a rough value especially for recursive searches.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.MatchCount">
            <summary>
            The number of files that matched since the last occurred SearchProgressChanged event.
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchExceptionEventArgs">
            <summary>
            This class provides the event arguments that may be of concern 
            <see cref="E:Jam.Shell.FileList.SearchExceptionOccurred"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchExceptionEventArgs.#ctor(System.Exception,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="p_Exception">The exception that is to be handled.</param>
            <param name="p_CurrentFileFullPath">The fully qualified filename with which the exception occurred.</param>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.Exception">
            <summary>
            The exception that occurred while searching.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.CurrentFile">
            <summary>
            Get the file that was being processed when the exception occurred (full path).
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.ExceptionHandled">
            <summary>
            Set this to true if the exception was handled.
            The flag is used for event chains, where more than one eventlistener is involved
            in exception handling.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.ExceptionPermanent">
            <summary>
            Set this to true if you decided that the exception is of permanent nature and you want
            the search thread to cancel. 
            </summary>
        </member>
        <member name="T:Jam.Shell.AddFileItemEventArgs">
            <summary>
            The AddItemEventArgs contains data for the <see cref="E:Jam.Shell.CustomFileList`1.AddItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddFileItemEventArgs.#ctor(Jam.Shell.CustomFileListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.CustomFileListItem"/> object, which contains information about the item, which should be added to the <see cref="T:Jam.Shell.FileList"/>-view.</param>
        </member>
        <member name="T:Jam.Shell.RemoveFileItemEventArgs">
            <summary>
            The RemoveFileItemEventArgs contains data for the <see cref="E:Jam.Shell.CustomFileList`1.RemoveItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.RemoveFileItemEventArgs.#ctor(Jam.Shell.CustomFileListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.RemoveFileItemEventArgs"/> class.
            </summary>
            <param name="pItem"><see cref="T:Jam.Shell.CustomFileListItem"/> object, which contains information about the item, which should be removed from the <see cref="T:Jam.Shell.CustomFileList`1"/>.</param>
        </member>
        <member name="T:Jam.Shell.DateTimeInterval">
            <summary>
            A class representing datetime intervals.
            The implementation supports closed intervals with an upper and lower a bound,
            as well as open intervals describing a point in time to search after or before it.
            </summary>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Instantiates a new DateInterval with both bounds specified.
            </summary>
            <param name="p_MinTime">Left bound of the interval.</param>
            <param name="p_MaxTime">Right bound of the interval.</param>
            <exception cref="T:System.ArgumentException">Throws ArgumentException if p_MinTime is after p_MaxTime</exception>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.#ctor(System.DateTime,System.Boolean)">
            <summary>
            Instantiates an open DateInterval.
            If 'after' is true, <see cref="M:Jam.Shell.DateTimeInterval.IsInInterval(System.DateTime)"/> returns true for all
            all time points after the specified p_Time.
            If 'after' is false, <see cref="M:Jam.Shell.DateTimeInterval.IsInInterval(System.DateTime)"/> returns true for all
            all time points that are before the p_Time specified.
            </summary>
            <param name="p_Time">A point in time.</param>
            <param name="after">if true, only set the left bound of the interval. Otherwise only the right bound of it.</param>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.SetInterval(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            p_MinTime and p_MaxTime cannot be set both to null.
            p_MinTime must be a time point before p_MaxTime.
            </summary>
            <param name="p_MinTime">Left bound of the interval.</param>
            <param name="p_MaxTime">Right bound of the interval.</param>
            <exception cref="T:System.ArgumentException">Throws ArgumentException if p_MinTime is after p_MaxTime</exception>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.IsInInterval(System.DateTime)">
            <summary>
            Checks whether the time given as a parameter is within the 
            interval specified by this DateInterval instance.
            </summary>
            <param name="p_DateTime">the datetime to check</param>
            <returns>true, if p_DateTime is after the minimum time
            and p_DateTime is before the maximum time.
            If the minimum was not specified (has been set to null) 
            it returns true if p_DateTime is before the maximum time set.
            If the maximum was not specified it returns true if p_DateTime is after the minimum time set.
            </returns>
        </member>
        <member name="P:Jam.Shell.DateTimeInterval.Min">
            <summary>
            The left bound of the DateInterval
            To keep the bounds consistent if Min is set to a time point after Max, the bounds are switched.
            </summary>
        </member>
        <member name="P:Jam.Shell.DateTimeInterval.Max">
            <summary>
            The right bound of the DateInterval.
            To keep the bounds consistent if Max is set to a time point before Min, the bounds are switched.
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchOptions">
            <summary>
            The SearchOptions class defines different options
            </summary>
        </member>
        <member name="F:Jam.Shell.SearchOptions.m_Filter">
            <summary>
            The Filepattern filter
            </summary>
        </member>
        <member name="F:Jam.Shell.SearchOptions.m_FilterRegex">
            <summary>
            The regular expression that is created when the <see cref="P:Jam.Shell.SearchOptions.Filter"/> is set.
            </summary>
        </member>
        <member name="F:Jam.Shell.SearchOptions.m_FilterIgnoreCase">
            <summary>
            Whether to filter out files case sensitive or not.<see cref="P:Jam.Shell.SearchOptions.FilterIgnoreCase"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchOptions.#ctor">
            <summary>
            Instantiates a SearchOptions object
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchOptions.#ctor(Jam.Shell.SearchOptions)">
            <summary>
            Copy constructor
            </summary>
            <param name="other">The SearchOptions to assign from.</param>
        </member>
        <member name="M:Jam.Shell.SearchOptions.Assign(Jam.Shell.SearchOptions)">
            <summary>
            Assigns the SearchOptions from the object given as the "other" parameter.
            </summary>
            <param name="other">The other SearchOptions to get the parameters from</param>
        </member>
        <member name="M:Jam.Shell.SearchOptions.FilterMatches(System.String)">
            <summary>
            Check whether the given object name matches the the filters set in the 
            <see cref="P:Jam.Shell.SearchOptions.Filter"/> property.
            </summary>
            <param name="p_ObjectName">The string to check for a match.</param>
            <returns>true if the filter matches.</returns>
        </member>
        <member name="P:Jam.Shell.SearchOptions.MaxFileSize">
            <summary>
            The maximum filesize for inclusion in the search result.
            </summary>        
        </member>
        <member name="P:Jam.Shell.SearchOptions.MinFileSize">
            <summary>
            The minimum filesize for inclusion in the search result.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.RecursiveSearch">
            <summary>
            Set this to true if the folder shall be searched recursively.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilterList">
            <summary>
            Get an array of the filter strings defined by setting the <see cref="P:Jam.Shell.SearchOptions.Filter"/> property.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.CreationInterval">
            <summary>
            Set an interval for the creation attribute of files to be included in the result set.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.AccessInterval">
            <summary>
            Set an interval for the last access time of files to be included in the result set.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.LastWriteInterval">
            <summary>
            Set an interval for the last write access of files to be included in the result set.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilesOnly">
            <summary>
            Set this to true if you want to only include files in your search.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilterRegex">
            <summary>
            Set the FilterRegex property to match against a regular expression.
            This property is also set if the <see cref="P:Jam.Shell.SearchOptions.Filter"/> property is modified.
            If null the filter matches against everything.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.RegexPattern">
            <summary>
            Attribute to set the FilterRegex in property editor. 
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilterIgnoreCase">
            <summary>
            Per default this property is true, if the <see cref="P:Jam.Shell.SearchOptions.Filter"/> property is set to
            a wildcard, the files are filtered case-insensitive. If this property is false,
            the files returned are case sensitive, e.g. setting Filter to "*.png" will not
            return any files with extensions like ".PNG".
            </summary>
            <seealso cref="P:Jam.Shell.SearchOptions.Filter"/>
        </member>
        <member name="P:Jam.Shell.SearchOptions.IncludeHidden">
            <summary>
            If this is set to true, the search will include hidden files and folders
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellHistoryToolStrip">
            <summary>
            The ShellHistoryToolstrip menu provides a convenient way to navigate just like you would do using the explorer.
            Simply drop the ShellHistoryToolStrip on a ToolStrip container and connect it to a <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/>, off you go!
            Customize your forward and back button in the properties editor like you would do with any other button in your project.
            You can easily add more ToolStripItems to the menu if you desire.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_ShellBrowser">
            <summary>
            A <see cref="T:Jam.Shell.ShellBrowser"/> instance that is used to navigate through the files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_ShellControlConnector">
            <summary>
            this variable holds a reference to an attached ShellControlConnector which is
            the mediator between different ShellBrowser components and keeps the views in sync
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_MoveHistoryBack">
            <summary>
            The back button.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_MoveHistoryForward">
            <summary>
            The forward button.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_HistoryMaxLength">
            <summary>
            The default maximum length of the displayed history list as ToolStripItems in 
            the History Splitbuttons.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.#ctor">
            <summary>
            Default constructor of the ShellHistory class
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_HandleEventMoveHistoryClick">
            <summary>
            The click Eventhandler is kept in order to unregister it later.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_HandleEventDropDownOpening">
            <summary>
            The event handles the drop down opening which is used to distinguish between a
            click on the (e.g. back) button or an opening of the drop down menu
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.RegisterButtonEventHandler(System.Windows.Forms.ToolStripSplitButton)">
            <summary>
            Registers to the DropDownOpening and the Click event of the button given.
            </summary>
            <param name="p_ToolStripSplitButton">The button.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.UnregisterButtonEventHandler(System.Windows.Forms.ToolStripSplitButton)">
            <summary>
            Unregisters from the DropDownOpening and the Click event of the button given.
            </summary>
            <param name="p_ToolStripSplitButton">The button.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.FolderChanged(System.Object,System.EventArgs)">
            <summary>
            This method gets called on the FolderChanged event of the ShellControlConnector 
            </summary>
            <param name="p_Sender">The sender of the event</param>
            <param name="p_EventArgs">Event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.UpdateHistoryDropDown">
            <summary>
            This method updates the drop down lists of the history buttons.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_DropDownIsOpening">
            <summary>
            internal flag - true if the dropdown menu is currently opening
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.MoveHistory_DropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Sets a flag in the component, that the drop down is opened, an no
            simple "click" is performed. This flag will be reset in the Click EventHandler
            <see cref="M:Jam.Shell.ShellHistoryToolStrip.MoveHistory_Click(System.Object,System.EventArgs)"/>.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">args</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            If this method gets called from the ShellControlConnector, the history drop down combobox
            is being updated to reflect the new folder history.
            </summary>
            <param name="p_ItemIdList">The p_ItemIdList of the FolderChanged</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.FullRefresh">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.SmartRefresh">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
            <param name="p_ItemIdList">an itemidlist</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.GoUp">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
            <returns>Always returns false in the current implementation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.HistoryMaxLength">
            <summary>
            Set the maximum length of the displayed history list.
            This List is obtained from the registered <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.HistoryBackButton">
            <summary>
            This property allows you to access the forward button of the ShellHistoryToolStrip, 
            it may be customized as needed.
            However its dropdown items change each time a FolderChanged event occurs in the
            <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/> this component is connected to.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.HistoryForwardButton">
            <summary>
            This property allows you to access the forward button of the ShellHistoryToolStrip, it may be customized as needed.
            However its dropdown items change each time a FolderChanged event occurs in the
            <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/> this component is connected to.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellHistoryToolStrip.Initialized">
            <summary>
            Occurs if the designer generated code has finished executing
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.IsInitialized">
            <summary>
            Returns true if the control has been initialized (the designer generated code was executed)
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemList">
            <summary>
            This component embeds the native windows explorer control into a .net component.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.IOleWindow">
            <summary>
            Implemented and used by containers and objects to obtain window handles
            and manage context-sensitive help.
            </summary>
            <remarks>
            The IOleWindow interface provides methods that allow an application to obtain
            the handle to the various windows that participate in in-place activation,
            and also to enter and exit context-sensitive help mode.
            </remarks>
        </member>
        <member name="M:Jam.Shell.Com.IOleWindow.GetWindow(System.IntPtr@)">
            <summary>
            Returns the window handle to one of the windows participating in in-place activation
            (frame, document, parent, or in-place object window).
            </summary>
            <param name="phwnd">Pointer to where to return the window handle.</param>
        </member>
        <member name="M:Jam.Shell.Com.IOleWindow.ContextSensitiveHelp(System.Boolean)">
            <summary>
            Determines whether context-sensitive help mode should be entered during an
            in-place activation session.
            </summary>
            <param name="fEnterMode"><c>true</c> if help mode should be entered;
            <c>false</c> if it should be exited.</param>
        </member>
        <member name="T:Jam.Shell.Com.IShellBrowser">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb775123(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.InsertMenusSB(System.IntPtr,System.IntPtr@)">
            <summary>
            Allows the container to insert its menu groups into the composite menu that is 
            displayed when an extended namespace is being viewed or used.
            Signature ok.
            </summary>
            <param name="hmenuShared"></param>
            <param name="lpMenuWidths"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SetMenuSB(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Installs the composite menu in the view window.
            Signature ok.
            </summary>
            <param name="hmenuShared"></param><param name="holemenuRes"></param><param name="hwndActiveObject"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.RemoveMenusSB(System.IntPtr)">
            <summary>
            Permits the container to remove any of its menu elements from the in-place 
            composite menu and to free all associated resources.
            </summary>
            <param name="hmenuShared"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SetStatusTextSB(System.String)">
            <summary>
            Sets and displays status text about the in-place object in the container's frame-window status bar.
            </summary>
            <param name="pszStatusText"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.EnableModelessSB(System.Boolean)">
            <summary>
            Tells Windows Explorer to enable or disable its modeless dialog boxes.
            </summary>
            <param name="fEnable"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.TranslateAcceleratorSB(System.IntPtr,System.Int16)">
            <summary>
            Translates accelerator keystrokes intended for the browser's frame while the view is active.
            </summary>
            <param name="pmsg"></param>
            <param name="wID"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.BrowseObject(System.IntPtr,System.UInt32)">
            <summary>
            Informs Microsoft Windows Explorer to browse to another folder.
            </summary>
            <param name="pidl"></param>
            <param name="wFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.GetViewStateStream(System.UInt32,System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Gets an IStream interface that can be used for storage of view-specific state information.
            </summary>
            <param name="grfMode"></param>
            <param name="ppStrm"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.GetControlWindow(System.UInt32,System.IntPtr@)">
            <summary>
            Gets the window handle to a browser control.
            </summary>
            <param name="id"></param>
            <param name="phwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SendControlMsg(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int64@)">
            <summary>
            Sends control messages to either the toolbar or the status bar in a Windows Explorer window.
            </summary>
            <param name="id"></param>
            <param name="uMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="pret"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.QueryActiveShellView(Jam.Shell.Com.IShellView@)">
            <summary>
            Retrieves the currently active (displayed) Shell view object.
            </summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.OnViewWindowActive(Jam.Shell.Com.IShellView)">
            <summary>
            Called by the Shell view when the view window or one of its child windows gets the focus or becomes active.
            </summary>
            <param name="pshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SetToolbarItems(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Adds toolbar items to Windows Explorer's toolbar.
            </summary>
            <param name="lpButtons"></param>
            <param name="nButtons"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.ICommDlgBrowser">
            <summary>
            The ICommDlgBrowser interface. We do not marshal the IShellView interface since we already
            hold a reference to it.
            The PreserveSig attribute is important for things to work.
            http://msdn.microsoft.com/en-us/library/bb776141(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)">
            <summary>Called when a user double-clicks in the view or presses the ENTER key.</summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser.OnStateChange(System.IntPtr,System.UInt32)">
            <summary>Called after a state, identified by the uChange parameter, has changed in the IShellView interface.</summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser.IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>Allows the common dialog box to filter objects that the view displays.</summary>
            <param name="ppshv"></param>
            <param name="pidl"></param>
            <returns></returns>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ShellView">
            <summary>
            The shellview ole instance that is used by the control
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_FolderView">
            <summary>
            The folderview ole instance that is used by the control
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_Stream">
            <summary>
            Com-Interop stream
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ContextMenuStrip">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.ContextMenuStrip"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_WasLastMouseButtonLeft">
            <summary>
            This is to distinguish between a double click that 
            caused the OnDefaultCommand and the right mouse button -> 'open'
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_WorkItemTag">
            <summary>
            This int is used to tag the work items for this control
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_CurrentlyRefreshing">
            <summary>
            Avoid nested calls of FullRefresh.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.listViewWindow">
            <summary>Wrapper for WndProc of the m_ListViewHandle</summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.shellViewWindow">
            <summary>Wrapper for WndProc of the m_ShellViewHandle</summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ShellBrowser">
            <summary>Obligatory instance of a ShellBrowser, helps getting shell information</summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ShellControlConnector">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.ShellControlConnector"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_View">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.View"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ViewFolderFlags">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.ViewFolderFlags"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_Items">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.Items"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectParent">
            <summary>
            Selects the parent folder and calls a FullRefresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectItem(System.Int32)">
            <summary>
            The item of the given index gets selected.
            </summary>
            <param name="index">The index of the item that should be selected. -2 selects all, -1 selects none.</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IsSelected(System.Int32)">
            <summary>
            Returns true if the item with the passed index is selected.
            </summary>
            <param name="pIndex">The index of the item.</param>
            <returns>true if the item with the passed index is selected, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetItems(Jam.Shell.Com.SVGIO)">
            <summary>
            Get items from the shellview ole instance by calling its <see cref="M:Jam.Shell.Com.IShellView.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)"/> method.
            Returns a dataobject that can be analyzed with e.g. ShellBrowser.GetFirstItemIDListFromDataObject(IDataObject).
            </summary>
            <param name="AspectOfView">Which aspect of the shell view shall be returned</param>
            <returns>A dataobject with itemidlists or null if the queried aspect was empty.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IndexOf(System.String)">
            <summary>
            Searches for the index of the given path within the shell-list.
            This function has O(n) complexity, since it iterates through all items within the list
            </summary>
            <param name="pPath">The path that will be searched</param>
            <returns>The index of the item, -1 if the item is not in the list</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IndexOf(Jam.Shell.ItemIdList)">
            <summary>
            Searches for the index of the ItemIdList within the shell-list.
            This function has O(n) complexity, since it iterates through all items within the list
            </summary>
            <param name="pItemIdList">The item id list that will be searched</param>
            <returns>The index of the item, -1 if the item is not in the list</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetShellItem(System.Int32)">
            <summary>
            Get the item at the specified index.
            </summary>
            <param name="index">The index of the item that should be retrieved</param>
            <returns>The item at the specified index. Null if the FolderView is not available or the index is invalid.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetItem(System.Int32)">
            <summary>
            Get the ItemIdList at the index specified.
            </summary>
            <param name="index">The index of the item which ItemIdList should be retrieved.</param>
            <returns>Absolute ItemIdList to the item at the index, null if no item was found at the index.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnBeforeFullRefresh">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.BeforeFullRefresh"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnPopulated">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.Populated"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnPathChanged">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.PathChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnAddItem(Jam.Shell.AddSystemListItemEventArgs)">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.AddItem"/> event.
            </summary>
            <param name="eventArgs">The event arguments that will be passed as a paramteter</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnSelectionChanged">
            <summary>
            Triggers the <see cref="E:Jam.Shell.ShellSystemList.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.InformPathChanged">
            <summary>
            Inform of the <see cref="P:Jam.Shell.ShellSystemList.ShellControlConnector"/> that the 
            path currently displayed has changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.CreateHandle">
            <summary>
            Creates a handle for the control
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetUIObject(System.Guid)">
            <summary>
            Returns for the currently selected item a COM object that implements the requested interface
            </summary>
            <param name="riid">the relative item id list</param>
            <returns>The UIObject that is returned be <see cref="M:Jam.Shell.ShellBrowser.GetUIObject(System.Guid)"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.InvokeCommandOnSelected(System.String)">
            <summary>
            Invokes a <see cref="T:Jam.Shell.ShellCommand"/> on the selected item(s) of the ListView.
            </summary>
            <param name="command">The shell command to use on the selected item(s) of the view</param>
            <returns>True, if the command has been processed</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.CutSelectedFiles">
            <summary>
            All selected files' icons are shown ghosted.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.InvokeCommandOnFolder(System.String)">
            <summary>
            Use InvokeCommandOnFolder to execute a command of the context menu for the listed folder. 
            <seealso cref="M:Jam.Shell.ShellSystemList.InvokeCommandOnSelected(System.String)"/>
            </summary>
            <param name="command">The <see cref="T:Jam.Shell.ShellCommand"/> to use</param>
            <returns>true, if the command has successfully been processed</returns>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_EditHandle">
            <summary>
            This holds a handle to the editfield if the user is editing the 
            caption of a listview.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.KeyDown event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.KeyUp event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectAll">
            <summary>
            Select all items in the listview.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.DeselectAll">
            <summary>
            Deselect all items in the listview
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_EditLastSelectedFileAfterPopulation">
            <summary>
            A flag that indicates whether the last selected file should be set to edit mode; bug #7931
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.CreateDir(System.String,System.Boolean)">
            <summary>
            Creates a new directory in the current folder.
            </summary>
            <param name="p_Name">The name of the new folder. Do pass a single name only, not a full path.</param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the new folder after its creation.
            Pass <b>false</b> if the new folder should not be in edit mode.</param>
            <returns>True if the folder was successfully created, false if not.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IsColumnAvailable(Jam.Shell.SHCOLUMNID)">
            <summary>
            Determines whether the <see cref="T:Jam.Shell.SHCOLUMNID"/> passed is supported by the current view, no matter if it is currently displayed or not.
            Not supported on Windows XP.
            </summary>
            <param name="pColKey">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true if the column is available, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnResize(System.EventArgs)">
            <summary>
            This method overrides OnResize to also notify the com object (shellview) if
            the component was resized.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            In case the cursor keys are pressed, the message is forwarded to the shellview...s
            </summary>
            <param name="msg">the message that is passed</param>
            <param name="keyData">the key data</param>
            <returns><b>true</b> if the character was processed, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseDoubleClick event.
            This method is called from the <see cref="M:Jam.Shell.ShellSystemList.ListViewNativeWindow.WndProc(System.Windows.Forms.Message@)"/>
            function.
            </summary>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.FullRefresh">
            <summary>
            This method only operates if the Handle has been allocated.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.DoPopulated(System.Object)">
            <summary>
            Needed to match the WaitCallBack signature. <seealso cref="M:Jam.Shell.ShellSystemList.FullRefresh"/>
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SmartRefresh">
            <summary>
            Refreshes the control. Same as <see cref="M:Jam.Shell.ShellSystemList.FullRefresh"/> for the <see cref="T:Jam.Shell.ShellSystemList"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_LastSelectedFile">
            <summary>
            The last selected file; bug #7931
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            If a <see cref="P:Jam.Shell.ShellSystemList.ShellControlConnector"/> is assigned to the control, it is notified.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the selected file should change.
            </summary>
            <param name="p_ItemIdList">The absolute ItemIdList of the newly selected file.</param>
            <seealso cref="M:Jam.Shell.ShellSystemList.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GoUp">
            <summary>
            Selects the parent folder in the <see cref="T:Jam.Shell.SystemListView"/>.
            </summary>
            <returns>true if the operation succeeded, false if not, ie. if the root of the shellnamespace was selected</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.BeginInit">
            <summary>
            Is called by the code generated with the designer.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.EndInit">
            <summary>
            Is called by the designer generated code, triggers the <see cref="E:Jam.Shell.ShellSystemList.Initialized"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetWindow(System.IntPtr@)">
            <summary>
            IOleWindow interface implementation (http://msdn.microsoft.com/en-us/library/ms680102(VS.85).aspx)
            </summary>
            <param name="phwnd"></param>
            <returns>S_OK alwys in the current implementation</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ContextSensitiveHelp(System.Boolean)">
            <summary>
            IOleWindow interface implementation (http://msdn.microsoft.com/en-us/library/ms680102(VS.85).aspx)
            </summary>
            <param name="fEnterMode"></param>
            <returns>S_OK always in the current implementation</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SetPath(System.String)">
            <summary>
            This method is called via BeginInvoke since the COM-Interface is not reentrant.
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)"/> 
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SetSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            This method is called via BeginInvoke since the COM-Interface is not reentrant.
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)"/> 
            </summary>
            <param name="specialFolder"></param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.RenameItemSelectedHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the click on the "Rename" context menu item of the ShellContextMenu - fixes bug #1516
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The EventArgs</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the currently selected items
            </summary>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>If no items where selected this method returns null, otherwise the verb of the command 
            that was executed, e.g. "open", "properties", "copy", etc., <see cref="T:Jam.Shell.ShellCommand"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)">
            <summary>
            Fires an event if an operation was performed on the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="p_Operation">Contains the type of operation, which has been performed.</param>
            <param name="p_Paths">The p_Paths contains the file or folder names, that are affected.</param>
            <param name="p_Destination">Contains the destination, e.g. where files or folders have been pasted to.</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.FilterMatch(System.String)">
            <summary>
            Checks if the regular expresssion matches the object name passed.
            Immediately returns true if <see cref="P:Jam.Shell.ShellSystemList.FilterRegex"/> is null to improve performance if no filter e.g. '*' is needed.
            </summary>
            <param name="p_ObjectName">the object name</param>
            <returns>true, if the object name matches the filter property, false if it does not match</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IncludeObjectInList(Jam.Shell.ItemIdList)">
            <summary>
            Returns true if the object referenced by the item id list should be shown
            in the list according to the show options and filters that are eventually set.
            </summary>
            <param name="p_ItemIdList">the item id list instance of the file that is to be filtered.</param>
            <returns>true, if the item id list is visible in the control according to the property values. false if it should not be visible.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser#OnDefaultCommand(System.IntPtr)">
            <summary>
            This method is part of the <see cref="T:Jam.Shell.Com.ICommDlgBrowser"/> ole interface.
            It triggers the <see cref="E:Jam.Shell.ShellSystemList.DefaultAction"/> event before issuing the default
            command.
            <seealso cref="E:Jam.Shell.ShellSystemList.DefaultAction"/>
            </summary>
            <param name="ppshv"></param>
            <returns>S_OK if the command has been processed and no further action shall be performed by the com object,
            S_FALSE if the com object should handle the event</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser#IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>
            This method is called if the com interface the ShellSystemList
            implements, queries whether an object should be included in the
            listview or not. Here the filter functionality is implemented that
            allows the user to omit certain filetypes / special files.
            </summary>
            <param name="ppshv">int pointer to the shellview, not used, since we hold a reference to the shellview already</param>
            <param name="pidl">int ptr to an item id list, this is used to create </param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser#OnStateChange(System.IntPtr,System.UInt32)">
            <summary>
            ICommDlgBrowser implementation, http://msdn.microsoft.com/en-us/library/bb776141(VS.85).aspx
            Called after a state, identified by the uChange parameter, has changed in the IShellView interface.
            <b>Please do NOT call this method directly, it cannot be hidden from the public class interface unfortunately</b>
            </summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#OnDefaultCommand(System.IntPtr)">
            <summary>
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)"/>
            </summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>
            interface implementation of the ICommDlgBrowser.IncludeObject 
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.IncludeObject(System.IntPtr,System.IntPtr)"/>
            </summary>
            <param name="ppshv"></param>
            <param name="pidl"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#OnStateChange(System.IntPtr,System.UInt32)">
            <summary>
            interface implementation of the ICommDlgBrowser.OnStateChange
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnStateChange(System.IntPtr,System.UInt32)"/>
            </summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#Notify(System.IntPtr,System.UInt32)">
            <summary>
            Called by a Shell view to notify the common dialog box hosting it that an event has occurred.
            </summary>
            <param name="ppshv"></param>
            <param name="dwNotifyType"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnViewChanged">
            <summary>
            This method is called if the view of the ShellSystemList changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#GetDefaultMenuText(System.IntPtr,System.String,System.Int32)">
            <summary>
            Called by the Shell view to get the default shortcut menu text.
            </summary>
            <param name="ppshv"></param>
            <param name="pszText"></param>
            <param name="cchMax"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#GetViewFlags(System.UInt32@)">
            <summary>
            Called when the view must determine if special customization needs to be made for the common dialog browser.
            </summary>
            <param name="pdwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#InsertMenusSB(System.IntPtr,System.IntPtr@)">
            <summary>
            Inserts the menus SB.
            </summary>
            <param name="IntPtrShared">The int PTR shared.</param>
            <param name="lpMenuWidths">The lp menu widths.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#GetViewStateStream(System.UInt32,System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Signature ok.
            </summary>
            <param name="grfMode"></param>
            <param name="ppStrm"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#GetControlWindow(System.UInt32,System.IntPtr@)">
            <summary>
            Gets the control window.
            </summary>
            <param name="id">The id.</param>
            <param name="lpIntPtr">The lp int PTR.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#SendControlMsg(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int64@)">
            <summary>
            Sends control messages to either the toolbar or the status bar in a Windows Explorer window.
            </summary>
            <param name="id"></param>
            <param name="uMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="pret"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#QueryActiveShellView(Jam.Shell.Com.IShellView@)">
            <summary>
            Retrieves the currently active (displayed) Shell view object.
            </summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#OnViewWindowActive(Jam.Shell.Com.IShellView)">
            <summary>
            Called when view window gets active.
            </summary>
            <param name="ppshv">The PPSHV.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#SetToolbarItems(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Adds toolbar items to Windows Explorer's toolbar.
            </summary>
            <param name="lpButtons"></param>
            <param name="nButtons"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.EditSelected">
            <summary>
            Sets the selected item in edit mode.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.FolderIdList">
            <summary>
            Get or set the ItemIdList of the folder the component currently displays respectively
            the folder the component shall display.
            <seealso cref="P:Jam.Shell.ShellSystemList.Path"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Path">
            <summary>
            This property allows you to get or set the folder, which contents should be displayed. If you want to display a non file system folder, use the SpecialFolder property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SpecialFolder">
            <summary>
            SpecialFolder allows you to set or get the type of the currently listed folder. 
            You can use the ShellFolder constants here.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected 
            is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowErrorMessages">
            <summary>
            If set to true the ShellList component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Items">
            <summary>
            The List of items that the ole shell instance displays. One cannot remove several items
            from this datastructure in order to remove them from the listview.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.View">
            <summary>
            This property allows to set the different view modes of the
            windows explorer listview control. In comparison to the 
            <see cref="T:Jam.Shell.ShellListView"/> the ShellSystemList provides a greater 
            variety of possibilities.
            <seealso cref="E:Jam.Shell.ShellSystemList.ViewChanged"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Thumbnails">
            <summary>
            Obsolete - use <see cref="P:Jam.Shell.ShellSystemList.View"/> = <see cref="T:Jam.Shell.Com.FolderViewMode"/>.Thumbnails instead.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ThumbnailSize">
            <summary>
            Gets or sets the size of the thumbnails. Only applied when <see cref="P:Jam.Shell.ShellSystemList.View"/> is set to <see cref="F:Jam.Shell.Com.FolderViewMode.Thumbnail"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ViewFolderFlags">
            <summary>
            Get or set the <see cref="T:Jam.Shell.FolderFlags"/> that specify how the ListView displays
            its content. The flags can be or'ed together, ie. "FolderFlags.NoColumnHeader | FolderFlags.AbbreviatedNames"
            in the designer this is specified by a comma-separation
            Not all of the Flags are supported currently
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelCount">
            <summary>
            Gets the number of selected items.
            </summary>
            <value>
            The number of selected items or 0 if nothing is selected.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Selected">
            <summary>
            Returns the currently selected item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedFiles">
            <summary>
            Returns a list of full paths for the items selected in the view.
            Objects that do not have a filesystem path, are not within this list.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ItemCount">
            <summary>
            Gets the number of items the list currently holds.
            </summary>
            <value>
            The number of items or 0 if the current view is empty.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedIndex">
            <summary>
            Get the selected index in the SystemShellView.
            This property is -1, if nothing is selected.
            Please use <see cref="P:Jam.Shell.ShellSystemList.SelectedItemIdList"/> if you want
            to determine if nothing at all is selected, since determining 
            the selected index involves a search via <see cref="M:Jam.Shell.ShellSystemList.IndexOf(Jam.Shell.ItemIdList)"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedPath">
            <summary>
            Get the full path of the selected item. Returns null if nothing is selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedItemIdLists">
            <summary>
            Get the item id lists selected in the SystemShellView,
            this list contains all selected items including special objects
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedItemIdList">
            <summary>
            Get the selected item id list in the SystemShellView.
            This property returns null, if nothing is selected.
            The setter of this property is protected since the exact ItemIdList that 
            is stored in the explorer ole instance is needed to select the
            item in the view. It is insufficient to construct a new one with
            new ItemIdList("fullpath"); and pass that as a value. The instantiated
            ole window will not select an item that way.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.TextColor">
            <summary>
            Get or set the TextColor of the Control
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Transparent">
            <summary>
            Get or set the transparency value of the Control
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.BackColor">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ForeColor">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.BackgroundImage">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.BackgroundImageLayout">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Font">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.BeforeFullRefresh">
            <summary>
            This event occurs right before the <see cref="M:Jam.Shell.ShellSystemList.FullRefresh"/> method is called.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.Populated">
            <summary>
            This event occurs if the listview gets populated.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.PathChanged">
            <summary>
            This event occurs if the path changed that the systemlistview displays.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.OperationPerformed">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellSystemList"/> executed a shell operation like pasting.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.AddItem">
            <summary>
            This event occurs if a SystemListItem is to be added to the list.
            If the "CanAdd" property of the event args is set to false in an 
            event handler, the item will not be added to the listview.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.SelectionChanged">
            <summary>
            This event occurs, if a selection changed in the listview
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Columns">
            <summary>
            Gets the <see cref="T:Jam.Shell.ShellViewColumns"/> the control currently displays.
            Not supported on Windows XP.
            </summary>
            <value>
            An <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing the visible columns.
            </value>
            <example> 
            The following examples control the columns displayed in the <see cref="T:Jam.Shell.ShellSystemList"/>. 
            <code source="CodeExamples.cs" region="ShellViewColumns_AddColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_SetColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_ShowColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_RemoveColumns" lang="C#"/> 
            </example>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.AllColumns">
            <summary>
            Gets a list of all columns that are supported in the current view. These depend on what the control currently displays.
            Not supported on Windows XP.
            </summary>
            <value>
            A <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing all columns supported by the current view. 
            </value>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Focused">
            <summary>
            Gets a value indicating whether a control has input focus.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShellViewHandle">
            <summary>
            Access the handle of ShellView ole instance. This is useful to send messages
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ListViewHandle">
            <summary>
            Access the handle of ListView ole instance. This is useful to send messages
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.Initialized">
            <summary>
            This event occurs after the Designer generated code has set all
            required properties.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.IsInitialized">
            <summary>
            Returns true if the ShellSystemList is property initialization has 
            been performed (after <see cref="M:Jam.Shell.ShellSystemList.EndInit"/> was called by the Designer generated code)
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowContextMenu">
            <summary>
            If set to true, the Windows Explorer context menu will be shown if a right click event occurs.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowBackgroundContextMenu">
            <summary>
            If set to true, the Windows Explorer background context menu will be shown if a right click event occurs.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ContentFilter">
            <summary>
            Gets or sets an ShellItemFilter instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will also be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowNetHood">
            <summary>
            If set to 'false', the Network Neighbourhood is not shown in the component,
            otherwise it is shown (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowFolders">
            <summary>
            The property ShowFolders allows you to include the folders in the <see cref="T:Jam.Shell.ShellListView"/>, similar to FrontPage 2000.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowRecycleBin">
            <summary>
            If set to true, the recycle bin will be visible. If set to false, the recycle bin will be hidden
            (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.FilterRegex">
            <summary>
            Set this property to a regular expression if you want to only show those files that match the regex.
            This value also changes  if the property <see cref="P:Jam.Shell.ShellSystemList.Filter"/> is set.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.ShowOptionChanged">
            <summary>
            This event is fired after an option changed. It happens if
            <see cref="P:Jam.Shell.ShellSystemList.ShowHidden"/>, <see cref="P:Jam.Shell.ShellSystemList.ShowNetHood"/>,
            <see cref="P:Jam.Shell.ShellSystemList.ShowRecycleBin"/>, <see cref="P:Jam.Shell.ShellSystemList.ShowFiles"/> or <see cref="P:Jam.Shell.ShellSystemList.ShowFolders"/> was changed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.DefaultAction">
            <summary>
            This event occurs if the user triggers the default command,
            e.g. double clicked on an item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ContextMenuStrip">
            <summary>
            The ContextMenuStrip is converted to an ordinary ContextMenu. This makes it 
            possible to merge your ContextMenuStrip with the Default ShellContextMenu provided
            by the system.
            The "Opening" and "Closing" events of the ContextMenuStrip will be raised if the 
            ContextMenu "Popup"/"Collapse" event occurs. For menu items only the "Click" event
            is available. All other events are not available.
            All ToolStripMenuItems are converted, and ToolStripSeparators are recognized.
            The ShortCut Keys defined in a ToolStripMenuItem are not converted.
            If you would like to have the ShortCut-Keys, leave this Property null, instead set
            the ContextMenu property to your menu explicitly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ContextMenu">
            <summary>
            Gets or sets the shortcut menu that is associated with this control.
            If this property is set, the context menu is merged to the shell context menu that the control obtains from the explorer
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShellBrowser">
            <summary>
            Get the singleton <see cref="P:Jam.Shell.ShellSystemList.ShellBrowser"/> instance.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.ViewChanged">
            <summary>
            This event happens if the <see cref="P:Jam.Shell.ShellSystemList.View"/> of the ImageList changed,
            either because it was set explicitly or if the user used the context menu to change
            to a different view.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.InEditMode">
            <summary>
            Returns true if the user is currently editing the caption of a listview item.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemList.CallDelegate">
            <summary>
            Simple delegate to call functions without a parameter via BeginInvoke
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemList.ShellViewNativeWindow">
            <summary>
            This class hooks onto the message loop of the shellview to handle 
            different events like keyboard and mouse actions.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ShellViewNativeWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Extends the WndProc message handler of the NativeWindows base class. That way it 
            is possible to intercept window events.
            </summary>
            <param name="m"></param>
        </member>
        <member name="T:Jam.Shell.ShellSystemList.ListViewNativeWindow">
            <summary>
            This class hooks onto the message loop of the listview to handle 
            different events like keyboard and mouse actions.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ListViewNativeWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Extends the WndProc message handler of the NativeWindows base class. That way it 
            is possible to intercept the double click event.
            </summary>
            <param name="m"></param>
        </member>
        <member name="T:Jam.Shell.BaseShellItem">
            <summary>
            Base Class implementing IShellItem.
            Basically has an ItemIdList and can return it's path.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseShellItem.m_ItemIdList">
            <summary>
            Absolute ItemIdList of the Item
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseShellItem.#ctor">
            <summary>
            For compatibility with <see cref="T:Jam.Shell.SystemShellListItemCollection`1"/>
            </summary>
            <remarks>Empty constructor is needed to create instances of the class given in Generic Type Parameter</remarks>
        </member>
        <member name="M:Jam.Shell.BaseShellItem.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Construct a new item.
            </summary>
            <param name="p_ItemIdList">The ItemIdList that specifies the item within the system. Parameter may not be null.</param>
        </member>
        <member name="M:Jam.Shell.BaseShellItem.Rename(System.String)">
            <summary>
            Rename a file item
            </summary>
            <param name="p_NewName">The new name the item will be renamed to.</param>
            <returns>true if the item was renamed successfully</returns>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.FullPath">
            <summary>
            Return the full path within the filesystem.
            This may be empty, if the item has no filesystem path.
            </summary>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.AbsoluteItemIdList">
            <summary>
            Get the absolute ItemIdList of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemListItem">
            <summary>
            Represents an item of the Windows shell namespace in a <see cref="P:Jam.Shell.ShellSystemListItem.ShellSystemList"/>
            </summary>
            <seealso cref="P:Jam.Shell.ShellSystemListItem.ShellSystemList"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItem.#ctor(Jam.Shell.ShellSystemList,Jam.Shell.ItemIdList,System.Int32)">
            <summary>
            Construct a new item.
            </summary>
            <param name="p_ShellSystemList">the <see cref="P:Jam.Shell.ShellSystemListItem.ShellSystemList"/> this item belongs to. Parameter may not be null</param>
            <param name="p_ItemIdList">The relative ItemIdList that specifies the item within FolderIdList of the parent ShellSystemList. Parameter may not be null</param>
            <param name="p_Index">The index within the list</param>
            <exception cref="T:System.ArgumentNullException">If one of the parameters that where passed is null</exception>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItem.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Construct a new item.
            </summary>
            <param name="p_ItemIdList">The ItemIdList that specifies the item within the system. Parameter may not be null.</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItem.Rename(System.String)">
            <summary>
            Rename a file item
            </summary>
            <param name="p_NewName">The new name the item will be renamed to.</param>
            <returns>true if the item was renamed successfully</returns>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.ShellSystemList">
            <summary>
            Get the ShellSystemList view that this item is associated with.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.Index">
            <summary>
            Get the index within the list
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.ItemIdList">
            <summary>
            Get the ItemIdList that specifies the item in the filesystem.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.Caption">
            <summary>
            Get the caption of the ItemIdList this Item represents.
            <see cref="P:Jam.Shell.ItemIdList.Caption"/>. This does not neccessarily represent the
            full filename of the item, instead refer to the <see cref="P:Jam.Shell.BaseShellItem.FullPath"/> property 
            if this functionality is needed.
            </summary>
        </member>
        <member name="T:Jam.Shell.AddSystemListItemEventArgs">
            <summary>
            The AddSystemListItemEventArgs contains data for the <see cref="E:Jam.Shell.ShellSystemList.AddItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddSystemListItemEventArgs.#ctor(Jam.Shell.ShellSystemListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.ShellSystemListItem"/> object, which contains information about the item, 
            which should be added to the <see cref="T:Jam.Shell.ShellListView"/>/<see cref="T:Jam.Shell.FileList"/>.</param>
        </member>
        <member name="T:Jam.Shell.SystemShellListItemCollection`1">
            <summary>
            Generic collection class that is used for List Classes not deriving from System.Windows.Forms.ListView, currently these are
            <see cref="T:Jam.Shell.ShellSystemList"/> and <see cref="T:Jam.Shell.ExplorerBrowser"/>
            </summary>
            <typeparam name="ITEM_CLASS">The type of the list items contained, must implement <see cref="T:Jam.Shell.IShellItem"/></typeparam>
        </member>
        <member name="F:Jam.Shell.SystemShellListItemCollection`1.m_IsReadOnly">
            <summary>
            Is the ItemCollection readonly?
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire Collections.
            </summary>
            <param name="item">The object to locate in the Collection. The value
            can be null for reference types.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.IndexOfPath(System.String)">
            <summary>
            Searches item collection for the specified path.
            </summary>
            <param name="path">A complete path to be searched</param>
            <returns>-1 if the element couldn't be found, the position in the item collection otherwise</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Insert(System.Int32,`0)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.IList`1"/> interface.
            Always throws an exception, since ShellSystemListViewItemCollection is readonly.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.RemoveAt(System.Int32)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.IList`1"/> interface.
            Always throws an exception, since ShellSystemListViewItemCollection is readonly.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Add(`0)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface.
            Always throws an exception, since ShellSystemListViewItemCollection is readonly.
            </summary>
            <param name="item">The ShellListItem to add</param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.AddInternal(`0)">
            <summary>
            Internal <see cref="M:Jam.Shell.SystemShellListItemCollection`1.Add(`0)"/> method for the ShellSystemListViewItemCollection.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Clear">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface.
            Always throws an exception, since ShellSystemListViewItemCollection is readonly.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.ClearInternal">
            <summary>
            Internal <see cref="M:Jam.Shell.SystemShellListItemCollection`1.Clear"/> method. Clears all items from the collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Contains(`0)">
            <summary>
            Determines whether an element is in the collection
            </summary>
            <param name="item">the item</param>
            <returns>true, if the item is returned</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Jam.Shell.ShellSystemListItemCollection"/> to a compatible
            one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Remove(`0)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface.
            Always throws an exception, since ShellSystemListViewItemCollection is readonly.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Jam.Shell.ShellSystemListItemCollection"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SystemShellListItemCollection`1"/> class.
            </summary>
            <param name="isReadOnly">if set to <c>true</c> the collection is readonly.</param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.GetFilePaths">
            <summary>
            returns the Filepaths contained in this collection as string array. 
            </summary>
            <returns>a string array of filepaths</returns>
        </member>
        <member name="P:Jam.Shell.SystemShellListItemCollection`1.Item(System.Int32)">
            <summary>
            Get a <see cref="T:Jam.Shell.ShellSystemListItem"/> at the specified index.
            The setter always throws an exception, since ShellSystemListViewItemCollection is readonly.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Jam.Shell.SystemShellListItemCollection`1.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemShellListItemCollection`1.IsReadOnly">
            <summary>
            Returns true
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemListItemCollection">
            <summary>
            Represents the collection of items in a <see cref="P:Jam.Shell.ShellSystemListItemCollection.ShellSystemList"/> control.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItemCollection.#ctor(Jam.Shell.ShellSystemList)">
            <summary>
            Default constructor
            </summary>
            <param name="shellSystemList">The ShellSystemList to associate the ShellSystemListItemCollection with</param>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItemCollection.ShellSystemList">
            <summary>
            Get the <see cref="P:Jam.Shell.ShellSystemListItemCollection.ShellSystemList"/> instance this collection is associated to.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellItemFilter">
            <summary>
            Provides filtering to the containing control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItemFilter.m_FilePatternFilter">
            <summary>
            <see cref="P:Jam.Shell.ShellItemFilter.FilePatternFilter"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItemFilter.m_FilePatternFilterRegex">
            <summary>
            <see cref="P:Jam.Shell.ShellItemFilter.FilePatternFilter"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellItemFilter"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.#ctor(Jam.Shell.ShellBrowser)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellItemFilter"/> class.
            </summary>
            <param name="pShellBrowser">A ShellBrowser instance holding the data to filter</param>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.OnFilterChanged">
            <summary>
            Raises the FilterChanged event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.IsIncluded(Jam.Shell.ItemIdList)">
            <summary>
            Main method that checks if the relativePidl is contained in the filter.
            </summary>
            <param name="relativePidl">Pidl relative to this instance's Folder</param>
            <returns>true if the item represented by relativePidl passed the filter criteria, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.IsSet">
            <summary>
            Checks if a filter is set or if the Filter is at its default state.
            </summary>
            <returns>true if any filtering is set</returns>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowFolders">
            <summary>
            The property ShowFolders allows you to include the folders in the <see cref="T:Jam.Shell.ShellListView"/>, similar to FrontPage 2000.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will also be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowNethood">
            <summary>
            If set to 'false', the Network Neighbourhood is not shown in the component,
            otherwise it is shown (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowRecycleBin">
            <summary>
            If set to true, the recycle bin will be visible. If set to false, the recycle bin will be hidden
            (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.FilePatternFilter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.FilterRegex">
            <summary>
            Set this property to a regular expression if you want to only show those files that match the regex.
            This value also changes  if the property <see cref="P:Jam.Shell.ShellItemFilter.FilePatternFilter"/> is set.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellItemFilter.FilterChanged">
            <summary>
            Raised when one of the filter criteria was changed
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellTreeNode">
            <summary>
            Represents an item of the Windows shell namespace in a <see cref="T:Jam.Shell.ShellTreeView"/>.
            </summary>
            <seealso cref="T:Jam.Shell.ShellTreeView"/>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_Cut">
            <summary>
            Used to store the value of the <see cref="P:Jam.Shell.ShellTreeNode.Cut"/>Cut property.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_OverlayImage">
            <summary>
            Used to store the value of the <see cref="P:Jam.Shell.ShellTreeNode.OverlayImage"/> OverlayImage property, the index of the overlay item in the system image list of this item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_IsFolder">
            <summary>
            Is the current element a folder?
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_IsEnumerable">
            <summary>
            Is the current element a folder?
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_AbsoluteItemIdList">
            <summary>
            Absolute ItemIdList of this shell object in the shell namespace.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_RelativeItemIdList">
            <summary>
            Relative ItemIdList of this hsell object relative to the parent object.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.Flag">
            <summary>
            Multi purpose Flag, used e.g. in <see cref="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_ExpandIfHasChildren">
            <summary>
            Can the node be expanded automatically when children are added (asynchronously)?
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_Sticky">
            <summary>
            Node was not by FillFolder but by explicitely selecting it. It should survive RefreshNode it.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.#ctor(Jam.Shell.ItemIdList,System.String,Jam.Shell.ShellTreeNode,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellTreeNode"/> class.
            </summary>
            <param name="p_AbsoluteItemIdList">Absolute <see cref="T:Jam.Shell.ItemIdList"/> of the shell item that this <see cref="T:Jam.Shell.ShellTreeNode"/> should represent.</param>
            <param name="p_Text">Text that should be displayed for this <see cref="T:Jam.Shell.ShellTreeNode"/></param>
            <param name="Parent">The parent <see cref="T:Jam.Shell.ShellTreeNode"/> und which this new instance should be added.</param>
            <param name="p_IsFolder">pass <c>true</c> if the new instance should behave like a folder; otherwise passs <c>false</c>.</param>
            <param name="p_IsEnumerable">if set to <c>true</c> the new instance is enumerable, i.e. has or could have children.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.#ctor(Jam.Shell.ItemIdList,System.String,Jam.Shell.ShellTreeNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellTreeNode"/> class.
            </summary>
            <param name="p_AbsoluteItemIdList">Absolute <see cref="T:Jam.Shell.ItemIdList"/> of the shell item that this <see cref="T:Jam.Shell.ShellTreeNode"/> should represent.</param>
            <param name="p_Text">Text that should be displayed for this <see cref="T:Jam.Shell.ShellTreeNode"/></param>
            <param name="Parent">The parent <see cref="T:Jam.Shell.ShellTreeNode"/> und which this new instance should be added.</param>
            <param name="p_IsFolder">pass <c>true</c> if the new instance should behave like a folder; otherwise passs <c>false</c>.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Refresh(System.Boolean)">
            <summary>
            Refresh this <see cref="T:Jam.Shell.ShellTreeNode"/>.
            </summary>
            <param name="p_Recursive">Pass <c>true</c>, if all subfolders should also be refreshed as well; otherwise <c>false</c></param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.CompleteDetails">
            <summary>
            Calls CompleteDetails for the node, i.e. redetermines the node's text, CheckState and icons.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Sort">
            <summary>
            (Re-)Sorts the subnodes.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Rename(System.String,System.Boolean)">
            <summary>
            Renames the file or folder that is referenced by this ShellTreeItem instance to the new
            name given as a parameter.
            </summary>
            <param name="p_NewName">The new name of the file/folder</param>
            <param name="p_invokeLater">Must be true if called from within the LabelEdit process.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Rename(System.String)">
            <summary>
            Renames the file or folder that is referenced by this ShellTreeItem instance to the new 
            name given as a parameter.
            </summary>
            <param name="p_NewName">The new name of the file/folder</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.CreateFolder(System.String)">
            <summary>
            Creates a new Folder if the ShellListNode is a Folder;
            may throw an Exception, see <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/> for the Exceptions that can occur
            </summary>
            <param name="p_FolderName">The folder name of the new sub folder to create.</param>
            <returns>true if the folder was created successfully</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.InvertCheckState">
            <summary>
            This method inverts the <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> of the <see cref="T:Jam.Shell.ShellTreeNode"/> 
            instance. If the Item was checked it's state will be set to unchecked.
            If it was Grayed or UnChecked it will be Checked afterwards.
            If the Item is not associated (contained) in a <see cref="T:Jam.Shell.ShellTreeView"/> or
            the <see cref="T:Jam.Shell.ShellTreeView"/> has no <see cref="T:Jam.Shell.ShellControlConnector"/> assigned,
            this method does nothing and returns immediately.
            Furthermore the TreeView needs to have the <see cref="P:Jam.Shell.ShellTreeView.CheckBoxes"/> property
            enabled.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.RefreshCheckState">
            <summary>
            Refreshes the value of the <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> CheckSate property.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.RefreshCheckState(Jam.Shell.ShellTreeNode.RefreshDirection)">
            <summary>
            Refreshes the value of the <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> property recursively for 
            the given direction.
            </summary>
            <param name="refreshDirection">
            If the value is ASCEND, the parent nodes will be updated, and 
            if DESCEND, the child nodes will be updated. 
            If <see cref="F:Jam.Shell.ShellTreeNode.RefreshDirection.BOTH"/> is passed then the method 
            first ascends and refreshes, then descends and refreshes its sub nodes.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.GetDataObject">
            <summary>
            Returns the Windows Shell IDataObject interface for this object wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <returns>The DataObject for this object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.GetDropTarget">
            <summary>
            Returns the Windows IOleDropTarget interface for this item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.GetChildNode(System.String)">
            <summary>
            Returns subnode with the given caption.
            </summary>
            <param name="p_ChildNodeCaption">The caption of the subnode that should be returned.</param>
            <returns>The subnode with the given cpation or null, if no subnode with this caption was found.</returns>
            <remarks>This method compares only direct subnodes, it does not recurse the whole tree.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.SetIcon(System.Int32,System.Boolean)">
            <summary>
            Sets the icon.
            </summary>
            <param name="iconIndex">Index of the icon.</param>
            <param name="overlay">if set to <c>true</c> the imageIndex is set as overlay image.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.SetCheckState(Jam.Shell.CheckState)">
            <summary>
            This method should be used internally to update the <see cref="P:System.Windows.Forms.TreeNode.StateImageIndex"/>
            of the item without side effects. (Using the public <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> property 
            will cause the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/> to be modified).
            </summary>
            <param name="value">The new checkstate of the item.</param>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.ExpandIfHasChildren">
            <summary>
            Will the node be expanded automatically when receiving insert notifications for children?
            Used for the network node, when it is iterated asynchronously using ShellNotifications. 
            When expanding the node it will not have contents at first. The flag is set to true, and the first child that is received will expand the node then.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.FullPath">
            <summary>
            Use to get the full path of this item.
            </summary>
            <returns>The full file system path of this item. An empty string if this item is not a file system object.</returns>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Parent">
            <summary>
            The parent <see cref="T:Jam.Shell.ShellTreeNode"/>, <c>null</c> if this is a root node.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.IsFolder">
            <summary>
            <b>true</b> if the current item is a folder; otherwise <b>false</b>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.IsEnumerable">
            <summary>
            Gets a value indicating whether this instance is enumerable, i.e. if it's a folder and has or could have children.
            </summary>
            <value>
            	<c>true</c> if this instance is enumerable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.HasChildren">
            <summary>
            <c>true</c>, if this <see cref="T:Jam.Shell.ShellTreeNode"/> has subfolders; otherwise <c>false</c>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.AbsoluteItemIdList">
            <summary>
            Get the absolute ItemIdList of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.SpecialFolder">
            <summary>
            SpecialFolder allows you to get the type of the currently listed folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.TreeView">
            <summary>
            The <see cref="T:Jam.Shell.ShellTreeView"/> that contains this item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            This property will only be set if the <c>ShowOverlayIcons</c> property of <see cref="P:Jam.Shell.ShellTreeView.ShowOverlayIcons"/> is set to true.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Checked">
            <summary>
            This property calls <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> and
            returns true only if the item is CheckState.Checked 
            and false if in CheckState.Grayed or CheckState.UnChecked.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.CheckState">
            <summary>
            If the <see cref="P:Jam.Shell.ShellTreeView.CheckBoxes"/> property of the <see cref="T:Jam.Shell.ShellTreeView"/> is true
            then this property can be used to get or set the check state.
            If the value that is set changes the item's checkstate, and a <see cref="T:Jam.Shell.ShellControlConnector"/> is
            assigned to the <see cref="T:Jam.Shell.ShellTreeView"/> the item is contained in, the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/>
            will be updated accordingly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.IsDropTarget">
            <summary>
            if this property is set to true, then the item is formatted as a highlighted drop target.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellTreeNode.RefreshDirection">
            <summary>
            The possible options to refresh a checkstate of a <see cref="T:Jam.Shell.ShellTreeNode"/>.
            <seealso cref="M:Jam.Shell.ShellTreeNode.RefreshCheckState(Jam.Shell.ShellTreeNode.RefreshDirection)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.RefreshDirection.ASCEND">
            <summary>
            Ascend to the root node, refresh each parent node
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.RefreshDirection.DESCEND">
            <summary>
            Descend and visit and refresh all children
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.RefreshDirection.BOTH">
            <summary>
            Ascends to the parent, then descends
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellTreeView">
            <summary>
            A ShellTreeView displays the shell namespace in a tree. When the user right clicks on a folder, it will automatically show the context menu. 
            Use the <see cref="P:Jam.Shell.ShellTreeView.SelectedPath"/> property to get the currently selected path, use the <see cref="P:Jam.Shell.ShellTreeView.SpecialFolder"/> property to check if 
            a special folder like the Control Panel is currently selected. Usually a ShellTreeView component will be rooted the desktop folder, but you 
            can use the <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> property to choose a different root folder. You can synchronize a <see cref="T:Jam.Shell.ShellListView"/> with a 
            ShellTreeView by using the <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> property.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_WorkItemTag">
            <summary>
            This Guid is used to tag the WorkItems that belong to this ListView.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_Initialized">
            <summary>
            This flag is true after the component has been constructed, 
            and will be set to false between subsequent calls to 
            BeginInit() and EndInit() of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_DropTargetHelper">
            <summary>
            Used to support drag images and Vista style drag cursors.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_DraggedDataObject">
            <summary>
            Used to save the DataObject while dragging.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_UseSystemStyles">
            <summary>
            If false the component won't use the vista styles.
            <see cref="P:Jam.Shell.ShellTreeView.UseSystemStyles"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_UseSystemFont">
            <summary>
            If true the component will use the default system font.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_ContextMenuStrip">
            <summary>
            The ContextMenuStrip the TreeView will use to merge with the system menu...
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_ShellContextMenu">
            <summary>
            Indicates whether the ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_LastCutNode">
            <summary>
            Contains the last node the user selected and performed the 'Cut' operation on.
            This attribute is null if yet no cut operation was performed on the TreeView
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellTreeView"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.HandleNeeded">
            <summary>
            Creates the handle if it has not been created already.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.IsRootedAtSpecialFolder">
            <summary>
            Returns true, if the Root of the ShellTree is a valid SpecialFolder, i.e. something else than ShellFolder.Unknown.
            </summary>
            <returns>true, if RootedAt is something else than ShellFolder.Unknown.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnHandleCreated(System.EventArgs)">
            <summary>
            This method supports the .NET Framework infrastructure and is not intended to be used directly from your code. 
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ChangeNotificationHandler(System.Object,Jam.Shell.ChangeNotificationPidlEventArgs)">
            <summary>
            This method gets called by the <see cref="T:Jam.Shell.ShellChangeNotifier"/> object 
            and informs about changes in the current folder. It sets the cursor of the ShellTreeView
            to the correct position if i.e. a file was renamed, a network drive was unmounted, etc.
            </summary>
            <param name="sender">sender of the event, not used here</param>
            <param name="p_changeNotificationEventPidlArgs">the event arguments that happened</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            This event is triggered before a tree node is expanded, by clicking on 'plus',
            in case the node has not been expanded before, it will instantly be filled with
            the files found in that particular path (by <see cref="M:Jam.Shell.ShellTreeView.AddShellItem(Jam.Shell.ShellTreeNode,Jam.Shell.ShellBrowser)"/>)
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs"/> that contains the event data</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            This event is triggered if the user just starts editing a label
            </summary>
            <param name="e">the event arguments of the occurred Event</param>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_IsInAfterLabelEdit">
            <summary>
            Keeps track if a node is currently in afterLabelEdit
            Node.IsEditing is already false when AfterLabelEdit is started, but we need to skip notifications until everything is finished.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            This event is triggered if the user edited a treenode and renamed it
            it is only active if the property base.LabelEdit was set to true
            </summary>
            <param name="e">the event arguments when this Event occurs</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FillFolder(Jam.Shell.ShellTreeNode)">
            <summary>
            Fills in the subfolders in a node
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be filled with its subfolders</param>
            <remarks>All existing subfolders will be deleted.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SelectSubFolder(System.String)">
            <summary>
            Selects a sub folder (if existant) of the name given as a parameter
            if p_FolderName is null an ArgumentNullException is thrown.
            if no node is currently selected nothing happens and false is returned.
            if no sub folder of the given name exists the method returns false as well.
            </summary>
            <param name="p_FolderName">the foldername to search for in the child-<see cref="T:Jam.Shell.ShellTreeNode"/> of the currently selected node.</param>
            <returns>true if p_FolderName could be selected as a subfolder</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.CreateDir(System.String,System.String,System.Boolean)">
            <summary>
            This method creates a new directory with the name of the string argument 
            foldername in the given path.
            If EditMode is True, the new folder will be switched to the edit mode 
            after creation so that the user can change its name.
            </summary>
            <param name="p_Path">The path where the folder should be created in.</param>
            <param name="p_FolderName">The name of the new folder. Do pass a single name only, not a full path. If an empty string is passed as foldername, 
            a standard folder name will be used. </param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the new folder after its creation.
            Pass <b>false</b> if the new folder should not be in edit mode.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.CreateDir(System.String,System.Boolean)">
            <summary>
            This method creates a new directory with the name of the string argument 
            p_FolderName in the currently SelectedPath. 
            If EditMode is True, the new folder will be switched to the edit mode 
            after creation so that the user can change its name.
            If nothing of a File is is selected SelectedNode 
            </summary>
            <param name="p_FolderName">The name of the new folder. Do pass a single name only, not a full path. 
            If an empty string is passed as foldername, a standard folder name will be used.</param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the new folder after its creation.
            Pass <b>false</b> if the new folder should not be in edit mode.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnEditLabelTimerTick(System.Object,System.EventArgs)">
            <summary>
            This method calls <see cref="M:System.Windows.Forms.TreeNode.BeginEdit"/> on the <see cref="P:Jam.Shell.ShellTreeView.SelectedNode"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnAddTreeNode(Jam.Shell.ShellTreeNode)">
            <summary>
            Fires an event if an item is added to the tree.
            </summary>
            <param name="p_Node">The node that is to be added.</param>
            <returns>true if the item should be added, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.AddShellItem(Jam.Shell.ShellTreeNode,Jam.Shell.ShellBrowser)">
            <summary>
            This methods adds the currently active object of the m_ShellBrowser to the TreeNode.
            </summary>
            <param name="p_Parent">The parent <see cref="T:Jam.Shell.ShellTreeNode"/> of the added item.</param>
            <param name="pShellBrowser">A ShellBrowser instance to use.</param>
            <returns>
            The new created ShellTreeNode instance is returned.
            Null, if the ShowOptionsShouldShow determined not to include the node or if the AddTreeNode event had the <see cref="P:Jam.Shell.AddTreeNodeEventArgs.CanAdd"/> set to false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.DetermineHasSubFolders(System.Object)">
            <summary>
            Determines whether a particular folder node has children
            This method can be called from a different thread
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.CompleteDetails(Jam.Shell.ShellTreeNode,System.Boolean,Jam.Shell.ShellBrowser)">
            <summary>
            Completes the visual details of the given item, e.g. icon, overlay image etc.
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be completed.</param>
            <param name="p_FullRefresh">Performs additional (slow) operations.</param>
            <param name="p_ShellBrowser">A ShellBrowser pointing to the correct item. If null the m_ShellBrowser instance is used.</param>
            <remarks>
            The m_ShellBrowser must point to the appropriate item!
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean)">
            <summary>
            Performs a full refresh of the given <see cref="T:Jam.Shell.ShellTreeNode"/>
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be refreshed.</param>
            <param name="p_Recursive">Pass <c>true</c> if the node should be fully refreshed; <c>false</c> for an optimized (faster) refresh. </param>
            <seealso cref="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.DummyHasChildrenTreeNode,System.Boolean)">
            <summary>
            Empty method when calling RefreshNode with DummyHasChildrenNode
            Fixes Bug #2256
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.DummyHasChildrenTreeNode"/> that should be refreshed.</param>
            <param name="p_Recursive">Boolean value - has no effect in this dummy-function</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean,System.Boolean)">
            <summary>
            Refreshes a Node, by clearing its content, and refilling the sub-tree with new,
            probably more current information from the file-system <see cref="M:Jam.Shell.ShellTreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)"/>
            </summary>
            <param name="p_Node">The node that should be refreshed.</param>
            <param name="p_Recursive">Pass <c>true</c>, if all subfolders should also be refreshed as well; otherwise <c>false</c></param>
            <param name="p_FullRefresh">Pass <c>true</c> if the node should be fully refreshed; <c>false</c> for an optimized (faster) refresh. </param>
            <seealso cref="M:Jam.Shell.ShellTreeNode.Refresh(System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.EnableSystemStyles">
            <summary>
            Sets system specific behaviour,
            i.e. disables the lines in the ShellTreeView for Vista and upwards.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList)">
            <summary>
            Selects the <see cref="T:Jam.Shell.ShellTreeNode"/> for the given <see cref="T:Jam.Shell.ItemIdList"/>.
            </summary>
            <param name="p_ItemIdList">The <see cref="T:Jam.Shell.ItemIdList"/> of the shell item that should be selected.</param>
            <returns><c>true</c> if the requested shell item was found and selected; otherwise <c>false</c>.</returns>
            <remarks>If for some reason only a prent item fo the requested shell item can be found, then this item will be selecdted.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FindNodeForItemIdList(Jam.Shell.ItemIdList,Jam.Shell.ShellTreeNode,System.Boolean)">
            <summary>
            Finds the node representing the passed ItemIdList.
            </summary>
            <param name="pItemIdList">The ItemIdList to look for.</param>
            <param name="pStartNode">The node that shall be searched for the passed ItemIdList.</param>
            <param name="pReturnNearestParent">If true, nodes will not be expanded, but the closest already parent node is returned. If false all nodes on the way are expanded and null is returned if it's not found.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList,Jam.Shell.ShellTreeView.GotoFolderIdListAction)">
            <summary>
            Tries to find the <see cref="T:Jam.Shell.ShellTreeNode"/> for the given <see cref="T:Jam.Shell.ItemIdList"/> and executes the requested action on it.
            </summary>
            <param name="p_ItemIdList">The <see cref="T:Jam.Shell.ItemIdList"/> of the shell item on that the action should be performed.</param>
            <param name="p_Action">The action which should be performed.</param>
            <returns><c>true</c> if the requested shell item was found and the action could be performed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RenameItemSelectedHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the click on the "Rename" context menu item of the Shell context menu
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the currently selected item
            <seealso cref="P:Jam.Shell.ShellTreeView.ShowContextMenu"/>
            </summary>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ShowContextMenuForNode(Jam.Shell.ShellTreeNode,System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the item given as a parameter
            </summary>
            <param name="p_ShellTreeNode">the ShellTreeNode to show the contextmenu</param>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.InvokeCommandOnSelected(System.String)">
            <summary>
            Invokes the Command given as a parameter on the currently selected Node, any necessary events 
            are created 
            </summary>
            <param name="command">the <see cref="T:Jam.Shell.ShellOperation"/> or any extension to execute</param>
            <returns>true if the command was a success, false if not or no Node was selected to perform the operation</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GetChildNodeForItemIdList(Jam.Shell.ShellTreeNode,Jam.Shell.ItemIdList,Jam.Shell.ShellBrowser)">
            <summary>
            Returns the child ShellTreeNode for the given ItemIdList.
            </summary>
            <param name="p_ParentNode">The <see cref="T:Jam.Shell.ShellTreeNode"/> of which the child ShellTreeNode should be searched.</param>
            <param name="p_RelativeItemIdList">The relative ItemIdList for which the child <see cref="T:Jam.Shell.ShellTreeNode"/>Should be returned.</param>
            <param name="p_ShellBrowser">A ShellBrowser instance to use for comparison. If null is passed the m_ShellBrowser instance is used.</param>
            <returns>
            The <see cref="T:Jam.Shell.ShellTreeNode"/> for the given ITemIdList;<c>null</c> if none was found
            </returns>
            <remarks>
            Parameter p_ShellBrowser or <see cref="F:Jam.Shell.ShellTreeView.m_ShellBrowser"/> object must point to the corresponding folder of the parameter <paramref name="p_ParentNode"/>!
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.InformPathChanged(Jam.Shell.ShellTreeNode)">
            <summary>
            Informs the <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> that the selected shell folder has changed.
            </summary>
            <param name="p_NewNode">The newly selected <see cref="T:Jam.Shell.ShellTreeNode"/>.</param>
            <remarks>Controls connected to the same <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> will be updates to have the same shell folder active</remarks>
            <seealso cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.LogError(System.String)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.ShellTreeView.ShowErrorMessages"/> is set.
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.LogError(System.String,System.Exception)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.ShellTreeView.ShowErrorMessages"/> is set. 
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
            <param name="exception">Exception a possible exception that is logged as well, may be null</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SetFont(System.Drawing.Font)">
            <summary>
            Sets the font without adjusting other properties.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeInvokeCommandOnSelected(Jam.Shell.InvokeCommandEventArgs)">
            <summary>
            Calls the BeforeInvokeCommandOnSelected event if it is assigned.
            </summary>
            <param name="p_EventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeShellDrop(Jam.Shell.BeforeShellDropEventArgs)">
            <summary>
            Calls the BeforeShellDrop event if it is assigned.
            </summary>
            <param name="p_EventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FullRefresh">
            <summary>
            Use the FullRefresh method if you want to refresh a <see cref="T:Jam.Shell.ShellTreeView"/>. All expanded branches of the file system structure will be refreshed. 
            If you just want to refresh one node and its child nodes, use the <see cref="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean)"/> method.
            </summary>        
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SmartRefresh">
            <summary>
            Use the SmartRefresh to update the contents of a <see cref="T:Jam.Shell.ShellTreeView"/>. In comparison to the <see cref="M:Jam.Shell.ShellTreeView.FullRefresh"/> method, SmartRefresh is much faster, 
            but only removes objects which have been deleted and adds objects which have been added. It doesn't update changed file sizes or dates. Usually this method will be called automatically, 
            when a file was added or deleted.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnFolderUpdated(Jam.Shell.UpdateFolderEventArgs)">
            <summary>
            Fires the FolderUpdated event with the given argument and "this" as the sender
            </summary>
            <param name="p_UpdateFolderEventArgs">The event argument, see <see cref="T:Jam.Shell.UpdateFolderEventArgs"/></param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,System.String,System.String)">
            <summary>
            Helper function for <see cref="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)"/> to avoid type conversion.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            Helper function for <see cref="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)"/> to avoid type conversion.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)">
            <summary>
            Fires an event if an operation was performed on the <see cref="T:Jam.Shell.ShellTreeView"/>, i.e. an Item was pasted
            </summary>
            <param name="p_Operation">Contains the type of operation, which has been performed.</param>
            <param name="p_Paths">The p_Paths contains the file or folder names, that are affected.</param>
            <param name="p_Destination">Contains the destination, e.g. where files or folders have been pasted to.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDoubleClick(System.EventArgs)">
            <summary>
            Override the OnDoubleClick event to try to perform the default action for the selected object 
            if it is a file.
            </summary>
            <param name="e">The parameter contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the OnMouseUp event, to handle e.g. double clicks and right clicks on files or folders
            </summary>
            <param name="e">Provides data for the OnMouseDown event.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overrides the OnKeyUp event to handle key strokes for the currently selected item
            e.g. the ContextMenuPopup key
            </summary>
            <param name="e">Provides data from the KeyEvent that occured</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the WindProc function and filters ERASEBKGND to avoid flickering.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overrides the OnKeyDown event to handle key strokes for the currently selected item.
            Currently, if the spacebar is pressed, the checkboxes are toggled.
            </summary>
            <param name="e">Provides data from the KeyEvent that occured</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Change the current folder to the one given in parameter
            throws <see cref="T:System.ArgumentNullException"/> if the argument was null
            </summary>
            <param name="p_ItemIdList">the folder to change to</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Change the currently selected file, if <see cref="P:Jam.Shell.ShellTreeView.ShowFiles"/> is true
            throws <see cref="T:System.ArgumentNullException"/> if the argument was null
            </summary>
            <param name="p_ItemIdList">The ItemIdList that is passed to <see cref="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList)"/> if ShowFiles was true.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GoUp">
            <summary>
            Go up one level in the tree,
            does nothing if the SelectedNode is null of if the SelectedNode has no Parent (is root)
            </summary>
            <returns>true, if the operation could be performed, false otherwise</returns>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_ShellControlConnector">
            <summary>
            this variable holds a reference to an attached ShellControlConnector which is
            the mediator between different ShellBrowser components and keeps the views in sync
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Compare(System.Object,System.Object)">
            <summary>
            Compares two ShellTreeNode objects by their ItemIdList.
            </summary>
            <param name="x">First ShellTreeNode.</param>
            <param name="y">Second ShellTreeNode, which will be compared with first one.</param>
            <returns>
            Returns a value less than 0 if x is less than y, 0 if x is eqaul to y and a value greater
            than 0 if x is greater than y.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ShowOptionsShouldShow(Jam.Shell.ShellBrowser)">
            <summary>
            Returns if the active shell object in the given ShellBrowser should be shown 
            according to the property settings of this class.
            </summary>
            <param name="shellbrowser">An instance of the <see cref="P:Jam.Shell.ShellTreeView.ShellBrowser"/> class.</param>
            <returns>true, if the active object in the ShellBrowser should be visible in a control according to the property values. false if it hsould not be visible.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnCheckStateChanged(Jam.Shell.ShellTreeNode,Jam.Shell.CheckState)">
            <summary>
            Fires an event if the <see cref="T:Jam.Shell.CheckState"/> of an item has changed.
            <seealso cref="M:Jam.Shell.ShellListBaseItem.InvertCheckState"/>
            </summary>
            <param name="node">The item (<see cref="T:Jam.Shell.ShellTreeNode"/>), where the <see cref="T:Jam.Shell.CheckState"/> changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.IsEditing">
            <summary>
            Gets a value indicating whether the <see cref="P:Jam.Shell.ShellTreeView.SelectedNode"/> is 
            in editing state. 
            </summary>
            <returns>The editing state of the selected node. Returns false, if nothing is selected.</returns>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.LargeIcons">
            <summary>
            Set or get the ImageSize. True for LargeIcons, false for SmallIcons.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowLines">
            <summary>
            The ShowLines property cannot be set, if <see cref="P:Jam.Shell.ShellTreeView.UseSystemStyles"/> is set to true and the detected
            operating system is Windows Vista. This is to keep the look&amp;feel consistent, ShowLines together with the Vista TreeView
            style does not look pretty.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellBrowser">
            <summary>
            Internal access to the ShellBrowser instance
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.WorkItemTag">
            <summary>
            A internal number that is used to tag the workitems of a list view.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowShellContextMenuOnTop">
            <summary>
            If set to to 'true', the shell context menu will be shown on top of the provided popup menu. 
            If set to 'false', the shell context menu will be shown below the provided popup menu.
            The value true is currently not supported. The menu items will be shown correctly, however their Click event cannot be triggered.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.PreviouslySelectedItem">
            <summary>
            Stores the item that was selected before <see cref="P:Jam.Shell.ShellTreeNode.IsDropTarget"/> is set to true for an item.
            So this value can be used to restore the selected item later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.CheckBoxes">
            <summary>
            Use this property to turn on or off the checkboxes for file and folder selection. 
            The checkboxes will only work, if a <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> instance 
            has been assigned to the ShellControlConnector property of this component. It 
            will automatically synchronize the selection state of the items in multiple 
            shell controls linked together with this ShellControlConnector.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.LabelEdit">
            <summary>
            Gets or sets a value indicating whether the label text of the tree nodes can be edited.
            </summary>
            <value></value>
            <returns>true if the label text of the tree nodes can be edited; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed. Exceptions are 'My Computer', 'Libraries' and 'Network'
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AllowDrop">
            <summary>
            Use this property to turn on or off drag and drop support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AllowDrag">
            <summary>
            Use this property to turn on or off drag support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.UseSystemStyles">
            <summary>
            Use this property to turn on or off the usage of the system specific design, i.e. enable Vista visual styles of the explorer components.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.UseSystemFont">
            <summary>
            Set this property to true if you want the component to utilize the default system font.
            It is also set to true if the <see cref="P:Jam.Shell.ShellTreeView.UseSystemStyles"/> property is set.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.Font">
            <summary>
            The font used to display text in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.RootedAt">
            <summary>
            Defines the root folder of this <see cref="T:Jam.Shell.ShellTreeView"/>
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder 
            selected is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.RootedAtFileSystemFolder">
            <summary>
            Determines the root file system folder of a <see cref="T:Jam.Shell.ShellTreeView"/>.
            </summary>
            <remarks>
            You can use this property to set the specific folder, which should be used as root for the JamShellTree.
            When this property is assigned with a valid file system path, then <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> will be set to SF_UNKNOWN.
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.RootNode">
            <summary>
            Returns the root element of the type <see cref="T:Jam.Shell.ShellTreeNode"/> of this shell treeview.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ChangeDelay">
            <summary>
            Specifies the delay between when a node is selected and when the handling of this change is processed.
            </summary>
            <remarks>Setting this property to a value greater than 0 will emulate the behaviour of the Windows Explorer
            and delay the updating of controls connected through a <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/>.</remarks>
            <seealso cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.Nodes">
            <summary>
            Returns a collection containing all child ShellTreeNodes of this <see cref="T:Jam.Shell.ShellTreeNode"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.SelectedNode">
            <summary>
            Gets or sets the tree node that is currently selected in the <see cref="T:Jam.Shell.ShellTreeView"/> control. 
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.SelectedPath">
            <summary>
            Use SelectedPath to get or set the path, which is currently selected in the <see cref="T:Jam.Shell.ShellTreeView"/>. 
            If the currently selected path is not a file system folder, SelectedPath returns an empty string and you should use the <see cref="P:Jam.Shell.ShellTreeView.SpecialFolder"/> property to get the type of this path.
            If you`re looking for the path an operation was performed on (e.g. Drop), use the <see cref="E:Jam.Shell.ShellTreeView.OperationPerformed"/> event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.SpecialFolder">
            <summary>
            SpecialFolder allows you to check, if the currently selected folder is a special folder (e.g. the Control Panel) or to make a special folder the selected folder. Use the SelectedPath property if you want to deal with file system folders.
            </summary>
            <seealso cref="T:Jam.Shell.ShellFolder"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AutomaticRefresh">
            <summary>
            Enables the automatic refreshes of the control, e.g. when a file is added or deleted in the current directory.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AutoExpandDelay">
            <summary>
            The delay in milliseconds after that a folder is expanded automatically during a drag and drop operation.
            A value of 0 disables the auto expand feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AutoScrollDelay">
            <summary>
            The delay in milliseconds after that the control scrolls automatically during a drag and drop operation.
            A value of 0 disables the auto scroll feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.CopyMode">
            <summary>
            Copy mode allows you to control the behaviour when files or folders get dropped.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ContextMenuStrip">
            <summary>
            The ContextMenuStrip is converted to an ordinary ContextMenu. This makes it 
            possible to merge your ContextMenuStrip with the Default ShellContextMenu provided
            by the system.
            The "Opening" and "Closing" events of the ContextMenuStrip will be raised if the 
            ContextMenu "Popup"/"Collapse" event occurs. For menu items only the "Click" event
            is available. All other events are not available.
            All ToolStripMenuItems are converted, and ToolStripSeparators are recognized.
            The ShortCut Keys defined in a ToolStripMenuItem are not converted.
            If you would like to have the ShortCut-Keys, leave this Property null, instead set
            the ContextMenu property to your menu explicitly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellContextMenu">
            <summary>
            Indicates whether the Windows ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.AddTreeNode">
            <summary>
            This Event is triggered every time a ShellTreeNode is added to the ShellTreeView,
            that is, it's structure changed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.FolderUpdated">
            <summary>
            This Event is triggered every time the details of a Node are updated
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.OperationPerformed">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellTreeView"/> executed a shell operation like pasting.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.BeforeShellCommand">
            <summary>
            This event is fired when a shell command is to be executed, ie. via the context menu
            It is possible to permit the execution of the shell command by modifying the BeforeShellCommandEventArgs
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.BeforeInvokeCommandOnSelected">
            <summary>
            Assign this event to be able to control the behaviour of the control
            when the user double-clicks on an item to start the default action
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.BeforeShellDrop">
            <summary>
            This event is fired before a <see cref="T:Jam.Shell.ShellTreeView"/> executes a shell drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.ShellTreeView.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.ShellTreeView.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.IsInitializing">
            <summary>
            The value this property is true between the calls BeginIniti() and EndInit() 
            of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.ShowOptionChanged">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellTreeView"/> executed a shell operation like pasting.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.CheckStateChanged">
            <summary>
            This event is fired when the state of a checkbox was changed by the user.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.HideSelection">
            <summary>
            Gets or sets a value indicating whether the selected tree node remains highlighted
            even when the tree view has lost the focus.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will be shown too.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowNetHood">
            <summary>
            If set to 'false', the Network Neighbourhood will be hidden.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowOverlayIcons">
            <summary>
            If set to 'false', no overlay icons will be show, which improves the performance of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowContextMenu">
            <summary>
            If set to true, the Windows Explorer context menu will be shown, if the user right-clicks.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.NoFillOnStartup">
            <summary>
            If set to true, the control will not fill automatically after it was created.
            The <see cref="M:Jam.Shell.IShellControl.FullRefresh"/> method must be called explicitly.
            Since filling shell control with the appropriate items is a costly operation, this
            property can be useful to prevent unnecessary refreshes of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowRecycleBin">
            <summary>
            If set to true, the recycly bin will be visible. If set to false, the recycle bin will be hidden.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowErrorMessages">
            <summary>
            If set to true, messages boxes will be shown to the user for errors that occured.
            If set to false, errors will be handled as well, but no message will be shown to the user.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.BackColor">
            <summary>
            A System.Drawing.Color that represents the background color of the control.
            The default is the value of the System.Windows.Forms.Control.DefaultBackColor
            property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowColorCompressed">
            <summary>
            If set, compressed files an folders will be shown in that particular Color, if null have show normally
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowColorEncrypted">
            <summary>
            If set, encrypted files an folders will be shown in that particular color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowRootLines">
            <summary>
            Indicates whether lines are displayed between root nodes.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellTreeView.GotoFolderIdListAction">
            <summary>
            Possible actions that can be performed by <see cref="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList,Jam.Shell.ShellTreeView.GotoFolderIdListAction)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Select">
            <summary>
            Select the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Refresh">
            <summary>
            Refresh the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.RefreshParent">
            <summary>
            Refresh the parent of the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Delete">
            <summary>
            Remove the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>            
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Add">
            <summary>
            Make sure that the given <see cref="T:Jam.Shell.ItemIdList"/> is present in the tree.
            If it is not present, add it.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Edit">
            <summary>
            Select the Node and set it into Editmode.
            </summary>
        </member>
        <member name="T:Jam.Shell.UpdateFolderEventArgs">
            <summary>
            the UpdateFolderEventArgs carries the environment of a ShellTreeNode that
            has just been Detail-completed
            </summary>
        </member>
        <member name="M:Jam.Shell.UpdateFolderEventArgs.#ctor(System.Object,Jam.Shell.ShellTreeNode)">
            <summary>
            the constructor of the UpdateFolderEventArgs
            </summary>
            <param name="p_Sender">the sender of the event</param>
            <param name="p_Node">the node the event is associated with</param>
        </member>
        <member name="P:Jam.Shell.UpdateFolderEventArgs.Node">
            <summary>
            the node that got the update event
            </summary>
        </member>
        <member name="P:Jam.Shell.UpdateFolderEventArgs.Sender">
            <summary>
            the object that triggered the event
            </summary>
        </member>
        <member name="T:Jam.Shell.AddTreeNodeEventArgs">
            <summary>
            Provides data for the <see cref="M:Jam.Shell.ShellTreeView.OnAddTreeNode(Jam.Shell.ShellTreeNode)"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddTreeNodeEventArgs.#ctor(Jam.Shell.ShellTreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddTreeNodeEventArgs"/> class.
            </summary>
            <param name="aNode">The ShellTreeNode that thas should be added</param>
        </member>
        <member name="P:Jam.Shell.AddTreeNodeEventArgs.Node">
            <summary>
            The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be added.
            </summary>
        </member>
        <member name="P:Jam.Shell.AddTreeNodeEventArgs.CanAdd">
            <summary>
            Set this property to <c>false</c> if you want to prevent <see cref="P:Jam.Shell.AddTreeNodeEventArgs.Node"/> from being added.
            </summary>
            <remarks>The default value of this property is <c>true</c></remarks>
        </member>
        <member name="P:Jam.Shell.AddTreeNodeEventArgs.FullPath">
            <summary>
            the full path of the TreeNode that is associated to the currently handled event 
            </summary>
        </member>
        <member name="T:Jam.Shell.NodeCheckStateChangedEventArgs">
            <summary>
            The NodeCheckStateChangedEventArgs contains data for the <see cref="E:Jam.Shell.ShellTreeView.CheckStateChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.NodeCheckStateChangedEventArgs.#ctor(Jam.Shell.ShellTreeNode,Jam.Shell.CheckState)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.NodeCheckStateChangedEventArgs"/> class.
            <seealso cref="T:Jam.Shell.ItemCheckStateChangedEventArgs`1"/>
            </summary>
            <param name="node"><see cref="T:Jam.Shell.ShellTreeNode"/> object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="T:Jam.Shell.DummyHasChildrenTreeNode">
            <summary>
            Dummy node used to make visible the + symbol next to folders with subfolders
            </summary>
        </member>
        <member name="T:Resfinder">
            <summary>
            This class is used to locate the resource files correctly
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellViewColumn">
            <summary>
            Class representing a Column in the <see cref="T:Jam.Shell.ExplorerBrowser"/> control.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.#ctor(Jam.Shell.ShellViewColumns,Jam.Shell.SHCOLUMNID,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellViewColumn"/> class.
            </summary>
            <param name="pParent">The p parent.</param>
            <param name="pShellColumnId">The p key.</param>
            <param name="pCaption">The p caption.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Jam.Shell.ShellViewColumn.Caption">
            <summary>
            Gets or sets the caption of the column.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellViewColumn.Width">
            <summary>
            Gets or sets the width in pixels of the column.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellViewColumn.ShellColumnId">
            <summary>
            Gets the key of the column.
            </summary>
            <value>
            A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.
            </value>
        </member>
        <member name="T:Jam.Shell.ShellViewColumns">
            <summary>
            Class representing a collection of <see cref="T:Jam.Shell.ShellViewColumn"/>s. It serves to control the visible columns in the <see cref="T:Jam.Shell.ExplorerBrowser"/> control.
            Not supported on Windows XP.
            </summary>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source="CodeExamples.cs" region="ShellViewColumns_AddColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_SetColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_ShowColumns" lang="C#"/> 
            <code source="CodeExamples.cs" region="ShellViewColumns_RemoveColumns" lang="C#"/> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.LoadSHColumnIDs(System.Boolean)">
            <summary>
            Gets the columns that are shown/available in the current view in their order of appearance.
            </summary>
            <param name="pAll">if set to <c>true</c> all available columns are returned; if set to false only the columns currently displayed are returned.</param>
            <returns>An array of <see cref="T:Jam.Shell.SHCOLUMNID"/>s that are available or displayed in the current view.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetColumnWidth(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns the width of the column identified by the passed id.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>The width of the column or 0 if it's not displayed.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetColumnName(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the caption of the column with the passed column key.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>The caption of the column.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.SetColumnWidth(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Sets the width of the column identified by the passed id.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <param name="pNewWidth">The width in pixel.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.SetColumnName(Jam.Shell.SHCOLUMNID,System.String)">
            <summary>
            Changes the name of the column identified by the passed id.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <param name="pNewName">New name of the column.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Show(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Displays the column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the position passed. If the column is already being displayed it will be moved to the passed position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <param name="pPos">The position (starting at 0) to add the column. If the value is -1 column position is detemined automatically.</param>
            <returns>True if the column was added, inserted or moved, false if it's not available or could not be inserted.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Show(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the column at its default position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>True if the column was added, inserted or moved, false if it's not available or could not be inserted.</returns>
            <example> 
            <code source="CodeExamples.cs" region="ShellViewColumns_ShowColumns" lang="C#"/> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Hide(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the given column from the current view.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>True, if the column was hidden, false if wasn't available or removing failed.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.SetColumns(System.Collections.Generic.IList{Jam.Shell.SHCOLUMNID})">
            <summary>
            Replaces the currently shown columns by the columns passed.
            </summary>
            <param name="pShellColumnIds">A list of <see cref="T:Jam.Shell.SHCOLUMNID"/>s that serve as identifier of the columns.</param>
            <returns>true if the operation succeeded, false otherwise</returns>
            <remarks>If more columns should be added at once, this method is far more performant than adding single columns with <see cref="M:Jam.Shell.ShellViewColumns.Add(Jam.Shell.SHCOLUMNID)"/>, <see cref="M:Jam.Shell.ShellViewColumns.Show(Jam.Shell.SHCOLUMNID)"/> or <see cref="M:Jam.Shell.ShellViewColumns.Insert(System.Int32,Jam.Shell.SHCOLUMNID)"/></remarks>
            <example> 
            <code source="CodeExamples.cs" region="ShellViewColumns_SetColumns" lang="C#"/> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetSHColumnIds">
            <summary>
            Returns the columns the keys of the columns in collection.
            </summary>
            <returns>A list of SHCOLUMNIDs</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.IndexOf(Jam.Shell.ShellViewColumn)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.IndexOf(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns the index of the column with the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>The index of <paramref name="pShellColumnId"/> if found in the list; otherwise, -1. </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Insert(System.Int32,Jam.Shell.ShellViewColumn)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Insert(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inserts a new column representing the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the passed index.
            </summary>
            <param name="index">The index.</param>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Remove(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the specified column.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Add(Jam.Shell.ShellViewColumn)">
            <summary>
            Adds a column to the collection.
            </summary>
            <param name="pColumn">The column to add.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Add(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the specified column at the last position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source="CodeExamples.cs" region="ShellViewColumns_AddColumns" lang="C#"/> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_AddColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Contains(Jam.Shell.ShellViewColumn)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Contains(Jam.Shell.SHCOLUMNID)">
            <summary>
            Determines whether the passed column is contained in the collection.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true, if the column is found the collection, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.CopyTo(Jam.Shell.ShellViewColumn[],System.Int32)">
            <summary>
            Copies the entire list to the array passed, starting at the passed index of the target array.
            </summary>
            <param name="array">The array to copy the collection to.</param>
            <param name="arrayIndex">The start index in the array.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Remove(Jam.Shell.ShellViewColumn)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <example> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_RemoveColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="T:Jam.Shell.SystemImageListSize">
            <summary>
            Available system image list sizes
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.LargeIcons">
            <summary>
            Large Shell icon size (typically 32x32)
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.SmallIcons">
            <summary>
            Small Shell icon size (typically 16x16)
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.OverlayIcons">
            <summary>
            Overlay icons
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.ExtraLargeIcons">
            <summary>
            Extra large icons (Windows Vista and later, typically 48x48)
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.JumboIcons">
            <summary>
            Jumbo icons, 256x256 (Windows Vista and later, typically 256x256)
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemImageListHelper">
            <summary>
            class that helps dealing with the system image list and returns icon indexes for files and folders
            </summary>    
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Jam.Shell.SystemImageListHelper"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.#ctor(Jam.Shell.SystemImageListSize)">
            <summary>
            Creates a new instance of the <see cref="T:Jam.Shell.SystemImageListHelper"/> class with the spcified image list size.
            </summary>
            <param name="aSize">The size of the images.</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.SizeForViewState(Jam.Shell.ViewState)">
            <summary>
            Gets the SystemImageListSize for the viewState.
            </summary>
            <param name="viewState">An <see cref="T:Jam.Shell.ViewState"/> value</param>
            <returns>The matching <see cref="T:Jam.Shell.SystemImageListSize"/> value</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileInfo(System.String,System.Boolean,System.IO.FileAttributes,Jam.Shell.SystemImageListSize)">
            <summary>
            Wrapper around the Shell API function SHGetFileInfo()
            </summary>
            <param name="Filepath">Path to the file or folder, for which the icon number should be returned.</param>
            <param name="Opened">true, if the icon should be returned open, like it is often used for the selected node in treeviews.</param>
            <param name="Attributes">The file attributes that should be used. Usually 0 is passed here.</param>
            <param name="Size">see enumeration <see cref="T:Jam.Shell.SystemImageListSize"/></param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetWidth">
            <summary>
            Returns the width of the icons in the current Imagelist.
            </summary>
            <returns>Integer value which contains the width of the icons.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIndexFromPath(System.String)">
            <summary>
            Returns the icon index for the passed file
            </summary>
            <param name="Path">A path to a file</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIndexFromExtension(System.String)">
            <summary>
            Returns the icon index for the passed file extension
            </summary>
            <param name="Extension">a file extnsion like "TXT".</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.m_FolderIconNumberLargeOpened">
            <summary>
            Caches the icon number of the large opened folder icon
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.m_FolderIconNumberLargeClosed">
            <summary>
            Caches the icon number of the large closed folder icon
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.m_FolderIconNumberSmallOpened">
            <summary>
            Caches the icon number of the small opened folder icon
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.m_FolderIconNumberSmallClosed">
            <summary>
            Caches the icon number of the small closed folder icon
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.m_FileDefaultIconNumber">
            <summary>
            Caches the default icon number for a file of which the extension has not yet been analysed
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFolderIconNumber(System.Boolean)">
            <summary>
            Returns the icon index of the default folder icon
            </summary>
            <param name="Opened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFolderIconNumber(System.Boolean,Jam.Shell.SystemImageListSize)">
            <summary>
            Returns the icon index of the default folder icon
            </summary>
            <param name="Opened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <param name="Size">This parameter specifies the size requested for the icon</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileDefaultIconNumber">
            <summary>
            Get the icon number of the default file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileType(System.String)">
            <summary>
            Returns the description text for the passed file extension 
            </summary>
            <param name="Extension">a file extnsion like "TXT".</param>
            <returns>The description text for the file type</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIndexFromItemIdList(Jam.Shell.ItemIdList,System.Boolean,Jam.Shell.SystemImageListSize)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="aItemIdList">A Shell ItemIdList.</param>
            <param name="Opened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <param name="Size">The size of the icon.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.FetchIcon(System.Object)">
            <summary>
            Fetches the icon. Parameter state specifies the details of the icon to be fetched.
            </summary>
            <param name="state">A <see cref="T:Jam.Shell.SystemImageListHelper.FetchIconArgs"/> instance that holds the information needed to fetch the right icon.</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.FetchIconAsync(Jam.Shell.ItemIdList,System.Boolean,System.Boolean,Jam.Shell.SystemImageListSize,Jam.Shell.SystemImageListHelper.SetIconDelegate,System.Int32)">
            <summary>
            Fetches the icon asynchronously.
            </summary>
            <param name="itemIdList">The item identifier list.</param>
            <param name="opened">if set to <c>true</c> the icon is fetched in the opened state.</param>
            <param name="overlay">if set to <c>true</c> the overlay icon is fetched instead of the normal or opened icon</param>
            <param name="size">The size.</param>
            <param name="callback">The callback that is called when the icon is retreived successfully.</param>
            <param name="workItemTag">The work item tag. Typically the tag of the ShellList/Tree that holds the item</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder,System.Boolean)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="SpecialFolder">A constant from <see cref="T:System.Environment.SpecialFolder"/></param>
            <param name="Opened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="SpecialFolder">A constant from Environment.specialFolder</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(Jam.Shell.ShellFolder,System.Boolean)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="SpecialFolder">A constant from the ShellFolder1 enumeration.</param>
            <param name="Opened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(Jam.Shell.ShellFolder)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="SpecialFolder">A constant from the ShellFolder1 enumeration.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.SetSystemImageList(System.Windows.Forms.ListView)">
            <summary>
            Assigns the system image list of Windows as image list to a ListView
            </summary>
            <param name="aListView">A ListView</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.SetSystemImageList(System.Windows.Forms.TreeView)">
            <summary>
            Assigns the system image list of Windows as image list to a TreeView
            </summary>
            <param name="aTreeView">A TreeView</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIconAsBitmap(System.Int32)">
            <summary>
            Returns the requested image of the system image list as bitmap.
            </summary>
            <param name="iconNumber">The index of the requested icon in the system image list.</param>
            <returns>A bitmap of the requested icon.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIconAsBitmap(System.Int32,System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Returns the requested image of the system image list as bitmap.
            </summary>
            <param name="IconNumber">The index of the requested icon in the system image list.</param>
            <param name="p_Size">The size of the bitmap that should be returned.</param>
            <param name="FrameColor">Specifies the color of the frame of the returned image. If null is passed, the images has no frame.</param>
            <returns>A bitmap of the requested icon.</returns>
            <seealso cref="P:Jam.Shell.SystemImageListHelper.Size"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetFileInfo(System.String,System.Boolean,System.IO.FileAttributes,Jam.Shell.SystemImageListSize)"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(Jam.Shell.ShellFolder,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIconAsBitmap(System.Int32,System.Drawing.Size,System.Drawing.Color,System.Boolean)">
            <summary>
            Returns the requested image of the system image list as bitmap.
            </summary>
            <param name="IconNumber">The index of the requested icon in the system image list.</param>
            <param name="p_Size">The size of the bitmap that should be returned.</param>
            <param name="FrameColor">Specifies the color of the frame of the returned image. If null is passed, the images has no frame.</param>
            <param name="p_ExtraLarge">Get extra large icons in Windows Vista</param>
            <returns>A bitmap of the requested icon.</returns>
            <seealso cref="P:Jam.Shell.SystemImageListHelper.Size"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetFileInfo(System.String,System.Boolean,System.IO.FileAttributes,Jam.Shell.SystemImageListSize)"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(Jam.Shell.ShellFolder,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.ReplaceIconByThumbnail(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            This method replaces a bitmap in the imagelist at the given index.
            It paints images smaller than the thumbnail itself to the middle of the bitmap
            by creating a resized image canvas and redrawing it.
            </summary>
            <param name="pImageList">The ImageList where the image sgould be added.</param>
            <param name="pImageIndex">The index for the new image.</param>
            <param name="pThumbnail">The new image.</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetCheckboxImageList">
            <summary>
            Provides an image list with the checkbox states of the <see cref="T:Jam.Shell.CheckState"/> enumeration.
            </summary>
            <returns>A <see cref="T:System.Windows.Forms.ImageList"/></returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileIcon(System.String,Jam.Shell.SystemImageListSize,System.Boolean)">
            <summary>
            Returns the Icon for the specified filePath.
            </summary>
            <param name="name">full path of the file</param>
            <param name="size">If set to SystemImageListSize.SmallIcons small icons are returned, large icons in all other cases</param>
            <param name="linkOverlay">if true icons include the links overlay</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetCheckboxBitmap(System.Windows.Forms.VisualStyles.CheckBoxState)">
            <summary>
            Extracts the Checkbox state images for the checkbox functionality in the ShellBrowser Components.
            </summary>
            <param name="cbstate">Checkbox state, for which the bitmap should be extracted.</param>
            <returns>Returns Bitmap of the checkbox for the passed check state.</returns>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.ImageWidth">
            <summary>
            The width of the images in the current image list.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.ImageHeight">
            <summary>
            The height of the images in the current image list.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.InterpolationMode">
            <summary>
            Get or set the Interpolation mode that the <see cref="T:Jam.Shell.SystemImageListHelper"/> will use
            to render the Thumbnails. Change this property to optimize image rendering for quality or 
            speed.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.Handle">
            <summary>
            Returns the handle to the system image list.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.BackColor">
            <summary>
            The BackColor for the imagelist.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.Size">
            <summary>
            Decides which size the icons of the system image list should have.
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemImageListHelper.SetIconDelegate">
            <summary>
            Delegate for the method that is called when an icon is retreived.
            </summary>
            <param name="newIndex">The index of the icon in the matching ImageList</param>
            <param name="overlay">The icon that was retreived is an overlay image. </param>
        </member>
        <member name="T:Jam.Shell.SystemImageListHelper.FetchIconArgs">
            <summary>
            Contains parameters passed to <see cref="M:Jam.Shell.SystemImageListHelper.FetchIcon(System.Object)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Callback">
            <summary>
            Method that is called when the icon is fetched. Likely some "invoke" method that will update the GUI thread safely.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Pidl">
            <summary>
            The pidl
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Opened">
            <summary>
            If the opened icon should be fetched
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Overlay">
            <summary>
            If the overlay icon should be fetched
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Size">
            <summary>
            The size of the icon
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.FetchIconArgs.#ctor(Jam.Shell.SystemImageListHelper.SetIconDelegate,Jam.Shell.ItemIdList,System.Boolean,System.Boolean,Jam.Shell.SystemImageListSize)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SystemImageListHelper.FetchIconArgs"/> struct.
            </summary>
            <param name="callback">The callback.</param>
            <param name="pidl">The pidl.</param>
            <param name="opened">If the icon should be retrieved in opened state</param>
            <param name="overlay">if set to <c>true</c> the overlay icon is fetched instead the normal one.</param>
            <param name="size">The size.</param>
        </member>
        <member name="T:Jam.Shell.ShellFolder">
            <summary>
            ShellFolder values provide a unique system-independent way to identify special folders used frequently by applications, but which may not have the same name or location on any given system.
            </summary>
            <remarks>Known folder constants begin with 0x0050</remarks>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AdminTools">
            <summary>
            The file system directory that is used to store administrative tools for an individual user. The Microsoft Management Console (MMC) will save customized consoles to this directory, and it will roam with the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AltStartup">
            <summary>
            The file system directory that corresponds to the user's nonlocalized Startup program group.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AppData">
            <summary>
            The file system directory that serves as a common repository for application-specific data. A typical path is C:\Documents and Settings\username\Application Data. This CSIDL is supported by the redistributable Shfolder.dll for systems that do not have the Microsoft Internet Explorer 4.0 integrated Shell installed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AppUpdates">
            <summary>
            The virtual folder containing the installed application updates.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.BitBucket">
            <summary>
            The virtual folder containing the objects in the user's Recycle Bin.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CDBurnArea">
            <summary>
            The file system directory acting as a staging area for files waiting to be written to CD. A typical path is C:\Documents and Settings\username\Local Settings\Application Data\Microsoft\CD Burning.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonAdminTools">
            <summary>
            The file system directory containing administrative tools for all users of the computer.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonAltStartup">
            <summary>
            The file system directory that corresponds to the nonlocalized Startup program group for all users. Valid only for Microsoft Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonAppData">
            <summary>
            The file system directory containing application data for all users. A typical path is C:\Documents and Settings\All Users\Application Data.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonDesktopDirectory">
            <summary>
            The file system directory that contains files and folders that appear on the desktop for all users. A typical path is C:\Documents and Settings\All Users\Desktop. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonDocuments">
            <summary>
            The file system directory that contains documents that are common to all users. A typical paths is C:\Documents and Settings\All Users\Documents. Valid for Windows NT systems and Microsoft Windows 95 and Windows 98 systems with Shfolder.dll installed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonFavorites">
            <summary>
            The file system directory that serves as a common repository for favorite items common to all users. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonMusic">
            <summary>
            The file system directory that serves as a repository for music files common to all users. A typical path is C:\Documents and Settings\All Users\Documents\My Music.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonPictures">
            <summary>
            The file system directory that serves as a repository for image files common to all users. A typical path is C:\Documents and Settings\All Users\Documents\My Pictures.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonPrograms">
            <summary>
            The file system directory that contains the directories for the common program groups that appear on the Start menu for all users. A typical path is C:\Documents and Settings\All Users\Start Menu\Programs. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonStartmenu">
            <summary>
            The file system directory that contains the programs and folders that appear on the Start menu for all users. A typical path is C:\Documents and Settings\All Users\Start Menu. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonStartup">
            <summary>
            The file system directory that contains the programs that appear in the Startup folder for all users. A typical path is C:\Documents and Settings\All Users\Start Menu\Programs\Startup. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonTemplates">
            <summary>
            The file system directory that contains the templates that are available to all users. A typical path is C:\Documents and Settings\All Users\Templates. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonVideo">
            <summary>
            The file system directory that serves as a repository for video files common to all users. A typical path is C:\Documents and Settings\All Users\Documents\My Videos.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ComputersNearMe">
            <summary>
            The folder representing other computers in your workgroup.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Connections">
            <summary>
            The virtual folder representing Network Connections, containing network and dial-up connections.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Contacts">
            <summary>
            The virtual folder containing the users contacts.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Controls">
            <summary>
            The virtual folder containing icons for the Control Panel applications.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Cookies">
            <summary>
            The file system directory that serves as a common repository for Internet cookies. A typical path is C:\Documents and Settings\username\Cookies.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Desktop">
            <summary>
            The virtual folder representing the Windows desktop, the root of the namespace.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.DesktopDirectory">
            <summary>
            The file system directory used to physically store file objects on the desktop (not to be confused with the desktop folder itself). A typical path is C:\Documents and Settings\username\Desktop.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Documents">
            <summary>
            The users documents folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.DocumentsLibrary">
            <summary>
            The documents library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Downloads">
            <summary>
            The downloads folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Drives">
            <summary>
            The virtual folder representing My Computer, containing everything on the local computer: storage devices, printers, and Control Panel. The folder may also contain mapped network drives.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Favorites">
            <summary>
            The file system directory that serves as a common repository for the user's favorite items. A typical path is C:\Documents and Settings\username\Favorites.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Fonts">
            <summary>
            A virtual folder containing fonts. A typical path is C:\Windows\Fonts.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Games">
            <summary>
            The games folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.History">
            <summary>
            The file system directory that serves as a common repository for Internet history items.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Homegroup">
            <summary>
            The home group, only on Windows 7 and later.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Internet">
            <summary>
            A virtual folder for Internet Explorer (icon on desktop).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.InternetCache">
            <summary>
            The file system directory that serves as a common repository for temporary Internet files. A typical path is C:\Documents and Settings\username\Local Settings\Temporary Internet Files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Libraries">
            <summary>
            The libraries folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Links">
            <summary>
            The folder %USERPROFILE%\Links.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.LocalAppData">
            <summary>
            The file system directory that serves as a data repository for local (nonroaming) applications. A typical path is C:\Documents and Settings\username\Local Settings\Application Data.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.LocalAppDataLow">
            <summary>
            The LocalLow folder of the users appdata - %USERPROFILE%\AppData\LocalLow. 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MusicLibrary">
            <summary>
            The music library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MyMusic">
            <summary>
            The file system directory that serves as a common repository for music files. A typical path is C:\Documents and Settings\User\My Documents\My Music.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MyPictures">
            <summary>
            The file system directory that serves as a common repository for image files. A typical path is C:\Documents and Settings\username\My Documents\My Pictures.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MyVideo">
            <summary>
            The file system directory that serves as a common repository for video files. A typical path is C:\Documents and Settings\username\My Documents\My Videos.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Nethood">
            <summary>
            A file system directory containing the link objects that may exist in the My Network Places virtual folder. It is not the same as CSIDL_NETWORK, which represents the network namespace root. A typical path is C:\Documents and Settings\username\NetHood.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Network">
            <summary>
            A virtual folder representing Network Neighborhood, the root of the network namespace hierarchy.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Personal">
            <summary>
            The file system directory used to physically store a user's common repository of documents. A typical path is C:\Documents and Settings\username\My Documents. This should be distinguished from the virtual My Documents folder in the namespace.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.PicturesLibrary">
            <summary>
            The pictures library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Printers">
            <summary>
            The virtual folder containing installed printers.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Printhood">
            <summary>
            The file system directory that contains the link objects that can exist in the Printers virtual folder. A typical path is C:\Documents and Settings\username\PrintHood.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Profile">
            <summary>
            The user's profile folder. A typical path is C:\Documents and Settings\username. Applications should not create files or folders at this level; they should put their data under the locations referred to by <see cref="F:Jam.Shell.ShellFolder.AppData"/> or <see cref="F:Jam.Shell.ShellFolder.LocalAppData"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFiles">
            <summary>
            The Program Files folder. A typical path is C:\Program Files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesCommon">
            <summary>
            A folder for components that are shared across applications. A typical path is C:\Program Files\Common. Valid only for Windows NT, Windows 2000, and Windows XP systems. Not valid for Windows Millennium Edition (Windows Me).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesCommonX64">
            <summary>
            This value is not supported on 32-bit operating systems. It also is not supported for 32-bit applications running on 64-bit operating systems. Attempting to use it in either situation results in an error.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesCommonX86">
            <summary>
            A folder for components that are shared across applications. A typical path is C:\Program Files\Common. Valid only for Windows NT, Windows 2000, and Windows XP systems. Not valid for Windows Millennium Edition (Windows Me).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesX64">
            <summary>
            This value is not supported on 32-bit operating systems. It also is not supported for 32-bit applications running on 64-bit operating systems. Attempting to use it in either situation results in an error.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesX86">
            <summary>
            The Program Files folder. A typical path is C:\Program Files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Programs">
            <summary>
            The file system directory that contains the user's program groups (which are themselves file system directories). A typical path is C:\Documents and Settings\username\Start Menu\Programs. 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Public">
            <summary>
            The %PUBLIC% folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.PublicDownloads">
            <summary>
            The public downloads folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.PublicLibraries">
            <summary>
            The public libraries folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.QuickLaunch">
            <summary>
            The folder containing the quicklaunch links.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Recent">
            <summary>
            The file system directory that contains shortcuts to the user's most recently used documents. A typical path is C:\Documents and Settings\username\My Recent Documents.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Resources">
            <summary>
            Windows Vista. The file system directory that contains resource data. A typical path is C:\Windows\Resources.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SavedGames">
            <summary>
            The folder containing the savegames.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SavedSearches">
            <summary>
            The folder containing saved searches.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SendTo">
            <summary>
            The file system directory that contains Send To menu items. A typical path is C:\Documents and Settings\username\SendTo.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Startmenu">
            <summary>
            The file system directory containing Start menu items. A typical path is C:\Documents and Settings\username\Start Menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Startup">
            <summary>
            The file system directory that corresponds to the user's Startup program group. The system starts these programs whenever any user logs onto Windows NT or starts Windows 95. A typical path is C:\Documents and Settings\username\Start Menu\Programs\Startup.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.System">
            <summary>
            The Windows System folder. A typical path is C:\Windows\System32.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SystemX86">
            <summary>
            The Windows System folder. A typical path is C:\Windows\System32.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Templates">
            <summary>
            The file system directory that serves as a common repository for document templates. A typical path is C:\Documents and Settings\username\Templates.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.UserProfiles">
            <summary>
            The folder containing the users profiles.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.UsersFiles">
            <summary>
            The folder containing the users files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.VideosLibrary">
            <summary>
            The videos library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Windows">
            <summary>
            The Windows directory or SYSROOT. This corresponds to the %windir% or %SYSTEMROOT% environment variables. A typical path is C:\Windows.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.FileSystemFolder">
            <summary>
            A file system folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Invalid">
            <summary>
            Invalid special folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Unknown">
            <summary>
            Unknown special folder.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellAutoComplete">
            <summary>
            The autocompletion mode the PathEdit and ComboBox control are using. These are flags, that can be or'ed together. 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAutoComplete.Disabled">
            <summary>
            No shell auto completion. Simple DropDown behavior.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAutoComplete.FileSystem">
            <summary>
            Shell auto completion of filesystem items that are proposed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAutoComplete.Url">
            <summary>
            Shell auto completion of url *and* UNC-path items which where cached by the system.
            </summary>
        </member>
        <member name="T:Jam.Shell.FolderFlags">
            <summary>
            The folder flags are used to specify how the control displays its content.
            Most of these flags can be or'ed together.
            http://msdn.microsoft.com/en-us/library/bb762508(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.None">
            <summary> 0x00000000. Windows 7 and later. No special view options. </summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AutoArrange">
            <summary>Automatically arrange the elements in the view. This implies LVS_AUTOARRANGE if the list view control is used to implement the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AbbreviatedNames">
            <summary>Abbreviate names. This flag is not currently supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SnapToGrid">
            <summary>Arrange items on a grid. This flag is not currently supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.OwnerData">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.BestFitWindow">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.Desktop">
            <summary>Enable the best-fit window mode. Let the view size the window so that its contents fit inside the view window in the best possible manner.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SingleSelection">
            <summary>Do not allow more than a single item to be selected. This is used in the common dialog boxes.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoSubFolders">
            <summary>Do not show subfolders.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.Transparent">
            <summary>Draw transparently. This is used only for the desktop.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoClientEdge">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoScroll">
            <summary>Do not add scroll bars. This is used only for the desktop.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AlignLeft">
            <summary>The view should be left-aligned. This implies LVS_ALIGNLEFT if the list view control is used to implement the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoIcons">
            <summary>The view should not display icons.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.ShowSelectionAlways">
            <summary>Always show the selection.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoVisible">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SingleClickActivate">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoWebView">
            <summary>The view should not be shown as a Web view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.HideFilenames">
            <summary>The view should not display file names.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.CheckSelect">
            <summary>Turns on the check mode for the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoEnumRefresh">
            <summary>Windows Vista and later: Do not re-enumerate the view (or drop the current contents of the view) when the view is refreshed.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoGrouping">
            <summary>Windows Vista and later: Do not allow grouping in the view</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.FullRowSelect">
            <summary>Windows Vista and later: When an item is selected, the item and all its sub-items are highlighted.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoFilters">
            <summary>Windows Vista and later: Do not display filters in the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoColumnHeader">
            <summary>Windows Vista and later: Do not display a column header in the view in any view mode.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoHeaderInAllViews">
            <summary>Windows Vista and later: Only show the column header in details view mode.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.ExtendedTiles">
            <summary>Windows Vista and later: When the view is in "tile view mode" the layout of a single item should be extended to the width of the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.TriCheckSelect">
            <summary>Windows Vista and later: Check boxes have 3 modes: unchecked, SVSI_CHECK, SVSI_CHECK2.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AutoCheckSelect">
            <summary>Windows Vista and later: Items can be selected using checkboxes.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoBrowserViewState">
            <summary>Windows Vista and later: The view should not save view state in the browser.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SubsetGrouops">
            <summary>Windows Vista and later: The view should list the number of items displayed in each group. To be used with IFolderView2::SetGroupSubsetCount.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.UseSearchFolder">
            <summary>Windows Vista and later: Use the search folder for stacking and searching.</summary>
        </member>
        <member name="T:Jam.Shell.LibraryFolderFilter">
            <summary>
            Defines options for filtering folder items.
            </summary>
        </member>
        <member name="F:Jam.Shell.LibraryFolderFilter.LFF_FORCEFILESYSTEM">
            <summary>
            Return only file system items.
            </summary>
        </member>
        <member name="F:Jam.Shell.LibraryFolderFilter.LFF_STORAGEITEMS">
            <summary>
            Return items that can be bound to an IStorage object. 
            </summary>
        </member>
        <member name="F:Jam.Shell.LibraryFolderFilter.LFF_ALLITEMS">
            <summary>
            Return all items. 
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_READ">
            <summary>
            Indicates that the object is read-only, meaning that modifications cannot be made. 
            For example, if a stream object is opened with STGM_READ, the ISequentialStream::Read method 
                may be called, but the ISequentialStream::Write method may not. 
            Similarly, if a storage object opened with STGM_READ, the IStorage::OpenStream and 
                IStorage::OpenStorage methods may be called, but the IStorage::CreateStream and 
                IStorage::CreateStorage methods may not.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_WRITE">
            <summary>
            Enables you to save changes to the object, but does not permit access to its data. 
            The provided implementations of the IPropertyStorage and IPropertySetStorage interfaces 
                do not support this write-only mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_READWRITE">
            <summary>
            Enables access and modification of object data. 
            For example, if a stream object is created or opened in this mode, it is possible 
                to call both IStream::Read and IStream::Write. 
            Be aware that this constant is not a simple binary OR operation of the STGM_WRITE and 
                STGM_READ elements.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_DENY_NONE">
            <summary>
            Specifies that subsequent openings of the object are not denied read or write access. 
            If no flag from the sharing group is specified, this flag is assumed.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_DENY_READ">
            <summary>
            Prevents others from subsequently opening the object in STGM_READ mode. 
            It is typically used on a root storage object.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_DENY_WRITE">
            <summary>
            Prevents others from subsequently opening the object for STGM_WRITE or STGM_READWRITE access. 
            In transacted mode, sharing of STGM_SHARE_DENY_WRITE or STGM_SHARE_EXCLUSIVE can 
                significantly improve performance because they do not require snapshots. 
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_EXCLUSIVE">
            <summary>
            Prevents others from subsequently opening the object in any mode. 
            Be aware that this value is not a simple bitwise OR operation of the STGM_SHARE_DENY_READ 
                and STGM_SHARE_DENY_WRITE values. 
            In transacted mode, sharing of STGM_SHARE_DENY_WRITE or STGM_SHARE_EXCLUSIVE can 
                significantly improve performance because they do not require snapshots.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_PRIORITY">
            <summary>
            Opens the storage object with exclusive access to the most recently committed version. 
            Thus, other users cannot commit changes to the object while you have it open in priority mode. 
            You gain performance benefits for copy operations, but you prevent others from committing changes. 
            Limit the time that objects are open in priority mode. 
            You must specify STGM_DIRECT and STGM_READ with priority mode, and you 
                cannot specify STGM_DELETEONRELEASE. 
            STGM_DELETEONRELEASE is only valid when creating a root object, such as with StgCreateStorageEx. 
            It is not valid when opening an existing root object, such as with StgOpenStorageEx. 
            It is also not valid when creating or opening a subelement, such as with IStorage::OpenStorage.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_CREATE">
            <summary>
            Indicates that an existing storage object or stream should be removed before the new object replaces it. 
            A new object is created when this flag is specified only if the existing object has been successfully removed.
            This flag is used when attempting to create:
            <para>
                A storage object on a disk, but a file of that name exists. 
                An object inside a storage object, but a object with the specified name exists. 
                A byte array object, but one with the specified name exists. 
            </para>
            This flag cannot be used with open operations, such as StgOpenStorageEx or IStorage::OpenStream.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_CONVERT">
            <summary>
            Creates the new object while preserving existing data in a stream named "Contents". In the case of a storage object or a byte array, the old data is formatted into a stream regardless of whether the existing file or byte array currently contains a layered storage object. This flag can only be used when creating a root storage object. It cannot be used within a storage object; for example, in IStorage::CreateStream. It is also not valid to use this flag and the STGM_DELETEONRELEASE flag simultaneously.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_FAILIFTHERE">
            <summary>
            Causes the create operation to fail if an existing object with the specified name exists. In this case, STG_E_FILEALREADYEXISTS is returned. This is the default creation mode; that is, if no other create flag is specified, STGM_FAILIFTHERE is implied.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_DIRECT">
            <summary>
            Indicates that, in direct mode, each change to a storage or stream element is written as it occurs. This is the default if neither STGM_DIRECT nor STGM_TRANSACTED is specified.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_TRANSACTED">
            <summary>
            Indicates that, in transacted mode, changes are buffered and written only if an explicit commit operation is called. To ignore the changes, call the Revert method in the IStream, IStorage, or IPropertyStorage interface. The COM compound file implementation of IStorage does not support transacted streams, which means that streams can be opened only in direct mode, and you cannot revert changes to them, however transacted storages are supported. The compound file, stand-alone, and NTFS file system implementations of IPropertySetStorage similarly do not support transacted, simple property sets because these property sets are stored in streams. However, transactioning of nonsimple property sets, which can be created by specifying the PROPSETFLAG_NONSIMPLE flag in the grfFlags parameter of IPropertySetStorage::Create, are supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_NOSCRATCH">
            <summary>
            Indicates that, in transacted mode, a temporary scratch file is usually used to save modifications until the Commit method is called. Specifying STGM_NOSCRATCH permits the unused portion of the original file to be used as work space instead of creating a new file for that purpose. This does not affect the data in the original file, and in certain cases can result in improved performance. It is not valid to specify this flag without also specifying STGM_TRANSACTED, and this flag may only be used in a root open. For more information about NoScratch mode, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_NOSNAPSHOT">
            <summary>
            This flag is used when opening a storage object with STGM_TRANSACTED and without STGM_SHARE_EXCLUSIVE or STGM_SHARE_DENY_WRITE. In this case, specifying STGM_NOSNAPSHOT prevents the system-provided implementation from creating a snapshot copy of the file. Instead, changes to the file are written to the end of the file. Unused space is not reclaimed unless consolidation is performed during the commit, and there is only one current writer on the file. When the file is opened in no snapshot mode, another open operation cannot be performed without specifying STGM_NOSNAPSHOT. This flag may only be used in a root open operation. For more information about NoSnapshot mode, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SIMPLE">
            <summary>
            Provides a faster implementation of a compound file in a limited, but frequently used, case. For more information, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_DIRECT_SWMR">
            <summary>
            Supports direct mode for single-writer, multireader file operations. For more information, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_DELETEONRELEASE">
            <summary>
            Indicates that the underlying file is to be automatically destroyed when the root storage object is released. This feature is most useful for creating temporary files. This flag can only be used when creating a root object, such as with StgCreateStorageEx. It is not valid when opening a root object, such as with StgOpenStorageEx, or when creating or opening a subelement, such as with IStorage::CreateStream. It is also not valid to use this flag and the STGM_CONVERT flag simultaneously.
            </summary>
        </member>
        <member name="T:Jam.Shell.WTS_ALPHATYPE">
            <summary>
            Indicates whether a bitmap has an alpha channel.
            </summary>
        </member>
        <member name="F:Jam.Shell.WTS_ALPHATYPE.WTSAT_UNKNOWN">
            <summary>
            The bitmap is an unknown format. The Shell tries nonetheless to detect whether the image has an alpha channel.
            </summary>
        </member>
        <member name="F:Jam.Shell.WTS_ALPHATYPE.WTSAT_RGB">
            <summary>
            The bitmap is an RGB image without alpha. The alpha channel is invalid and the Shell ignores it.
            </summary>
        </member>
        <member name="F:Jam.Shell.WTS_ALPHATYPE.WTSAT_ARGB">
            <summary>
            The bitmap is an ARGB image with a valid alpha channel.
            </summary>
        </member>
        <member name="T:Jam.Shell.IconSize">
            <summary>
            Default Windows Icon sizes for the different ViewModes.
            </summary>
            <remarks>No official collection</remarks>
        </member>
        <member name="F:Jam.Shell.IconSize.Small">
            <summary>
            Default size for FolderViewMode.SmallIcon
            </summary>
        </member>
        <member name="F:Jam.Shell.IconSize.Medium">
            <summary>
            Default size for FolderViewMode.Icon
            </summary>
        </member>
        <member name="F:Jam.Shell.IconSize.Thumbnail">
            <summary>
            Default size for FolderViewMode.Thumbnail
            </summary>
        </member>
        <member name="F:Jam.Shell.IconSize.Jumbo">
            <summary>
            Default size for Extralarge Icons
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellFolder2.GetDetailsEx(System.IntPtr,Jam.Shell.SHCOLUMNID@,System.Object@)">
            <summary>
            Gets detailed information, identified by a property set identifier (FMTID) and a property identifier (PID), on an item in a Shell folder.
            </summary>
            <param name="pidl">A PIDL of the item, relative to the parent folder. This method accepts only single-level PIDLs. 
            The structure must contain exactly one SHITEMID structure followed by a terminating zero. This value cannot be NULL.</param>
            <param name="pscid">A pointer to an SHCOLUMNID structure that identifies the column.</param>
            <param name="pv">A pointer to a VARIANT with the requested information. The value is fully typed. 
            The value returned for properties from the property system must conform to the type specified in that property definition's typeInfo  as the legacyType attribute.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT  error code.</returns>
        </member>
        <member name="T:Jam.Shell.IShellItemNative">
            <summary>
            The IShellItem interface of the win32 com object,
            since we already define a <see cref="T:Jam.Shell.IShellItem"/> interface,
            this one is called IShellItemNative.
            This interface is available in Windows XP and later.
            </summary>
        </member>
        <member name="T:Jam.Shell.IThumbnailHandlerFactory">
            <summary>
            QueryInterface on IShellFolder, ie. cast it.
            </summary>
        </member>
        <member name="M:Jam.Shell.IThumbnailHandlerFactory.GetThumbnailHandler(System.IntPtr,System.IntPtr,System.Guid@,System.Object@)">
            <summary>
            Create a thumbnail handler
            </summary>
            <param name="pidlChild">relative itemidlist</param>
            <param name="iBindCtx">http://msdn.microsoft.com/en-us/library/ms678542(VS.85).aspx</param>
            <param name="riid">IID_IThumbnailProvider or IID_IExtractImage</param>
            <param name="ppv">Instance of a COM object</param>
            <returns>hresult</returns>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetPath(System.Text.StringBuilder,System.Int32,System.IntPtr,System.Int32)">
            <summary>Retrieves the path and file name of a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetIDList(System.IntPtr@)">
            <summary>Retrieves the list of item identifiers for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetIDList(System.IntPtr)">
            <summary>Sets the pointer to an item identifier list (PIDL) for a Shell link object.</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetDescription(System.Text.StringBuilder,System.Int32)">
            <summary>Retrieves the description string for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetDescription(System.String)">
            <summary>Sets the description for a Shell link object. The description can be any application-defined string</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetWorkingDirectory(System.Text.StringBuilder,System.Int32)">
            <summary>Retrieves the name of the working directory for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetWorkingDirectory(System.String)">
            <summary>Sets the name of the working directory for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetArguments(System.Text.StringBuilder,System.Int32)">
            <summary>Retrieves the command-line arguments associated with a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetArguments(System.String)">
            <summary>Sets the command-line arguments for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetHotkey(System.Int16@)">
            <summary>Retrieves the hot key for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetHotkey(System.Int16)">
            <summary>Sets a hot key for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetShowCmd(System.Int32@)">
            <summary>Retrieves the show command for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetShowCmd(System.Int32)">
            <summary>Sets the show command for a Shell link object. The show command sets the initial show state of the window.</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetIconLocation(System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Retrieves the location (path and index) of the icon for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetIconLocation(System.String,System.Int32)">
            <summary>Sets the location (path and index) of the icon for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetRelativePath(System.String,System.Int32)">
            <summary>Sets the relative path to the Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.Resolve(System.IntPtr,System.Int32)">
            <summary>Attempts to find the target of a Shell link, even if it has been moved or renamed</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetPath(System.String)">
            <summary>Sets the path and file name of a Shell link object</summary>
        </member>
        <member name="T:Jam.Shell.IOleDropTarget">
            <summary>
            The IDropTarget com interface
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellApi">
            <summary>
            static helper class for accessing Windows API and Shell API stuff
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.m_KnownFolders">
            <summary>
            Dictionary that maps ShellFolder --> Guid
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.FindChildWindow(System.IntPtr,System.IntPtr,System.String,System.String)">
            <summary>Searches for the first child window. </summary>
            <param name="hwndParent">The parent window's handle. </param>
            <param name="hwndChildAfter">The child after. Not used. </param>
            <param name="lpszClass">The class to find</param>
            <param name="lpszTitle">The title to find. </param>
            <returns>The found child window, IntPtr.Zero if not found. </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetClassNameOfWindow(System.IntPtr)">
            <summary>Gets the class name of window. </summary>
            <param name="hwnd">The window handle. </param>
            <returns>The class name of the window. </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.INDEXTOOVERLAYMASK(System.Int32)">
            <summary>
            Converts the given index to the corresponding overlay mask.
            </summary>
            <param name="Index">The overlay image index.</param>
            <returns>The corresponding overlay mask.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.Succeeded(System.Int32)">
            <summary>
            Returns True if the HResult indicates a success.
            </summary>
            <param name="Hresult">The HResult that is to be checked.</param>
            <returns>True if the HResult indicates a success, false otherwise. </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.Failed(System.Int32)">
            <summary>
            Returns True if the HResult indicates an error.
            </summary>
            <param name="Hresult">The HResult that is to be checked.</param>
            <returns>True if the HResult indicates an error, false otherwise. </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetErrorMessageText(System.Int32)">
            <summary>
            Returns the error message for a given error ID.
            </summary>
            <param name="ID">The error ID.</param>
            <returns>Returns the error message for a given error ID.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetShell32ResourceString(Jam.Shell.RES_ID_SHELL32)">
            <summary>
            Gets a string by its resource-id from the shell32.dll
            </summary>
            <param name="p_ResourceID">The resource id of the string to be fetched.</param>
            <returns>The resource string, or null if the ResourceId could not be found in the library.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.CreateShellShortcut(System.String,System.String)">
            <summary>
            Creates a new shortcut for the given target path.
            </summary>
            <param name="pTargetPath">The target path.</param>
            <param name="pDestinationFileName">The destination file name for the shortcut.</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.CreateShellShortcut(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a new shortcut for the given target path.
            </summary>
            <param name="pTarget">The target path.</param>
            <param name="pDestinationFileName">The destination file name for the shortcut.</param>
            <param name="pArguments">Possible arguments that are used when executing the link.</param>
            <param name="pShowCmd">The show command</param>
            <param name="pDescription">The description.</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetLinkTarget(System.String)">
            <summary>
            Gets the link target.
            </summary>
            <param name="aPath">A path to a link.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetFileNamesFromIDataObjectW(System.Windows.Forms.IDataObject)">
            <summary>
            Retrieves the filenames from the given IDataObject (Unicode)
            </summary>
            <param name="p_IDataObject">IDataObject from Drag+Drop</param>
            <returns>Returns the filenames from the IDataObject. 
            Returns null if no filenames could be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetFileNamesFromIDataObjectA(System.Windows.Forms.IDataObject)">
            <summary>
            Retrieves the filenames from the given IDataObject (Ansi)
            </summary>
            <param name="p_IDataObject">IDataObject from Drag+Drop</param>
            <returns>Returns the filenames from the IDataObject. 
            Returns null if no filenames could be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.EnableAutoComplete(System.Windows.Forms.TextBox,System.Boolean,System.Boolean)">
            <summary>
            Enables the AutoComplete mode of a TextBox component.
            </summary>
            <param name="p_TextBox">The TextBox control to enable the autocomplete mode for.</param>
            <param name="p_FileSystem">If true the filesystem autocompletion is enabled.</param>
            <param name="p_URL">If true the url autocompletion is enabled.</param>
            <returns>True, if auto completion was successfully enabled.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.PerformScroll(System.Windows.Forms.Control,System.Windows.Forms.AnchorStyles)">
            <summary>
            Performs a scroll on the given control.
            </summary>
            <param name="ControlToScroll">The control where the scroll should be performed.</param>
            <param name="Border">Specifies where to scroll.</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.CheckAutoScroll(System.Windows.Forms.Control,System.Drawing.Point,System.Int32)">
            <summary>
            Checks if an auro scroll should be performed.
            If the mouse coursor is near the border of the control's cleint area, then a scroll operation will be performed in the appropriate direction.
            </summary>
            <param name="p_ControlToScroll">The control for that should be checked, if an auto scroll should be performed.</param>
            <param name="p_Point">The position of the mouse cursor inside the control, relative to the control.</param>
            <param name="p_DelayMilliSeconds">The delay in milliseconds between two autoscroll operations.</param>
            <returns>true if a scroll has been performed, false otherwise</returns>
            <remarks>
            This function can be useful during drag&amp;drop operations in scrollable controls.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellApi.CreateShortcutShowDialog(System.String)">
            <summary>
            Displays the 'Create Shortcut' Dialog.
            </summary>
            <param name="p_ShortcutPath">The path the shortcut should be created in</param>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.  
            -or- path specified a file that is read-only.</exception>
            <exception cref="T:System.ArgumentException">
            path is a zero-length string, contains only white space, or contains one
            or more invalid characters as defined by System.IO.Path.InvalidPathChars.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            path is null.
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
            The specified path, file name, or both exceed the system-defined maximum
            length. For example, on Windows-based platforms, paths must be less than
            248 characters, and file names must be less than 260 characters.
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
            The specified path is invalid (for example, it is on an unmapped drive).
            </exception>
              <exception cref="T:System.IO.IOException">An I/O error occurred while creating the file.</exception>
              <exception cref="T:System.NotSupportedException"></exception>
              <exception cref="T:System.IO.PathTooLongException">If the path has more than 255 characters, this exception is thrown.</exception>
        </member>
        <member name="M:Jam.Shell.ShellApi.PidlFromShellItem(Jam.Shell.IShellItemNative)">
            <summary>
            Returns the Pidl of a IShellItem object.
            </summary>
            <param name="nativeShellItem">A IShellItem object</param>
            <returns>The Pidl or IntPtr.Zero if the method failed.</returns>
        </member>
        <member name="P:Jam.Shell.ShellApi.KnownFolders">
            <summary>
            Dictionary that maps a ShellFolder to a Guid - taken from <see>http://msdn.microsoft.com/en-us/library/dd378457%28v=VS.85%29.aspx</see>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellApi.Desktop">
            <summary>
            Get the shellfolder interface of the desktop
            </summary>
            <remarks>IMPORTANT: Make sure not to call Marshal.ReleaseComObject on this! 
            Otherwise there will be exceptions ("disconnected from underlying RCW") when this object gets accessed again.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.SHGetImageList(System.Int32,System.Guid@,Jam.Shell.Com.IImageList@)">
            <summary>
            SHGetImageList is not exported correctly in XP.  See KB316931
            http://support.microsoft.com/default.aspx?scid=kb;EN-US;Q316931
            Apparently (and hopefully) ordinal 727 isn't going to change.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.SHGetImageListHandle(System.Int32,System.Guid@,System.IntPtr@)">
            <summary>
            - although in theory you can retrieve the handle from the IUnknown interface of IImageList directly, I found that the returned value was off by 4 bytes.
            see http://www.vbaccelerator.com/home/net/code/libraries/Shell_Projects/SysImageList/article.asp
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.GetDiskFreeSpaceEx(System.String,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            http://www.pinvoke.net/default.aspx/kernel32/GetDiskFreeSpaceEx.html
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.StrFormatByteSize(System.Int64,System.String,System.Int32)">
            <summary>
            http://www.pinvoke.net/default.aspx/shlwapi/StrFormatByteSize.html
            </summary>
            <param name="qdw"></param>
            <param name="pwszBuf"></param>
            <param name="cchBufref"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.FormatByteSize(System.Int64,System.Boolean)">
            <summary>
            Formats a size value to human readable format by using the StrFormatByteSize API call
            </summary>
            <param name="value">The value to format as a string</param>
            <param name="kbOnly">True, if the string should show kilobytes instead of bytes.</param>
            <returns>the transformed string</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PathMatchSpec(System.String,System.String)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb773727(VS.85).aspx
            </summary>
            <param name="pszFileParam"></param>
            <param name="pszSpec"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.CreateDirectory(System.String)">
            <summary>
            Creates a directory
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.CreateShortcut(System.String,System.String,System.UInt32)">
            <summary>
            Creates a shortcut
            </summary>
            <param name="p_shortcutName">Name of the shortcut</param>
            <param name="p_target">Fullpath of the target</param>
            <param name="p_type">Shortcut type - 0x0 for file, 0x1 for folder</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.GetLongPathName(System.String,System.Text.StringBuilder,System.UInt32)">
            <summary>
            The GetLongPathName API call is only available on Windows 98/ME and Windows 2000/XP. 
            It is not available on Windows 95 &amp; NT.
            The file must exist to get the correct path. This is because the full path comes 
            from the file system information. If an invalid name is given and exception is not 
            thrown rather the name is just a blank space.
            </summary>
            <param name="lpszShortPath"></param>
            <param name="lpszLongPath"></param>
            <param name="cchBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.StrCmpLogicalW(System.String,System.String)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb759947%28VS.85%29.aspx
            http://www.pinvoke.net/default.aspx/shlwapi/StrCmpLogicalW.html
            <remarks>
            for some reason, Vista Explorer appears to use a different sorting algoritm. 
            The result is similar, but non-alphanumeric characters such as parentheses are ordered differently.
            </remarks>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.ImageList_DrawEx(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an image list item in the specified device context.
            </summary>
            <param name="himl">Handle to the image list.</param>
            <param name="i">Index of the image to draw.</param>
            <param name="hdcDst">Handle to the destination device context.</param>
            <param name="x">X-coordinate at which to draw within the specified device context.</param>
            <param name="y">Y-coordinate at which to draw within the specified device context.</param>
            <param name="dx">Width of the portion of the image to draw relative to the upper-left corner of the image. If dx and dy are zero, the function draws the entire  image. The function does not ensure that the parameters are valid.</param>
            <param name="dy">Height of the portion of the image to draw, relative to the upper-left corner of the image. If dx and dy are zero, the function draws the entire  image. The function does not ensure that the parameters are valid.</param>
            <param name="rgbBk">Background color of the image.</param>
            <param name="rgbFg">Foreground color of the image.</param>
            <param name="fStyle">Drawing style and, optionally, the overlay image.</param>
            <returns>Returns nonzero if successful, or zero otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.VariantCompare(System.Object@,System.Object@)">
            <summary>
            Compares two variant structures, based on default comparison rules.
            </summary>
            <returns>
            Returns 1 if var1 is greater than var2
            Returns 0 if var1 equals var2
            Returns -1 if var1 is less than var2
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PSGetPropertyDescription(Jam.Shell.SHCOLUMNID@,System.Guid@,Jam.Shell.Com.IPropertyDescription@)">
            <summary>
            Gets an instance of a property description interface for a property specified by a PROPERTYKEY structure.
            </summary>
            <param name="propkey">Reference to a PROPERTYKEY.</param>
            <param name="riid">Reference to the interface ID of the requested interface.</param>
            <param name="ppv">When this function returns, contains the interface pointer requested in riid.</param>
            <returns>Hresult code</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PSGetNameFromPropertyKey(Jam.Shell.SHCOLUMNID@,System.String@)">
            <summary>
            Retrieves the canonical name of the property, given its PROPERTYKEY.
            </summary>
            <param name="propkey">Reference to a PROPERTYKEY structure that identifies the requested property.</param>
            <param name="ppszCanonicalName">When this function returns, contains a pointer to the property name as a null-terminated Unicode string.</param>
            <returns>Hresult code</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PSGetPropertyKeyFromName(System.String,Jam.Shell.SHCOLUMNID@)">
            <summary>
            Gets the property key for a canonical property name.
            </summary>
            <param name="pszCanonicalName">Pointer to a property name as a null-terminated, Unicode string.</param>
            <param name="propkey">When this function returns, contains the requested property key.</param>
            <returns>Hresult code</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.GetDeviceCaps(System.IntPtr,System.Int32)">
            <summary>
            Retrieves device-specific information for the specified device.
            </summary>
            <param name="hDC">A handle to the DC.</param>
            <param name="nIndex">The item to be returned</param>
            <returns>Device-specific information for the specified device.</returns>
            <remarks>See http://msdn.microsoft.com/en-us/library/windows/desktop/dd144877%28v=vs.85%29.aspx </remarks>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system 
            resources associated with the object. After the object is deleted, the specified handle is no longer valid.
            </summary>
            <param name="hObject">A handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>True ff the function succeeds</returns>
        </member>
        <member name="T:Jam.Shell.ShellApi.WM">
            <summary>
            Windows Messages
            Defined in winuser.h from Windows SDK v6.1
            Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen.
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application.
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window.
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed.
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_KEYLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu) or when the user chooses the maximize button, minimize button, restore button, or close button.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TABLET_FIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TABLET_LAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette.
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HANDHELDFIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HANDHELDLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.AFXFIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.AFXLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PENWINFIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PENWINLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HITTEST">
            <summary>
            Determines which list-view item, if any, is at a specified position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETITEMW">
            <summary>
            Retrieves some or all of a list-view item's attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="T:Jam.Shell.ListViewEx">
            <summary>
            Provides extensions to modify the behaviour of windows listviews
            </summary>
        </member>
        <member name="M:Jam.Shell.ListViewEx.SetColumnBitmap(System.Windows.Forms.ListView,System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Set the sort icon among the current sort order in the passed column.
            </summary>
            <param name="listView">The ListView control to get the window handle from.</param>
            <param name="colIndex">Contains the index of the column, where the sort icon should be added.</param>
            <param name="sortOrder">Contains information about the sort order, to get the correct sort icon from the operating system.</param>
        </member>
        <member name="M:Jam.Shell.ListViewEx.SetListViewItemState(System.IntPtr,System.Int32,Jam.Shell.LVIS,Jam.Shell.LVIS)">
            <summary>
            Sets the state of a listview item
            </summary>
            <param name="lvHandle">handle to the listview</param>
            <param name="index">index of the item in the listview</param>
            <param name="stateMask">mask to determine which state is to be set</param>
            <param name="state">the new state that is applied to the listitem</param>
        </member>
        <member name="T:Jam.Shell.RES_ID_SHELL32">
            <summary>
            This enumeration describes resource ids that are used throughout the ShellBrowser project
            in order to access resources from the Shell32.dll
            <see cref="M:Jam.Shell.ShellApi.GetShell32ResourceString(Jam.Shell.RES_ID_SHELL32)"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.UNAVAILABLE_ACCESS">
            <summary>unavailable access</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NAME">
            <summary>The "Name" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.IN_FOLDER">
            <summary>The "In Folder" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NEW_FOLDER">
            <summary>The "New Folder" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NEW_FOLDER_VISTA">
            <summary>The "New Folder" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NEW_SHORTCUT">
            <summary>The "New Shortcut" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CONTROL_PANEL">
            <summary>
            The "control panel" resource </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.ALL_CONTROL_PANEL_ITEMS">
            <summary>The "all control panel elements" resource </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_SELECT_FILE">
            <summary>
            Select a file to preview
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_NO_PREVIEW_AVAILABLE">
            <summary>
            No preview available
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_FILE_IN_USE">
            <summary>
            Preview cannot be shown because file is in use
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_ERROR_IN_XY">
            <summary>
            Preview cannot be shown because of an error in %s
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_NOT_POSSIBLE">
            <summary>
            For this file no preview can be shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_NO_PREVIEW_AT_THIS_LOCATION">
            <summary>
            Files at this location cannot be previewed.
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_PREVIEW">
            <summary>Preview</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_WIN2K">
            <summary>Context menu view on windows 2000</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_THUMBNAIL">
            <summary>Context menu view - thumbnail</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_THUMBNAIL_WIN2K">
            <summary>Context menu view - thumbnail win2k</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_BIG">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_SMALL">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_LIST">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_DETAILS">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_TILES">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_REFRESH">
            <summary>Context menu refresh</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_REFRESH_WIN2K">
            <summary>Context menu refresh on windows 2000</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_INSERT">
            <summary>Context menu insert</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_INSERTASLINK">
            <summary>Context menu insert as link</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_NEW">
            <summary>Context menu new</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_NEWFOLDER">
            <summary>Context menu new folder</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_PROPERTIES">
            <summary>Context menu properties</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_ARRANGEBY_WIN7">
            <summary>Context menu arrange icons by for Win7OrLater</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_ARRANGEBY_XP">
            <summary>Context menu arrange icons by for XP and Vista - workaround for bug #2267. E.g. replace "%s" by String.Empty or "..." like in ShellList.ArrangeIcons.</summary>
        </member>
        <member name="T:Jam.Shell.DeviceCap">
            <summary>
            Flags that can be used for <see cref="M:Jam.Shell.ShellApi.NativeMethods.GetDeviceCaps(System.IntPtr,System.Int32)"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:Jam.Shell.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaControl">
            <summary>
            Control style and notification constants
            </summary>
        </member>
        <member name="M:Jam.Shell.VistaControl.SHCreateItemFromParsingName(System.String,System.IntPtr,System.Guid,Jam.Shell.IShellItemNative@)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762134(VS.85).aspx
            </summary>
            <param name="pszPath"></param>
            <param name="pbc"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
        </member>
        <member name="M:Jam.Shell.VistaControl.SHCreateItemFromIDList(System.IntPtr,System.Guid,Jam.Shell.IShellItemNative@)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762133(VS.85).aspx
            </summary>
            <param name="pidl">item id list</param>
            <param name="riid">Guid of the requested interface.</param>
            <param name="ppv"></param>
        </member>
        <member name="M:Jam.Shell.VistaControl.SetWindowThemeChecked(System.IntPtr,System.String,System.String)">
            <summary>
            This method is only available from xp and later versions
            If the os version is lower, the call to this method is ignored.
            </summary>
            <param name="hWnd"></param>
            <param name="textSubAppName"></param>
            <param name="textSubIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.VistaControl.SendMessage(System.IntPtr,Jam.Shell.VistaConstsTreeView,System.IntPtr,System.IntPtr)">
            <summary>
            Overload for the Treeview Enumeration. 
            </summary>
        </member>
        <member name="M:Jam.Shell.VistaControl.SendMessage(System.IntPtr,Jam.Shell.VistaConstsListView,System.IntPtr,System.IntPtr)">
            <summary>
            Overload for the Listview Enumeration
            </summary>
        </member>
        <member name="M:Jam.Shell.VistaControl.SendMessage(System.IntPtr,Jam.Shell.VistaConstsListView,Jam.Shell.VistaConstsListView,Jam.Shell.VistaConstsListView)">
            <summary>
            Overload for the Listview Enumeration
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsTreeView">
            <summary>
            Constants for the messages that may be send to a treeview
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsListView">
            <summary>
            Constants for the messages that may be send to a listview
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsProgressBar">
            <summary>
            Constants for the messages that may be send to a progressbar
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsButtonStyle">
            <summary>
            Constants for the messages that may be send to button controls
            </summary>
        </member>
        <member name="T:Jam.Shell.WNetGetConnectionResultCodes">
            <summary>
            ResultCodes of the <see cref="M:Jam.Shell.ShellApi.NativeMethods.WNetGetConnection(System.String,System.Text.StringBuilder,System.Int32@)"/> api call.
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.NO_ERROR">
            <summary>
            No error occured.
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_BAD_DEVICE">
            <summary>
            The bad devicename has been passed to the function
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_CONNECTION_UNAVAIL">
            <summary>
            The network connection is unavailable
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_EXTENDED_ERROR">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_MORE_DATA">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NOT_SUPPORTED">
            <summary>
            Feature/Operation not supported
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NO_NET_OR_BAD_PATH">
            <summary>
            Not network available or bad path
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NO_NETWORK">
            <summary>
            No network available
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NOT_CONNECTED">
            <summary>
            System is not connected to the share
            </summary>
        </member>
        <member name="T:Jam.Shell.POINTL">
            <summary>
            The Windows POINTL structure
            </summary>
        </member>
        <member name="F:Jam.Shell.POINTL.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:Jam.Shell.POINTL.Y">
            <summary>
            Y position
            </summary>
        </member>
        <member name="M:Jam.Shell.POINTL.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point structure
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:Jam.Shell.POINT">
            <summary>
            The point structure as it is used in the com-api
            </summary>
        </member>
        <member name="F:Jam.Shell.POINT.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:Jam.Shell.POINT.Y">
            <summary>
            Y position
            </summary>
        </member>
        <member name="M:Jam.Shell.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point structure
            </summary>
            <param name="x">x position of the point</param>
            <param name="y">y position of the point</param>
        </member>
        <member name="M:Jam.Shell.POINT.op_Implicit(Jam.Shell.POINT)~System.Drawing.Point">
            <summary>
            Define implicit cast from POINT to Point
            </summary>
            <param name="p">the cast source</param>
            <returns>new <see cref="T:System.Drawing.Point"/></returns>
        </member>
        <member name="M:Jam.Shell.POINT.op_Implicit(System.Drawing.Point)~Jam.Shell.POINT">
            <summary>
            Define implicit cast from Point to POINT
            </summary>
            <param name="p">the cast source</param>
            <returns>new <see cref="T:Jam.Shell.POINT"/> structure</returns>
        </member>
        <member name="M:Jam.Shell.POINT.op_Equality(Jam.Shell.POINT,Jam.Shell.POINT)">
            <summary>
            Equality operator == for <see cref="T:Jam.Shell.POINT"/> structures
            </summary>
            <param name="a">point a</param><param name="b">point b</param>
            <returns>true if a's and b's coordinates are equal</returns>
        </member>
        <member name="M:Jam.Shell.POINT.op_Inequality(Jam.Shell.POINT,Jam.Shell.POINT)">
            <summary>
            Inequality operator == for <see cref="T:Jam.Shell.POINT"/> structures
            </summary>
            <param name="a">point a</param><param name="b">point b</param>
            <returns>returns true if a's and b's coordinates differ</returns>
        </member>
        <member name="M:Jam.Shell.POINT.Equals(System.Object)">
            <summary>
            Checks for equality.
            Implemented to fulfill the MS-CodeAnalysis Guidelines
            </summary>
            <param name="obj">other object</param>
            <returns>true if obj equals this</returns>
        </member>
        <member name="M:Jam.Shell.POINT.Equals(Jam.Shell.POINT)">
            <summary>
            Checks for equality.
            Implemented to fulfill the MS-CodeAnalysis Guidelines
            </summary>
            <param name="p">other point</param>
            <returns>true if p equals this</returns>
        </member>
        <member name="M:Jam.Shell.POINT.GetHashCode">
            <summary>
            Determine the hashcode for the object
            </summary>
            <returns>a hashcode of the point structure</returns>
        </member>
        <member name="T:Jam.Shell.RECT">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms536136.aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.RECT.left">
            <summary>Specifies the x-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Jam.Shell.RECT.top">
            <summary>Specifies the y-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Jam.Shell.RECT.right">
            <summary>Specifies the x-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="F:Jam.Shell.RECT.bottom">
            <summary>Specifies the y-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="M:Jam.Shell.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Construct a RECT struct from a <see cref="T:System.Drawing.Rectangle"/>
            </summary>
            <param name="x">X position of the rectangle</param>
            <param name="y">Y position of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="T:Jam.Shell.ChangeErrorMode">
            <summary>  Can be used to temporarily change the system error mode for the current process
            Usage: using(new ChangeErrorMode(ErrorModes.FailCriticalErrors)) { ... } </summary>
        </member>
        <member name="M:Jam.Shell.ChangeErrorMode.SafeNativeMethods.SetErrorMode(System.Int32)">
            <summary>
            Controls whether the system will handle the specified types of serious errors or whether the process will handle them.
            </summary>
            <remarks>Process-wide.</remarks>
        </member>
        <member name="T:Jam.Shell.HDITEM">
            <summary>
            Translation of the Win32 struct HFITEM fpr dealing with the header of a ListView.
            </summary>
        </member>
        <member name="T:Jam.Shell.LVITEM">
            <summary>
            translation of the Win32 struct LVITEM for dealing with items in a ListView.
            </summary>
        </member>
        <member name="T:Jam.Shell.TVITEM">
            <summary>
            translation of the Win32 struct TVITEM for dealing with items in a ListView.
            </summary>
        </member>
        <member name="T:Jam.Shell.SHCOLUMNID">
            <summary>
            Specifies the FMTID/PID identifier of a column that will be displayed by the Windows Explorer Details view. 
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnName">
            <summary>
            SHCOLUMNID for the 'Name' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSize">
            <summary>
            SHCOLUMNID for the 'Size' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnInvalid">
            <summary>Represents an invalid TShColumId. This constant is used e.g. for error reporting or hiding columns.</summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnType">
            <summary>
            SHCOLUMNID for the 'Type' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnPerceivedType">
            <summary>
            SHCOLUMNID for the 'Perceived Type' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnWriteTime">
            <summary>
            SHCOLUMNID for the 'Write Time' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAttributes">
            <summary>
            SHCOLUMNID for the 'Attributes' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnCreateTime">
            <summary>
            SHCOLUMNID for the 'Create Time' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAccessTime">
            <summary>
            SHCOLUMNID for 'Access Time' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumeFullCapacity">
            <summary>
            SHCOLUMNID for the 'Full Capacity' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumeFreeSize">
            <summary>
            SHCOLUMNID for the 'Free Size' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumePercentageOccupied">
            <summary>
            SHCOLUMNID for the 'Percentage Occupied' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumeFilesystem">
            <summary>
            SHCOLUMNID for the 'Filesystem' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnParentFolder">
            <summary>
            SHCOLUMNID for 'Folderpath' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnFolderName">
            <summary>
            SHCOLUMNID for 'Folder Name' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnElementType">
            <summary>
            SHCOLUMNID for 'Element Type' column.
            </summary>
            <remarks>see http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx </remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnNetworkAddress">
            <summary>
            SHCOLUMNID for 'Networkaddress' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicAlbum">
            <summary>
            SHCOLUMNID for 'Album' column.
            </summary>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicYear">
            <summary>
            SHCOLUMNID for 'Album' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicGenre">
            <summary>
            SHCOLUMNID for 'Year' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicAlbumArtist">
            <summary>
            SHCOLUMNID for 'Album Artist' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicArtist">
            <summary>
            SHCOLUMNID for 'Artist' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicBeatsPerMinute">
            <summary>
            SHCOLUMNID for 'Beats per minute' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicLyrics">
            <summary>
            SHCOLUMNID for 'Lyrics' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicTitlenumber">
            <summary>
            SHCOLUMNID for 'Titlenumber' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAudioLength">
            <summary>
            SHCOLUMNID for 'Length' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAudioBitrate">
            <summary>
            SHCOLUMNID for 'Bitrate' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryKeywords">
            <summary>
            SHCOLUMNID for 'Keywords' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryAuthors">
            <summary>
            SHCOLUMNID for 'Authors' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryTitle">
            <summary>
            SHCOLUMNID for 'Title' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryComments">
            <summary>
            SHCOLUMNID for 'Comments' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryTopic">
            <summary>
            SHCOLUMNID for 'Topic' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnOwner">
            <summary>
            SHCOLUMNID for 'Owner' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnLinkTarget">
            <summary>
            SHCOLUMNID for 'Link target' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnCategory">
            <summary>
            SHCOLUMNID for the "Category" column in Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnFileDescription">
            <summary>
            SHCOLUMNID for the FileDescription
            </summary>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.#ctor(System.Guid,System.Int32)">
            <summary>
            Constructor for SHCOLUMNID.
            </summary>
            <param name="p_fmtid"></param>
            <param name="p_pid"></param>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.CreateCustomColumnID(System.Int32)">
            <summary>
            Creates a CustomColumnId. The caller is responsible to keep the passed pPid unique.
            </summary>
            <param name="pPid">The pid of the resulting object. The fmtId is a static value identifying a custom column.</param>
            <returns>A SHCOLUMNID consting of a static value as formatID and the passed value for pid.</returns>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.fmtid">
            <summary>
            A property set format identifier or FMTID (a GUID).
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.pid">
            <summary>
            The column's property identifier (PID).
            </summary>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.op_Equality(Jam.Shell.SHCOLUMNID,Jam.Shell.SHCOLUMNID)">
            <summary>
            Equality operator == for <see cref="T:Jam.Shell.SHCOLUMNID"/> structures
            </summary>
            <param name="pShellColumnId1">First <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <param name="pShellColumnId2">Second <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <returns>true, if the passed values are equal, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.op_Inequality(Jam.Shell.SHCOLUMNID,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inequality operator != for <see cref="T:Jam.Shell.SHCOLUMNID"/> structures
            </summary>
            <param name="pShellColumnId1">First <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <param name="pShellColumnId2">Second <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <returns>true, if the passed values are unequal, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.ToString">
            <summary>
            Overrides the ToString() method.
            </summary>
            <returns>A string containing the fmtid and pid of the SHCOLUMNID.</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.IsInvalid">
            <summary>
            Determines whether this instance is invalid, i.e. matches <see cref="F:Jam.Shell.SHCOLUMNID.ShellColumnInvalid"/>
            </summary>
            <returns>true if this instance equals <see cref="F:Jam.Shell.SHCOLUMNID.ShellColumnInvalid"/>, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.IsCustomId">
            <summary>
            Determines whether this instance identifies a custom column.
            </summary>
            <returns>true if this instance identifies a custom column, false otherwise.</returns>
        </member>
        <member name="T:Jam.Shell.SHIL">
            <summary>
            Imagelist size enumeration
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_LARGE">
            <summary>0x0. 
            The image size is normally 32x32 pixels. However, if the Use large icons option is selected 
            from the Effects section of the Appearance tab in Display Properties, the image is 48x48 pixels.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_SMALL">
            <summary>0x1. 
            These images are the Shell standard small icon size of 16x16, but the size can be customized by the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_EXTRALARGE">
            <summary>0x2.
            These images are the Shell standard extra-large icon size. This is typically 48x48, but the size can be customized by the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_SYSSMALL">
            <summary>0x3.
            These images are the size specified by GetSystemMetrics called with SM_CXSMICON and GetSystemMetrics called with SM_CYSMICON.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_JUMBO">
            <summary>0x4.
            Windows Vista and later. The image is normally 256x256 pixels.
            </summary>
        </member>
        <member name="T:Jam.Shell.QITIPF">
            <summary>
            Used in <see cref="M:Jam.Shell.ShellBrowser.GetInfoTip"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.SIIGBF">
            <summary>
            Flags used in <see cref="T:Jam.Shell.IShellItemImageFactory"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.SFGAOF">
            <summary>
            Indicate flags used by IShellFolder2 GetAttributesOf() method to specify the requested attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANCOPY">
            <summary>
            The specified items can be copied.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANMOVE">
            <summary>
            The specified items can be moved.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANLINK">
            <summary>
            Shortcuts can be created for the specified items.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STORAGE">
            <summary>
            The specified items can be bound to an IStorage interface through BindToObject(IID_IStorage)
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANRENAME">
            <summary>
            The specified items can be renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANDELETE">
            <summary>
            The specified items can be deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HASPROPSHEET">
            <summary>
            The specified items have property sheets.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_DROPTARGET">
            <summary>
            The specified items are drop targets.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CAPABILITYMASK">
            <summary>
            This flag is a mask for the capability flags.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_ENCRYPTED">
            <summary>
            The specified items are encrypted.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_ISSLOW">
            <summary>
            Indicates that accessing the object (through IStream or other storage interfaces) is a slow operation. Applications should avoid accessing items flagged with SFGAO_ISSLOW.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_GHOSTED">
            <summary>
            The specified items are ghosted icons.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_LINK">
            <summary>
            The specified items are shortcuts.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_SHARE">
            <summary>
            The specified folder objects are shared.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_READONLY">
            <summary>
            The specified items are read-only. In the case of folders, this means that new items cannot be created in those folders.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HIDDEN">
            <summary>
            The item is hidden and should not be displayed unless the Show hidden files and folders option is enabled in Folder Settings.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_DISPLAYATTRMASK">
            <summary>
            This flag is a mask for the display attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_FILESYSANCESTOR">
            <summary>
            The specified folders contain one or more file system folders.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_FOLDER">
            <summary>
            The specified items are folders. (supports BindToObject(IID_IShellFolder))
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_FILESYSTEM">
            <summary>
            The specified folders or file objects are part of the file system (that is, they are files, directories, or root directories).
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HASSUBFOLDER">
            <summary>
            The specified folders have subfolders (and are, therefore, expandable in the left pane of Windows Explorer).
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_VALIDATE">
            <summary>
            When specified as input, SFGAO_VALIDATE instructs the folder to validate that the items pointed to by the contents of apidl exist.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_REMOVABLE">
            <summary>
            The specified items are on removable media or are themselves removable devices.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_COMPRESSED">
            <summary>
            The specified items are compressed.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_BROWSABLE">
            <summary>
            The specified items can be browsed in place.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_NONENUMERATED">
            <summary>
            The items are nonenumerated items.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_NEWCONTENT">
            <summary>
            The objects contain new content.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANMONIKER">
            <summary>
            It is possible to create monikers for the specified file objects or folders.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HASSTORAGE">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STREAM">
            <summary>        
            Indicates that the item has a stream associated with it that can be accessed by a call to BindToObject(IID_IStream) with IID_IStream in the riid parameter.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STORAGEANCESTOR">
            <summary>
            Children of this item are accessible through IStream or IStorage. Those children are flagged with SFGAO_STORAGE or SFGAO_STREAM.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STORAGECAPMASK">
            <summary>
            This flag is a mask for the storage capability attributes.
            </summary>
        </member>
        <member name="T:Jam.Shell.CSIDL">
            <summary>
            This structure is replaced by the KNOWNFOLDERID constants (http://msdn.microsoft.com/en-us/library/bb762584(VS.85).aspx)
            under vista and later, the csidl is maintained for backwards compatibility
            </summary>
        </member>
        <member name="T:Jam.Shell.GPFIDL_FLAGS">
            <summary>
            SHGetPathFromIDListEx returns a win32 file system path for the item in the name space
            and has a few special cases that include returning UNC printer names too
            </summary>
        </member>
        <member name="F:Jam.Shell.GPFIDL_FLAGS.GPFIDL_DEFAULT">
            <summary>normal Win32 file name, servers and drive roots included</summary>
        </member>
        <member name="F:Jam.Shell.GPFIDL_FLAGS.GPFIDL_ALTNAME">
            <summary>short file name</summary>
        </member>
        <member name="F:Jam.Shell.GPFIDL_FLAGS.GPFIDL_UNCPRINTER">
            <summary>include UNC printer names too (non file system item)</summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.Default">
            <summary>Use the system default, which is to display all error dialog boxes.</summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.FailCriticalErrors">
            <summary>
            The system does not display the critical-error-handler message box. 
            Instead, the system sends the error to the calling process.
            </summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.NoGpFaultErrorBox">
            <summary>
            64-bit Windows:  The system automatically fixes memory alignment faults and makes them 
            invisible to the application. It does this for the calling process and any descendant processes.
            After this value is set for a process, subsequent attempts to clear the value are ignored.
            </summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.NoAlignmentFaultExcept">
            <summary>
            The system does not display the general-protection-fault message box. 
            This flag should only be set by debugging applications that handle general 
            protection (GP) faults themselves with an exception handler.
            </summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.NoOpenFileErrorBox">
            <summary>
            The system does not display a message box when it fails to find a file. 
            Instead, the error is returned to the calling process.
            </summary>
        </member>
        <member name="T:Jam.Shell.FILE_ATTRIBUTES">
            <summary>
            Attribute information for the file or directory.
            </summary>
        </member>
        <member name="F:Jam.Shell.FILE_ATTRIBUTES.FILE_ATTRIBUTE_DIRECTORY">
            <summary>
            Indicates that the handle identifies a directory.
            </summary>
        </member>
        <member name="F:Jam.Shell.FILE_ATTRIBUTES.FILE_ATTRIBUTE_NORMAL">
            <summary>
            Indicates that the file or directory has no other attributes set. This attribute is valid only if used alone.
            </summary>
        </member>
        <member name="T:Jam.Shell.HDIFLAGS">
            <summary>
            Parameters for the Win32 ListView Headers
            </summary>
        </member>
        <member name="T:Jam.Shell.LVHITTESTINFO">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms930138.aspx
            </summary>
        </member>
        <member name="T:Jam.Shell.NMHDR">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb775514(VS.85).aspx
            http://www.pinvoke.net/default.aspx/Structures/NMHDR.html
            </summary>
        </member>
        <member name="T:Jam.Shell.TTN">
            <summary>
            Tooltip messages
            </summary>
        </member>
        <member name="T:Jam.Shell.LVS_EX">
            <summary>
            Extended ListView styles. See http://msdn.microsoft.com/en-us/library/windows/desktop/bb774732%28v=vs.85%29.aspx.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_GRIDLINES">
            <summary>
            Version 4.70. Displays gridlines around items and subitems. This style is available only 
            in conjunction with the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SUBITEMIMAGES">
            <summary>
            Version 4.70. Allows images to be displayed for subitems. This style is available only 
            in conjunction with the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_CHECKBOXES">
            <summary>
            Version 4.70. Enables check boxes for items in a list-view control. When set to this style, 
            the control creates and sets a state image list with two images using DrawFrameControl. 
            State image 1 is the unchecked box, and state image 2 is the checked box. Setting the state 
            image to zero removes the check box. Version 6.00 Check boxes are visible and functional 
            with all list view modes except the tile view mode introduced in ComCtl32.dll version 6. 
            Clicking a checkbox in tile view mode only selects the item; the state does not change.
            You can obtain the state of the check box for a given item with ListView_GetCheckState. 
            To set the check state, use ListView_SetCheckState. If this style is set, the list-view control
            automatically toggles the check state when the user clicks the check box or presses the space bar.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_TRACKSELECT">
            <summary>
            Version 4.70. Enables hot-track selection in a list-view control. Hot track selection means that 
            an item is automatically selected when the cursor remains over the item for a certain period of time. 
            The delay can be changed from the default system setting with a LVM_SETHOVERTIME message. 
            This style applies to all styles of list-view control. You can check whether hot-track selection is 
            enabled by calling SystemParametersInfo.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_HEADERDRAGDROP">
            <summary>
            Version 4.70. Enables drag-and-drop reordering of columns in a list-view control. This style is only 
            available to list-view controls that use the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_FULLROWSELECT">
            <summary>
            Version 4.70. When an item is selected, the item and all its subitems are highlighted. 
            This style is available only in conjunction with the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_ONECLICKACTIVATE">
            <summary>
            Version 4.70. The list-view control sends an LVN_ITEMACTIVATE notification code to the parent window
            when the user clicks an item. This style also enables hot tracking in the list-view control. 
            Hot tracking means that when the cursor moves over an item, it is highlighted but not selected. 
            See the Extended List-View Styles Remarks section for a discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_TWOCLICKACTIVATE">
            <summary>
            Version 4.70. The list-view control sends an LVN_ITEMACTIVATE notification code to the parent window
            when the user double-clicks an item. This style also enables hot tracking in the list-view control. 
            Hot tracking means that when the cursor moves over an item, it is highlighted but not selected. 
            See the Extended List-View Styles Remarks section for a discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_FLATSB">
            <summary>
            Version 4.71. Enables flat scroll bars in the list view. If you need more control over the appearance
            of the list view's scroll bars, you should manipulate the list view's scroll bars directly using the Flat
            Scroll Bar APIs. If the system metrics change, you are responsible for adjusting the scroll bar metrics 
            with FlatSB_SetScrollProp. See Flat Scroll Bars for further details.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_REGIONAL">
            <summary>
            Version 4.71 through Version 5.80 only. Not supported on Windows Vista. Sets the list view window region
            to include only the item icons and text using SetWindowRgn. Any area that is not part of an item is excluded
            from the window region. This style is only available to list-view controls that use the LVS_ICON style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_INFOTIP">
            <summary>
            Version 4.71. When a list-view control uses the LVS_EX_INFOTIP style, the LVN_GETINFOTIP notification code
            is sent to the parent window before displaying an item's tooltip.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_UNDERLINEHOT">
            <summary>
            Version 4.71. Causes those hot items that may be activated to be displayed with underlined text. This style
            requires that LVS_EX_ONECLICKACTIVATE or LVS_EX_TWOCLICKACTIVATE also be set.
            See the Extended List-View Styles Remarks section for a discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_UNDERLINECOLD">
            <summary>
            Version 4.71. Causes those non-hot items that may be activated to be displayed with underlined text. This style
            requires that LVS_EX_TWOCLICKACTIVATE be set also. See the Extended List-View Styles Remarks section for a 
            discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_MULTIWORKAREAS">
            <summary>
            Version 4.71. If the list-view control has the LVS_AUTOARRANGE style, the control will not autoarrange its icons
            until one or more work areas are defined (see LVM_SETWORKAREAS). To be effective, this style must be set before
            any work areas are defined and any items have been added to the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_LABELTIP">
            <summary>
            Version 5.80. If a partially hidden label in any list view mode lacks tooltip text, the list-view control will
            unfold the label. If this style is not set, the list-view control will unfold partly hidden labels only for the 
            large icon mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_BORDERSELECT">
            <summary>
            Version 4.71. Changes border color when an item is selected, instead of highlighting the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_DOUBLEBUFFER">
            <summary>
            Version 6.00. Paints via double-buffering, which reduces flicker. This extended style also enables alpha-blended
            marquee selection on systems where it is supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_HIDELABELS">
            <summary>
            Version 6.00. Hides the labels in icon and small icon view.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SINGLEROW">
            <summary>
            Version 6.00. Not used.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SNAPTOGRID">
            <summary>
            Version 6.00. In icon view, icons automatically snap into a grid.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SIMPLESELECT">
            <summary>
            Version 6.00. In icon view, moves the state image of the control to the top right of the large icon rendering. 
            In views other than icon view there is no change. When the user changes the state by using the space bar, all 
            selected items cycle over, not the item with the focus.
            </summary>
        </member>
        <member name="T:Jam.Shell.LVM">
            <summary>
            Messages for Win32 ListView custom control
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_SETEXTENDEDLISTVIEWSTYLE">
            <summary>
            This message sets extended styles in list-view controls. 
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_GETEXTENDEDLISTVIEWSTYLE">
            <summary>
            This message gets extended styles in list-view controls. 
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_SETCOLUMNORDERARRAY">
            <summary>
            This message sets the column order array.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_GETCOLUMNORDERARRAY">
            <summary>
            This message gets the column order array.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_CANCELEDITLABEL">
            <summary>
            Cancels label-Editing
            </summary>
        </member>
        <member name="T:Jam.Shell.LVN">
            <summary>
            Messages (WM_NOTIFY) for the Win32 ListView custom control
            </summary>
        </member>
        <member name="T:Jam.Shell.LVSIL">
            <summary>
            Possible values for wParam for LVM_SETIMAGELIST message
            </summary>
        </member>
        <member name="T:Jam.Shell.HDM">
            <summary>
            Messages for Win32 header control
            </summary>
        </member>
        <member name="T:Jam.Shell.TVM">
            <summary>
            Messages for Win32 TreeView custom control
            </summary>
        </member>
        <member name="T:Jam.Shell.EM">
            <summary>
            Messages for Win32 Edit Control
            </summary>
        </member>
        <member name="T:Jam.Shell.SHCNF">
            <summary>
            Flags that indicate the meaning of the <i>dwItem1</i> and <i>dwItem2</i> parameters.
            The uFlags parameter must be one of the following values.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_DWORD">
            <summary>
            The <i>dwItem1</i> and <i>dwItem2</i> parameters are DWORD values.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_IDLIST">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of ITEMIDLIST structures that
            represent the item(s) affected by the change.
            Each ITEMIDLIST must be relative to the desktop folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PATHA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PATHW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PRINTERA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PRINTERW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_FLUSH">
            <summary>
            The function should not return until the notification
            has been delivered to all affected components.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_FLUSHNOWAIT">
            <summary>
            The function should begin delivering notifications to all affected components
            but should return as soon as the notification process has begun.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="T:Jam.Shell.CMIC">
            <summary>
            fMask flags used by CMINVOKECOMMANDINFOEX.
            </summary>
        </member>
        <member name="T:Jam.Shell.DoNotObfuscate">
            <summary>
            If a class or method is tagged with this Attribute it will
            neither be obfuscated nor moved to a different namespace
            <seealso cref="T:Jam.Shell.ShellListView"/>
            <seealso cref="T:Jam.Shell.ShellTreeView"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.EnumWinCallBackDelegate">
            <summary>
            Delegate that is called for each child window of the <see cref="T:Jam.Shell.SystemListView"/>.
            Its used in <see cref="M:Jam.Shell.ShellApi.NativeMethods.EnumChildWindows(System.IntPtr,Jam.Shell.EnumWinCallBackDelegate,System.IntPtr)"/>.
            </summary>
            <param name="hwnd"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.IDragSourceHelper2">
            <summary>
            Exposes a method that adds functionality to IDragSourceHelper. This method sets the characteristics of a drag-and-drop operation over an IDragSourceHelper object.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IDragSourceHelper2.InitializeFromBitmap(Jam.Shell.Com.ShDragImage@,System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Initializes the drag-image manager for a windowless control.
            </summary>
            <param name="dragImage">The drag image.</param>
            <param name="dataObject">The data object.</param>
        </member>
        <member name="M:Jam.Shell.Com.IDragSourceHelper2.InitializeFromWindow(System.IntPtr,System.Drawing.Point@,System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Initializes the drag-image manager for a control with a window.
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="pt">The pt.</param>
            <param name="dataObject">The data object.</param>
        </member>
        <member name="M:Jam.Shell.Com.IDragSourceHelper2.SetFlags(System.Int32)">
            <summary>
            Sets the characteristics of a drag-and-drop operation over an IDragSourceHelper object.
            </summary>
            <param name="dwFlags">The dw flags.</param>
        </member>
        <member name="T:Jam.Shell.Com.ShDragImage">
            <summary>
            Contains the information needed to create a drag image.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.sizeDragImage">
            <summary>
            A SIZE structure with the length and width of the drag image.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.ptOffset">
            <summary>
            A POINT structure that specifies the location of the cursor within the drag image. The structure should contain the offset from the upper-left corner of the drag image to the location of the cursor.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.hbmpDragImage">
            <summary>
            The drag image's bitmap handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.crColorKey">
            <summary>
            The color used by the control to fill the background of the drag image.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.IShellView">
            <summary>
            The IShellView interface http://msdn.microsoft.com/en-us/library/bb774834(VS.85).aspx
            see also http://codegator.com/mcook/archive/2007/08/21/a-managed-wrapper-for-ishellfolder.aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.TranslateAccelerator(System.IntPtr)">
            <summary>
            Translates accelerator key strokes when a namespace extension's view has the focus.
            </summary>
            <param name="pmsg"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.EnableModeless(System.Boolean)">
            <summary>
            Enables or disables modeless dialog boxes. This method is not currently implemented.
            </summary>
            <param name="fEnable"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.UIActivate(System.UInt32)">
            <summary>
            Called when the activation state of the view window is changed by an event that is 
            not caused by the Shell view itself. For example, if the TAB key is pressed when the 
            tree has the focus, the view should be given the focus.
            </summary>
            <param name="uState"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.Refresh">
            <summary>
            Refreshes the view's contents in response to user input.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.CreateViewWindow(Jam.Shell.Com.IShellView,Jam.Shell.Com.FolderSettings@,Jam.Shell.Com.IShellBrowser,Jam.Shell.RECT@,System.IntPtr@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psvPrevious"></param>
            <param name="pfs"></param>
            <param name="psb"></param>
            <param name="prcView"></param>
            <param name="phWnd"></param>
            <returns>Returns an OLE success code if successful, or an OLE error code otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.DestroyViewWindow">
            <summary>
            Destroys the view window.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.GetCurrentInfo(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Gets the current folder settings.
            </summary>
            <param name="pfs"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.AddPropertySheetPages(System.Int64,System.IntPtr@,System.Int32)">
            <summary>
            Allows the view to add pages to the Options property sheet from the View menu.
            </summary>
            <param name="dwReserved"></param>
            <param name="pfnPtr"></param>
            <param name="lparam"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.SaveViewState">
            <summary>
            Saves the Shell's view settings so the current state can be restored during a subsequent browsing session.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.SelectItem(System.IntPtr,Jam.Shell.Com.SVSI)">
            <summary>Selects an item by its itemidlist 
            http://msdn.microsoft.com/en-us/library/bb774840(VS.85).aspx
            </summary><param name="pidlItem"></param><param name="uFlags"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)">
            <summary>
            Gets an interface that refers to data presented in the view.
            </summary>
            <param name="AspectOfView"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.IShellView2">
            <summary>
            The IShellView interface http://msdn.microsoft.com/de-de/library/windows/desktop/bb774824%28v=vs.85%29.aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.TranslateAccelerator(System.IntPtr)">
            <summary>
            Translates accelerator key strokes when a namespace extension's view has the focus.
            </summary>
            <param name="pmsg"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.EnableModeless(System.Boolean)">
            <summary>
            Enables or disables modeless dialog boxes. This method is not currently implemented.
            </summary>
            <param name="fEnable"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.UIActivate(System.UInt32)">
            <summary>
            Called when the activation state of the view window is changed by an event that is 
            not caused by the Shell view itself. For example, if the TAB key is pressed when the 
            tree has the focus, the view should be given the focus.
            </summary>
            <param name="uState"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.Refresh">
            <summary>
            Refreshes the view's contents in response to user input.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.CreateViewWindow(Jam.Shell.Com.IShellView,Jam.Shell.Com.FolderSettings@,Jam.Shell.Com.IShellBrowser,Jam.Shell.RECT@,System.IntPtr@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psvPrevious"></param>
            <param name="pfs"></param>
            <param name="psb"></param>
            <param name="prcView"></param>
            <param name="phWnd"></param>
            <returns>Returns an OLE success code if successful, or an OLE error code otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.DestroyViewWindow">
            <summary>
            Destroys the view window.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetCurrentInfo(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Gets the current folder settings.
            </summary>
            <param name="pfs"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.AddPropertySheetPages(System.Int64,System.IntPtr@,System.Int32)">
            <summary>
            Allows the view to add pages to the Options property sheet from the View menu.
            </summary>
            <param name="dwReserved"></param>
            <param name="pfnPtr"></param>
            <param name="lparam"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.SaveViewState">
            <summary>
            Saves the Shell's view settings so the current state can be restored during a subsequent browsing session.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.SelectItem(System.IntPtr,Jam.Shell.Com.SVSI)">
            <summary>Selects an item by its itemidlist 
            http://msdn.microsoft.com/en-us/library/bb774840(VS.85).aspx
            </summary><param name="pidlItem"></param><param name="uFlags"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)">
            <summary>
            Gets an interface that refers to data presented in the view.
            </summary>
            <param name="AspectOfView"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetView(System.Guid@,System.UInt64)">
            <summary>
            Requests the current or default Shell view, together with all other valid view identifiers (VIDs) supported by this implementation of IShellView2.
            </summary>
            <param name="pvid"></param>
            <param name="uView"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.CreateViewWindow2(Jam.Shell.Com.SV2CVW2_PARAMS@)">
            <summary>
            Used to request the creation of a new Shell view window. It can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="lpParams"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.HandleRename(System.IntPtr@)">
            <summary>
            Used to change an item's identifier.
            </summary>
            <param name="pidlNew"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.SelectAndPositionItem(System.IntPtr@,System.UInt32,Jam.Shell.POINT@)">
            <summary>
            Selects and positions an item in a Shell View.
            </summary>
            <param name="pidlItem"></param>
            <param name="uFlags"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.IShellView3">
            <summary>
            The IShellView3 interface http://msdn.microsoft.com/de-de/library/windows/desktop/bb774820%28v=vs.85%29.aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.TranslateAccelerator(System.IntPtr)">
            <summary>
            Translates accelerator key strokes when a namespace extension's view has the focus.
            </summary>
            <param name="pmsg"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.EnableModeless(System.Boolean)">
            <summary>
            Enables or disables modeless dialog boxes. This method is not currently implemented.
            </summary>
            <param name="fEnable"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.UIActivate(System.UInt32)">
            <summary>
            Called when the activation state of the view window is changed by an event that is 
            not caused by the Shell view itself. For example, if the TAB key is pressed when the 
            tree has the focus, the view should be given the focus.
            </summary>
            <param name="uState"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.Refresh">
            <summary>
            Refreshes the view's contents in response to user input.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.CreateViewWindow(Jam.Shell.Com.IShellView,Jam.Shell.Com.FolderSettings@,Jam.Shell.Com.IShellBrowser,Jam.Shell.RECT@,System.IntPtr@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psvPrevious"></param>
            <param name="pfs"></param>
            <param name="psb"></param>
            <param name="prcView"></param>
            <param name="phWnd"></param>
            <returns>Returns an OLE success code if successful, or an OLE error code otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.DestroyViewWindow">
            <summary>
            Destroys the view window.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetCurrentInfo(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Gets the current folder settings.
            </summary>
            <param name="pfs"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.AddPropertySheetPages(System.Int64,System.IntPtr@,System.Int32)">
            <summary>
            Allows the view to add pages to the Options property sheet from the View menu.
            </summary>
            <param name="dwReserved"></param>
            <param name="pfnPtr"></param>
            <param name="lparam"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.SaveViewState">
            <summary>
            Saves the Shell's view settings so the current state can be restored during a subsequent browsing session.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.SelectItem(System.IntPtr,Jam.Shell.Com.SVSI)">
            <summary>Selects an item by its itemidlist 
            http://msdn.microsoft.com/en-us/library/bb774840(VS.85).aspx
            </summary><param name="pidlItem"></param><param name="uFlags"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)">
            <summary>
            Gets an interface that refers to data presented in the view.
            </summary>
            <param name="AspectOfView"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetView(System.Guid@,System.UInt64)">
            <summary>
            Requests the current or default Shell view, together with all other valid view identifiers (VIDs) supported by this implementation of IShellView2.
            </summary>
            <param name="pvid"></param>
            <param name="uView"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.CreateViewWindow2(Jam.Shell.Com.SV2CVW2_PARAMS@)">
            <summary>
            Used to request the creation of a new Shell view window. It can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="lpParams"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.HandleRename(System.IntPtr@)">
            <summary>
            Used to change an item's identifier.
            </summary>
            <param name="pidlNew"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.SelectAndPositionItem(System.IntPtr@,System.UInt32,Jam.Shell.POINT@)">
            <summary>
            Selects and positions an item in a Shell View.
            </summary>
            <param name="pidlItem"></param>
            <param name="uFlags"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.CreateViewWindow3(Jam.Shell.Com.IShellBrowser,Jam.Shell.Com.IShellView,Jam.Shell.Com.SV3CVW3_FLAGS,Jam.Shell.FolderFlags,Jam.Shell.FolderFlags,System.Int32,System.Int32,Jam.Shell.RECT@,System.UInt32@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psbOwner">The PSB owner.</param>
            <param name="psvPrevious">The PSV previous.</param>
            <param name="dwViewFlags">The dw view flags.</param>
            <param name="dwMask">The dw mask.</param>
            <param name="dwFlags">The dw flags.</param>
            <param name="fvMode">The fv mode.</param>
            <param name="pvid">The pvid.</param>
            <param name="prcView">The PRC view.</param>
            <param name="phWnd">The ph WND.</param>
            <returns>
            Returns an OLE success code if successful, or an OLE error code otherwise.
            </returns>
            <remarks>We don't use the sv3guid, but a dummy int (0); see bug #9780</remarks>
        </member>
        <member name="T:Jam.Shell.Com.IFolderView">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb775606(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetCurrentViewMode(System.UInt32@)">
            <summary>
            Gets an address containing a value representing the folder's current view mode.
            </summary>
            <param name="ViewMode"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.SetCurrentViewMode(System.UInt32)">
            <summary>
            Sets the selected folder's view mode.
            </summary>
            <param name="ViewMode"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetFolder(System.Guid,System.Object@)">
            <summary>
            Gets the folder object.
            </summary>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.Item(System.Int32,System.IntPtr@)">
            <summary>
            Gets the identifier of a specific item in the folder view, by index.
            </summary>
            <param name="iItemIndex"></param>
            <param name="ppidl"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.ItemCount(System.UInt32,System.Int32@)">
            <summary>
            Gets the number of items in the folder.
            </summary>
            <param name="uFlags"></param>
            <param name="pcItems"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.Items(System.UInt32,System.Guid,System.Object@)">
            <summary>
            Gets the address of an enumeration object based on the collection of items in the folder view.
            </summary>
            <param name="uFlags"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetSelectionMarkedItem(System.IntPtr@)">
            <summary>
            Gets the index of an item in the folder's view which has been marked by using the SVSI_SELECTIONMARK 
            in IFolderView::SelectItem.
            </summary>
            <param name="ppidl"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetFocusedItem(System.Int32@)">
            <summary>
            Gets the index of the item that currently has focus in the folder's view.
            </summary>
            <param name="piItem"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetItemPosition(System.IntPtr,Jam.Shell.POINT@)">
            <summary>
            Gets the position of an item in the folder's view.
            </summary>
            <param name="pidl"></param>
            <param name="ppt"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetSpacing(Jam.Shell.POINT@)">
            <summary>
            Gets a POINT structure containing the width (x) and height (y) dimensions, 
            including the surrounding white space, of an item.
            </summary>
            <param name="ppt"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetDefaultSpacing(Jam.Shell.POINT@)">
            <summary>
            Gets a pointer to a POINT structure containing the default width (x) and height (y) 
            measurements of an item, including the surrounding white space.
            </summary>
            <param name="ppt"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetAutoArrange">
            <summary>
            Gets the current state of the folder's Auto Arrange mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.SelectItem(System.Int32,System.UInt32)">
            <summary>
            Selects an item in the folder's view.
            </summary>
            <param name="iItem"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.SelectAndPositionItems(System.UInt32,System.IntPtr,Jam.Shell.POINT@,System.UInt32)">
            <summary>
            Allows the selection and positioning of items visible in the folder's view.
            </summary>
            <param name="cidl"></param>
            <param name="pidl"></param>
            <param name="apt"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="F:Jam.Shell.Com.NativeSortColumn.propKey">
            <summary>The ID of the column by which the user will sort. </summary>
        </member>
        <member name="F:Jam.Shell.Com.NativeSortColumn.SortDirection">
            <summary>The sort direction: 0 = Default, -1 = Descending, 1 = Ascending </summary>
        </member>
        <member name="T:Jam.Shell.Com.IPropertyDescription">
            <summary>
            Exposes methods that enumerate and retrieve individual property description details.
            </summary>
            <remarks>Signature source: WindowsAPICodePack. </remarks>
        </member>
        <member name="T:Jam.Shell.Com.CDBOSC">
            <summary>
            Change in the selection state. This parameter can be one of the following values.
            Used in ICommDlgBrowser OnStateChange
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_SETFOCUS">
            <summary>
            The focus has been set to the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_KILLFOCUS">
            <summary>
            The view has lost the focus. 
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_SELCHANGE">
            <summary>
            The selection has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_RENAME">
            <summary>
            An item has been renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_STATECHANGE">
            <summary>
            An item has been checked or unchecked.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.FolderViewMode">
            <summary>
            Enumerates the different viewmodes of the explorer listview.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Auto">
            <summary> The view should determine the best option.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Icon">
            <summary>The view should display medium-size icons.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.SmallIcon">
            <summary> Each item appears as a small icon with the label to the right of it. ///</summary>
            <remarks>Using List as SmallIcons - like Delphi version.</remarks>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.List">
            <summary>
            Each item appears as a small icon with a label to the right of it. Items are arranged in
            columns and cannot be dragged by the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Details">
            <summary>Object names and other selected information, such as the size or date last updated, are shown.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Thumbnail">
            <summary>The view should display thumbnail icons.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Tile">
            <summary>The view should display large icons.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Content">
            <summary>
            Windows 7 and later. The view should display content mode.        
            FVM_CONTENT New for Windows 7, see http://msdn.microsoft.com/en-us/library/bb762510%28VS.85%29.aspx
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.FolderSettings">
            <summary>
            The folder settings structure the is passed to the explorer shell view
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderSettings.ViewMode">
            <summary>The <see cref="T:Jam.Shell.Com.FolderViewMode"/></summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderSettings.FolderFlags">
            <summary>The FolderFlags that are passed</summary>
        </member>
        <member name="T:Jam.Shell.Com.SV2CVW2_PARAMS">
            <summary>
            Holds the parameters for the IShellView2::CreateViewWindow2 method.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.DEFAULT">
            <summary>
            The default view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.NONINTERACTIVE">
            <summary>
            In the case of an error, the view should fail silently rather than displaying a UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.FORCEVIEWMODE">
            <summary>
            The view mode set by IShellView3::CreateViewWindow3 overrides the saved view state.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.FORCEFOLDERFLAGS">
            <summary>
            Folder flags set by IShellView3::CreateViewWindow3 override the saved view state.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.SVUIA_STATUS">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762549.aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_DEACTIVATE">
            <summary>The browser view has been deactivated.</summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_ACTIVATENOFOCUS">
            <summary>The browser view is activated and does not have focus.</summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_ACTIVATEFOCUS">
            <summary>The browser view is activated and has focus.</summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_INPLACEACTIVATE">
            <summary>The browser view is activated in place.</summary>
        </member>
        <member name="T:Jam.Shell.Com.SVGIO">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762548(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_BACKGROUND">
            <summary>
            Refers to the background of the view. 
            It is used with IID_IContextMenu to get a shortcut menu for the background of the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_SELECTION">
            <summary>
            Refers to the currently selected items. Used with IID_IDataObject to retrieve a data object that represents the selected items.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_ALLVIEW">
            <summary>
            Used in the same way as SVGIO.Selection but refers to all items in the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_CHECKED">
            <summary>
            Used in the same way as SVGIO.Selection but refers to checked items in views where checked mode is supported. For more details on checked mode, see FOLDERFLAGS.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_TYPEMASK">
            <summary>
            Masks all bits but those corresponding to the SVGIO flags.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_FLAG_VIEWORDER">
            <summary>
            Returns the items in the order they appear in the view. 
            If this flag is not set, the selected item will be listed first.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.SVSI">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762593(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_DESELECT">
            <summary>
            Deselect the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_SELECT">
            <summary>
            Select the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_EDIT">
            <summary>
            Put the name of the item into rename mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_DESELECTOTHERS">
            <summary>
            Deselect all but the selected item. If the item parameter is NULL, deselect all items.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_ENSUREVISIBLE">
            <summary>
            In the case of a folder that cannot display all of its contents on one screen, 
            display the portion that contains the selected item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_FOCUSED">
            <summary>
            Give the selected item the focus when multiple items are selected, 
            placing the item first in any list of the collection returned by a method.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_TRANSLATEPT">
            <summary>
            Convert the input point from screen coordinates to the list-view client coordinates.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_SELECTIONMARK">
            <summary>
            Mark the item so that it can be queried using IFolderView::GetSelectionMarkedItem.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_POSITIONITEM">
            <summary>
            Allows the window's default view to position the item. In most cases, 
            this will place the item in the first available position. However, 
            if the call comes during the processing of a mouse-positioned context menu, 
            the position of the context menu is used to position the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_CHECK">
            <summary>
            The item should be checked. This flag is used with items in views 
            where the checked mode is supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_CHECK2">
            <summary>
            The second check state when the view is in tri-check mode, in which there are three 
            values for the checked state. You can indicate tri-check mode by specifying FWF_TRICHECKSELECT 
            in IFolderView2::SetCurrentFolderFlags. The 3 states for FWF_TRICHECKSELECT are unchecked, 
            SVSI_CHECK and SVSI_CHECK2.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_KEYBOARDSELECT">
            <summary>
            Selects the item and marks it as selected by the keyboard. 
            Includes the <see cref="F:Jam.Shell.Com.SVSI.SVSI_SELECT"/> flag.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_NOTAKEFOCUS">
            <summary>
            An operation to select or focus an item should not also set focus on the view itself.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_NOSTATECHANGE">
            <summary>
            An operation to edit or position an item should not affect the item's focus or selected state.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.SetWindowPosFlags">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms633545(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_ASYNCWINDOWPOS">
            <summary>
            If the calling thread and the thread that owns the window are attached to different input queues, 
            the system posts the request to the thread that owns the window. This prevents the calling thread 
            from blocking its execution while other threads process the request.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_DEFERERASE">
            <summary>
            Prevents generation of the WM_SYNCPAINT message.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_DRAWFRAME">
            <summary>
            Draws a frame (defined in the window's class description) around the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_FRAMECHANGED">
            <summary>
            Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to the 
            window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
            is sent only when the window's size is being changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_HIDEWINDOW">
            <summary>
            Hides the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. If this flag is not set, the window is activated and moved to the 
            top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter 
            parameter).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOCOPYBITS">
            <summary>
            Discards the entire contents of the client area. If this flag is not specified, the valid contents of 
            the client area are saved and copied back into the client area after the window is sized or repositioned.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOMOVE">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOOWNERZORDER">
            <summary>
            Does not change the owner window's position in the Z order.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to the 
            client area, the nonclient area (including the title bar and scroll bars), and any part of the parent 
            window uncovered as a result of the window being moved. When this flag is set, the application must 
            explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOREPOSITION">
            <summary>
            Same as the SWP_NOOWNERZORDER flag.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOSENDCHANGING">
            <summary>
            Prevents the window from receiving the WM_WINDOWPOSCHANGING message.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOSIZE">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOZORDER">
            <summary>
            Retains the current Z order (ignores the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_SHOWWINDOW">
            <summary>
            Displays the window.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.RelativeDescriptionType">
            <summary>
            Describes the relative description type for a property description, as determined by the relativeDescriptionType attribute of the displayInfo element.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.IImageList">
            <summary>
            See http://www.vbaccelerator.com/home/net/code/libraries/Shell_Projects/SysImageList/article.asp
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyViewOptions">
            <summary>
            Associates property names with property description list strings.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.None">
            <summary>
            The property is shown by default.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.CenterAlign">
            <summary>
            The property is centered.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.RightAlign">
            <summary>
            The property is right aligned.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.BeginNewGroup">
            <summary>
            The property is shown as the beginning of the next collection of properties in the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.FillArea">
            <summary>
            The remainder of the view area is filled with the content of this property.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.SortDescending">
            <summary>
            The property is reverse sorted if it is a property in a list of sorted properties.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowOnlyIfPresent">
            <summary>
            The property is only shown if it is present.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowByDefault">
            <summary>
            The property is shown by default in a view (where applicable).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowInPrimaryList">
            <summary>
            The property is shown by default in primary column selection user interface (UI).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowInSecondaryList">
            <summary>
            The property is shown by default in secondary column selection UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.HideLabel">
            <summary>
            The label is hidden if the view is normally inclined to show the label.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.Hidden">
            <summary>
            The property is not displayed as a column in the UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.CanWrap">
            <summary>
            The property is wrapped to the next row.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.MaskAll">
            <summary>
            A mask used to retrieve all flags.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyTypeOptions">
            <summary>
            Describes the attributes of the <c>typeInfo</c> element in the property's <c>.propdesc</c> file.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.None">
            <summary>
            The property uses the default values for all attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.MultipleValues">
            <summary>
            The property can have multiple values.   
            </summary>
            <remarks>
            These values are stored as a VT_VECTOR in the PROPVARIANT structure.
            This value is set by the multipleValues attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsInnate">
            <summary>
            This property cannot be written to. 
            </summary>
            <remarks>
            This value is set by the isInnate attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsGroup">
            <summary>
            The property is a group heading. 
            </summary>
            <remarks>
            This value is set by the isGroup attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.CanGroupBy">
            <summary>
            The user can group by this property. 
            </summary>
            <remarks>
            This value is set by the canGroupBy attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.CanStackBy">
            <summary>
            The user can stack by this property. 
            </summary>
            <remarks>
            This value is set by the canStackBy attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsTreeProperty">
            <summary>
            This property contains a hierarchy. 
            </summary>
            <remarks>
            This value is set by the isTreeProperty attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IncludeInFullTextQuery">
            <summary>
            Include this property in any full text query that is performed. 
            </summary>
            <remarks>
            This value is set by the includeInFullTextQuery attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsViewable">
            <summary>
            This property is meant to be viewed by the user.  
            </summary>
            <remarks>
            This influences whether the property shows up in the "Choose Columns" dialog, for example.
            This value is set by the isViewable attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsQueryable">
            <summary>
            This property is included in the list of properties that can be queried.   
            </summary>
            <remarks>
            A queryable property must also be viewable.
            This influences whether the property shows up in the query builder UI.
            This value is set by the isQueryable attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.CanBePurged">
            <summary>
            Used with an innate property (that is, a value calculated from other property values) to indicate that it can be deleted.  
            </summary>
            <remarks>
            Windows Vista with Service Pack 1 (SP1) and later.
            This value is used by the Remove Properties user interface (UI) to determine whether to display a check box next to an property that allows that property to be selected for removal.
            Note that a property that is not innate can always be purged regardless of the presence or absence of this flag.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsSystemProperty">
            <summary>
            This property is owned by the system.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.MaskAll">
            <summary>
            A mask used to retrieve all flags.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertySortDescription">
            <summary>
            Describes the particular wordings of sort offerings.
            </summary>
            <remarks>
            Note that the strings shown are English versions only; 
            localized strings are used for other locales.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.General">
            <summary>
            The default ascending or descending property sort, "Sort going up", "Sort going down".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.AToZ">
            <summary>
            The alphabetical sort, "A on top", "Z on top".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.LowestToHighest">
            <summary>
            The numerical sort, "Lowest on top", "Highest on top".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.SmallestToBiggest">
            <summary>
            The size sort, "Smallest on top", "Largest on top".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.OldestToNewest">
            <summary>
            The chronological sort, "Oldest on top", "Newest on top".
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyAggregationType">
            <summary>
            Property Aggregation Type
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Default">
            <summary>
            The string "Multiple Values" is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.First">
            <summary>
            The first value in the selection is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Sum">
            <summary>
            The sum of the selected values is displayed. This flag is never returned 
            for data types VT_LPWSTR, VT_BOOL, and VT_FILETIME.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Average">
            <summary>
            The numerical average of the selected values is displayed. This flag 
            is never returned for data types VT_LPWSTR, VT_BOOL, and VT_FILETIME.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.DateRange">
            <summary>
            The date range of the selected values is displayed. This flag is only 
            returned for values of the VT_FILETIME data type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Union">
            <summary>
            A concatenated string of all the values is displayed. The order of 
            individual values in the string is undefined. The concatenated 
            string omits duplicate values; if a value occurs more than once, 
            it only appears a single time in the concatenated string.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Max">
            <summary>
            The highest of the selected values is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Min">
            <summary>
            The lowest of the selected values is displayed.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyColumnStateOptions">
            <summary>
            Describes how a property should be treated for display purposes.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.StringType">
            <summary>
            The value is displayed as a string.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.IntegerType">
            <summary>
            The value is displayed as an integer.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.DateType">
            <summary>
            The value is displayed as a date/time.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.TypeMask">
            <summary>
            A mask for display type values StringType, IntegerType, and DateType.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.OnByDefault">
            <summary>
            The column should be on by default in Details view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.Slow">
            <summary>
            Will be slow to compute. Perform on a background thread.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.Extended">
            <summary>
            Provided by a handler, not the folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.SecondaryUI">
            <summary>
            Not displayed in the context menu, but is listed in the More... dialog.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.Hidden">
            <summary>
            Not displayed in the user interface (UI).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.PreferVariantCompare">
            <summary>
            VarCmp produces same result as IShellFolder::CompareIDs.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.PreferFormatForDisplay">
            <summary>
            PSFormatForDisplay produces same result as IShellFolder::CompareIDs.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.NoSortByFolders">
            <summary>
            Do not sort folders separately.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.ViewOnly">
            <summary>
            Only displayed in the UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.BatchRead">
            <summary>
            Marks columns with values that should be read in a batch.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.NoGroupBy">
            <summary>
            Grouping is disabled for this column.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.FixedWidth">
            <summary>
            Can't resize the column.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.NoDpiScale">
            <summary>
            The width is the same in all dots per inch (dpi)s.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.FixedRatio">
            <summary>
            Fixed width and height ratio.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.DisplayMask">
            <summary>
            Filters out new display flags.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyConditionOperation">
            <summary>
            Provides a set of flags to be used with IConditionFactory, 
            ICondition, and IConditionGenerator to indicate the operation.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.Implicit">
            <summary>
            The implicit comparison between the value of the property and the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.Equal">
            <summary>
            The value of the property and the value of the constant must be equal.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.NotEqual">
            <summary>
            The value of the property and the value of the constant must not be equal.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.LessThan">
            <summary>
            The value of the property must be less than the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.GreaterThan">
            <summary>
            The value of the property must be greater than the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.LessThanOrEqual">
            <summary>
            The value of the property must be less than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.GreaterThanOrEqual">
            <summary>
            The value of the property must be greater than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueStartsWith">
            <summary>
            The value of the property must begin with the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueEndsWith">
            <summary>
            The value of the property must end with the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueContains">
            <summary>
            The value of the property must contain the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueNotContains">
            <summary>
            The value of the property must not contain the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.DOSWildCards">
            <summary>
            The value of the property must match the value of the constant, where '?' matches any single character and '*' matches any sequence of characters.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.WordEqual">
            <summary>
            The value of the property must contain a word that is the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.WordStartsWith">
            <summary>
            The value of the property must contain a word that begins with the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ApplicationSpecific">
            <summary>
            The application is free to interpret this in any suitable way.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyGroupingRange">
            <summary>
            Specifies the property description grouping ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Discrete">
            <summary>
            The individual values.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Alphanumeric">
            <summary>
            The static alphanumeric ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Size">
            <summary>
            The static size ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Dynamic">
            <summary>
            The dynamically-created ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Date">
            <summary>
            The month and year groups.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Percent">
            <summary>
            The percent groups.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Enumerated">
            <summary>
            The enumerated groups.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropEnumType">
            <summary>
            Property Enumeration Types
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.DiscreteValue">
            <summary>
            Use DisplayText and either RangeMinValue or RangeSetValue.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.RangedValue">
            <summary>
            Use DisplayText and either RangeMinValue or RangeSetValue
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.DefaultValue">
            <summary>
            Use DisplayText
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.EndRange">
            <summary>
            Use Value or RangeMinValue
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyConditionType">
            <summary>
            Specifies the condition type to use when displaying the property in the query builder user interface (UI).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.None">
            <summary>
            The default condition type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.String">
            <summary>
            The string type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.Size">
            <summary>
            The size type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.DateTime">
            <summary>
            The date/time type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.Boolean">
            <summary>
            The Boolean type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.Number">
            <summary>
            The number type.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyDisplayType">
            <summary>
            Specifies the display types for a property.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.String">
            <summary>
            The String Display. This is the default if the property doesn't specify a display type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.Number">
            <summary>
            The Number Display.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.Boolean">
            <summary>
            The Boolean Display.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.DateTime">
            <summary>
            The DateTime Display.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.Enumerated">
            <summary>
            The Enumerated Display.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyDescriptionFormatOptions">
            <summary>
            Delineates the format of a property string.
            </summary>
            <remarks>
            Typically use one, or a bitwise combination of 
            these flags, to specify the format. Some flags are mutually exclusive, 
            so combinations like <c>ShortTime | LongTime | HideTime</c> are not allowed.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.None">
            <summary>
            The format settings specified in the property's .propdesc file.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.PrefixName">
            <summary>
            The value preceded with the property's display name.
            </summary>
            <remarks>
            This flag is ignored when the <c>hideLabelPrefix</c> attribute of the <c>labelInfo</c> element 
            in the property's .propinfo file is set to true.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.FileName">
            <summary>
            The string treated as a file name.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.AlwaysKB">
            <summary>
            The sizes displayed in kilobytes (KB), regardless of size. 
            </summary>
            <remarks>
            This flag applies to properties of <c>Integer</c> types and aligns the values in the column. 
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.RightToLeft">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.ShortTime">
            <summary>
            The time displayed as 'hh:mm am/pm'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.LongTime">
            <summary>
            The time displayed as 'hh:mm:ss am/pm'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.HideTime">
            <summary>
            The time portion of date/time hidden.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.ShortDate">
            <summary>
            The date displayed as 'MM/DD/YY'. For example, '3/21/04'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.LongDate">
            <summary>
            The date displayed as 'DayOfWeek Month day, year'. 
            For example, 'Monday, March 21, 2004'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.HideDate">
            <summary>
            The date portion of date/time hidden.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.RelativeDate">
            <summary>
            The friendly date descriptions, such as "Yesterday".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.UseEditInvitation">
            <summary>
            The text displayed in a text box as a cue for the user, such as 'Enter your name'.
            </summary>
            <remarks>
            The invitation text is returned if formatting failed or the value was empty. 
            Invitation text is text displayed in a text box as a cue for the user, 
            Formatting can fail if the data entered 
            is not of an expected type, such as putting alpha characters in 
            a phone number field.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.ReadOnly">
            <summary>
            This flag requires UseEditInvitation to also be specified. When the 
            formatting flags are ReadOnly | UseEditInvitation and the algorithm 
            would have shown invitation text, a string is returned that indicates 
            the value is "Unknown" instead of the invitation text.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.NoAutoReadingOrder">
            <summary>
            The detection of the reading order is not automatic. Useful when converting 
            to ANSI to omit the Unicode reading order characters.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.SmartDateTime">
            <summary>
            Smart display of DateTime values
            </summary>
        </member>
        <member name="T:Jam.Shell.ContextMenuCallBackForm">
            <summary>
            Used internally to receive callback messages from the context menu
            </summary>
        </member>
        <member name="T:Jam.Shell.GetThumbnailCallback">
            <summary>
            Delegate for the callback function for retreiving a thumbnail using the asynchronous version of GetThumbnailBitmap().
            </summary>
            <param name="pImage">The Bitmap containing the thumbnail image.</param>
            <param name="pBitmapSource">The source that was used to create the Image. May be null.</param>
            <param name="pState">An optional, user-provided object that was supplied when calling the asynchronous version of GetThumbnailBitmap().</param>
        </member>
        <member name="T:Jam.Shell.ThumbnailUnavailableHandler">
            <summary>
            Delegate for the <see cref="M:Jam.Shell.ShellBrowser.SetThumbnailProvider(Jam.Shell.ThumbnailUnavailableHandler)"/> method. 
            </summary>
            <param name="pPath">The path of the file to load a thumbnail for.</param>
            <param name="pSize">The requested size of the thumbnail.</param>
            <param name="pBitmap">A Bitmap representing the the thumbnail of the file. Null if not supplied</param>
            <seealso cref="M:Jam.Shell.ShellBrowser.SetThumbnailProvider(Jam.Shell.ThumbnailUnavailableHandler)"/>
        </member>
        <member name="T:Jam.Shell.ShellBrowser">
            <summary>
            This class is used as a wrapper around the Win32 shell API.
            </summary>    
        </member>
        <member name="F:Jam.Shell.ShellBrowser.MAX_COLUMNS">
            <summary>
            Max number of columns.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowser.PARENTFOLDER_NUMBER_XP">
            <summary>
            Special treatment for XP were we don't have the ParentFolder column
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#cctor">
            <summary>
            Static constructor. Currently we create the precondition to have async file operations on Windows Vista and higher.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class.
            Since version 4.0 <see cref="P:Jam.Shell.ShellBrowser.SpecialFolder"/> does not point to <see cref="F:Jam.Shell.ShellFolder.Drives"/> anymore,
            use <see cref="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ShellFolder)"/> constructor instead, this is due to performance reasons.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ShellFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class and assigns its <see cref="P:Jam.Shell.ShellBrowser.SpecialFolder"/> property
            </summary>
            <param name="p_ShellFolder">The initial special folder</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class makes the object with the given path the active object.
            </summary>
            <param name="ObjectPath">The file system path of the object that should be initially the active object.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class makes the object with the given ItemIdList the active object.
            </summary>
            <param name="ActiveShellObject">Absolute ItemIdList to the object that should be the initial active object.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ShellBrowser)">
            <summary>
            Initializes a copy of the given ShellBroswer.
            </summary>
            <remarks>Note that event handlers will not be copied. Also the ItemIdList is not copied.</remarks>
            <param name="copyBrowser">The ShellBrowser that should be copied.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.Dispose(System.Boolean)">
            <summary>
            Releases all resources held by this instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class.
            </summary>
            <param name="disposing">is passed to the base class is not relevant to the actions taken in this method</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.CheckIfValid(System.Boolean)">
            <summary>
            Checks if the current object is in a valid state for performing operations
            </summary>
            <param name="p_ThrowException">Pass <c>true</c> if this function should throw an <see cref="T:System.InvalidOperationException"/> 
            if the state is invalid. If the return value is of interest, pass <c>false</c>.</param>
            <returns><c>true</c>, if the current state is valid for performing operations; otherwise <c>false</c></returns>
            <exception cref="T:System.InvalidOperationException">This excpetion is thrown if there is nor current folder or current object set.</exception>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.CheckIfValid(System.Boolean,System.Boolean)">
            <summary>
            Checks if the current object is in a valid state for performing operations
            </summary>
            <param name="p_ThrowException">Pass <c>true</c> if this function should throw an <see cref="T:System.InvalidOperationException"/> 
            if the state is invalid. If the return value is of interest, pass <c>false</c>.</param>
            <param name="p_FolderOnly">Only checks if the set folder is valid.</param>
            <returns><c>true</c>, if the current state is valid for performing operations; otherwise <c>false</c></returns>
            <exception cref="T:System.InvalidOperationException">This excpetion is thrown if there is nor current folder or current object set.</exception>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetWindowHandle(System.Boolean)">
            <summary>
            Returns an approriate window handle for operations that require a window handle.
            It takes care that a null handle is returned to prevent error messages if ShowErrorMEssages is set to false.
            </summary>
            <param name="p_HandleRequired">True, if a handle is required.</param>
            <returns>IntPtr for the window handle or IntPtr.Zero.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.LogError(System.String,System.Boolean,System.Exception)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.ShellBrowser.ShowErrorMessages"/> is set. 
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
            <param name="showErrorMessages">Whether to show a messagebox or simply log to debug output</param>
            <param name="exception">A possible exception that is logged as well, may be null</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsWPF">
            <summary>
            Checks whether the current process is a WPF application or not.
            </summary>
            <returns>True if the current process is a WPF application.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsAdmin">
            <summary>
            Checks whether the user is admin or not.
            In Vista or later: Determines whether application is running 
            with elevated rights (UAC) or not.
            </summary>
            <returns>True if current user has administrator-rights; false if not</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.MatchPattern(System.String,System.String)">
            <summary>
            Returns true if the given string matched the wild card pattern
            </summary>
            <param name="element">the element to check if it matches the pattern</param>
            <param name="pattern">the pattern ie. *.* or *a?.txt</param>
            <returns>true if the element matched the pattern</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDefaultSavePathFromLibrary(Jam.Shell.ItemIdList)">
            <summary>For a given Windows 7+ library, this function returns the default save path.</summary>
            <param name="p_AbsoluteItemIdList">The absolute ItemIdList of the Windows 7 Library</param>
            <returns>The default save path for a given Windows 7+ library path, an empty string if the given p_ItemIdList was not a library or an other error occurred.</returns>
            <author>ternes@jam-software.com, marder@jam-software.com, Paolo Righi</author>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ResetFPU">
            <summary>
            Resets the floating point control register to what .NET expects.
            </summary>
            <remarks>
            When ShellBrowser calls Api functions that involve third party ShellExtensions it can happen that the FPU register is changed. 
            As a consequence following .NET framework calls may fail (e.g. ArithmeticExceptions).
            Calling this method resets the original state of the FPU register.
            </remarks>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>
            <seealso cref="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(System.String)"/>
        </member>
        <member name="F:Jam.Shell.ShellBrowser.m_DesignTimeUsageDenied">
            <summary>
            The component may not be used in Design-Time 
            while the IDEs actively read the values of the component this flag is set
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowser.m_DesignTimeUsageChecked">
            <summary>
            It has not yet been checked whether the component is allowed to be used
            at designtime
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.DesignTimeUsageDenied(System.Boolean)">
            <summary>
            This is the Access denial check on designtime. It always returns "false" if the 
            Software was compiled with the #define JAMSHAREWARE.
            In case of a Full-Version it checks whether a Development-License is present,
            if in DesignMode and m_DesignTimeUsageChecked is false.
            It does so by calling <see cref="M:Jam.Shell.LicenseChecking.VerifyDevelopmentLicense"/> the first
            time and then stores its return value in m_DesignTimeUsageDenied.
            </summary>
            <param name="p_DesignMode">this is the DesignMode property of e.g. <see cref="T:Jam.Shell.ShellTreeView"/> or <see cref="T:Jam.Shell.ShellListView"/>.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.SetThumbnailProvider(Jam.Shell.ThumbnailUnavailableHandler)">
             <summary>
             Allows to set a callback function that can supply a thumbnail image in case the system cannot provide one.
             </summary>
             <remarks>This is a global setting for each instance of a program. The given bitmap will be freed automatically when no longer needed.</remarks>
             <param name="pMethod"> The callback function that can supply a thumbnail image. </param>
            <example>
             This sample code loads a default image for each thumbnail which cannot be provided.
            <code>
            private void ThumbnailUnavailable(string pPath, System.Drawing.Size pSize, out Bitmap pBitmap)
            {
                pBitmap = new Bitmap(@"X:\Images\dummy_thumnail.bmp");
            }
            
            private void FormMain_Load(object sender, EventArgs e)
            {
                ShellBrowser.SetThumbnailProvider(ThumbnailUnavailable);
            }        
            </code>
            </example>
            <seealso cref="T:Jam.Shell.ThumbnailUnavailableHandler"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.OnRenameItemSelected">
            <summary>
            Fires the RenameItemSelected event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.OnContextMenuItemSelected(System.String)">
            <summary>
            Triggers the ContextMenuItemSelect event.
            </summary>
            <param name="command">The shell command that should be executed.</param>
            <returns><b>true</b> if there is no event handler, or if the event handler decided that the command should be executed; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.OnBeforeShellCommand(System.String)">
            <summary>
            This method is called to trigger the <see cref="E:Jam.Shell.ShellBrowser.BeforeShellCommand"/> event.
            </summary>
            <param name="verb">the command verb that will be used in the preceeding shell command</param>
            <returns>true if the shell command should be executed, false if the operation should be aborted.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.BrowseObject">
            <summary>
            Makes the currently active shell object the current folder.
            </summary>
            <returns>true, if successful. false if the current object is no folder or an error occured.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetEnumerator">
            <summary>
            Implemetation of IEnumerable.GetEnumerator
            </summary>
            <returns>IEnumerator interface</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ConnectToServer(System.String)">
            <summary>
            Connects to a remote computer.
            </summary>
            <param name="aUNCPath">The network path as UNC path (like \\server\share) to that should be connected.</param>
            <returns><c>true</c> if the connection was successful; false otherwise.</returns>
            <remarks>
            If the current user is not already authenticated on the remote computer, a login dialog will
            be prompted by the operating system. Otherwise just <c>true</c> will be returned.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetLastChangeDate">
            <summary>
            Returns the last modified date of the currently active object.
            </summary>
            <returns>
            The last modified date of the currently active object. 
            DateTime.MinValue if the current object is not a file system object and so the last modified date cannot be determined.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.Filter2Regex(System.String)">
            <summary>
            Converts a semicolon separated file filter i.e. "*.txt;*.doc" to a 
            case-insensitve regular expression
            </summary>
            <param name="value">The filter to convert</param>
            <returns>the generated regular expression</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.Filter2Regex(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Converts a semicolon separated file filter i.e. "*.txt;*.doc" to a 
            regular expression
            </summary>
            <param name="value">The filter to convert</param>
            <param name="regexOptions">additional options for instantiating the regular expression</param>
            <returns>the generated regular expression</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.FilterMatch">
            <summary>
            Checks if the currently active object matches the filter that is set.
            </summary>
            <returns>true, if the current object matches the filter property, false if it does not match</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetAttributes(Jam.Shell.SFGAOF)">
            <summary>
            Checks if the given attributes apply to the current objects
            </summary>
            <param name="Attributes">A set of one or more attributes from the SFGAOF enumeration.</param>
            <returns>Those of the given attributes that apply to the current object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDragEffects">
            <summary>
            Returns which drag effects are possible for the currently active object.
            </summary>
            <returns>A combination of flags of the <see cref="T:System.Windows.Forms.DragDropEffects"/> type that indicate, which operations are possible for the currently active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDesktopName">
            <summary>
            Returns the name of the root of the Windows shell namespace, which is "Desktop" in English Windows versions.
            </summary>
            <returns>The name of the root of the shell namespace.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.HasAttributes(Jam.Shell.SFGAOF)">
            <summary>
            Checks if the given attributes apply to the current objects.
            </summary>
            <param name="Attributes">A set of one or more attributes from the SFGAOF enumeration.</param>
            <returns>true, if all the given attributes apply to the current object, false therwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.HasFileExtension(System.String,System.String)">
            <summary>
            Checks whether the given fullpath or filename has the given extension.
            </summary>
            <param name="p_Path">The fullpath or filename that is to be checked.</param>
            <param name="p_Extension">The extension that is to be checked.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.EnsureExtension(System.String,System.String)">
            <summary>
            Ensures the given extension for a filename or path.
            </summary>
            <param name="pName">Name or path where the extension should be ensured.</param>
            <param name="pExtension">The extension.</param>
            <returns>The given name or path including the given extension.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDomain">
            <summary>
            Returns the domain name of the currently active object.
            </summary>
            <returns>If the current object is a network object, then the Domain name is returned. Otherwise an empty string is returned.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetShellObjectName">
            <summary>
            Returns the Windows shell display name of the currently active object.
            </summary>
            <returns>the Windows shell display name of the currently active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.CompareIDs(Jam.Shell.ItemIdList,Jam.Shell.ItemIdList,System.Int32)">
            <summary>
            Compares two ItemIdLists in the currently active shell folder.
            </summary>
            <param name="pPidl1">The first ITemIdList.</param>
            <param name="pPidl2">The second ItemIdList that should be compared to the first one.</param>
            <param name="pShellIndex">The column in the Winows Explorer Details view. Pass0 if you want to compar them by name.</param>
            <returns>A negative return value indicates that the first item should precede the second. 
                     A positive return value indicates that the first item should follow the second
                     A return value of zero indicates that the two items are the same </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.CompareFilenames(System.String,System.String)">
            <summary>
            Compares two filenames
            </summary>
            <param name="filename1"></param>
            <param name="filename2"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDefaultSortColumn">
            <summary>
            Get the default sort column of the currently selected ShellFolder.
            </summary>
            <returns>The default sort column of the currently selected ShellFolder.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetIndexOfShColumnID(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the shell index for a given ShColumnID.
            </summary>
            <param name="columnID"></param>
            <returns>The index of the given ShColumnId or -1 if could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetShColumnIdFromColumnNumber(System.Int32)">
            <summary>
            Returns the ShColumnID for the given shell column number.
            </summary>
            <param name="pShellIndex">A shell column number.</param>
            <returns>The ShColumnID for the given shell column number. Returns ShellApi.ShellColumnInvalid if GetIShellDetails or MapColumnToSCID fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)">
            <summary>
            Returns the text to show for the currently active item in a certain column.
            </summary>
            <param name="pShellColumnIndex">ShellIndex of the column. Column 0 is usually the name</param>
            <param name="pHeader">true, if the column header text should be returned, false if the text for the currently active item should be returned.</param>
            <returns>The text to display.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnText(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Returns the text to show for the currently active item in a certain column.
            </summary>
            <param name="p_ColumnId">ID of the column.</param>
            <param name="p_Header">true, if the column header text should be returned, false if the text for the currently active item should be returned.</param>
            <returns>The text to display.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnText(Jam.Shell.SHCOLUMNID,System.Boolean,System.Object@)">
            <summary>
            Returns the text which would be displayed in the Details view of the Windows Explorer as String and Variant.
            </summary>
            <param name="p_ColumnId">SHCOLUMNID of the column.</param>
            <param name="p_Header"> <c>true</c>, if the column header text should be returned.
            <c>false</c> if the text for the currently active item should be returned.
            </param>
            <param name="oVariant">Returns the Variant that holds the column text information.</param>
            <returns>The text to display as String and Variant.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetIShellDetails">
            <summary>
            </summary>
            <returns>True if ShellFolder1 or ShellFolder2 are not null.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnInfo(System.Int32,System.Int32@)">
            <summary>
            Use this function to get information about the columns, which the Explorer uses in the details view. Provides the default alignment and the default width of a column, like Explorer would use it. 
            Use <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)"/> or <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(Jam.Shell.SHCOLUMNID,System.Boolean)"/> to get the column title or the text for a specific column.
            </summary>
            <param name="pShellIndex">Contains the Shellindex of the column, for which the information should be returned.</param>
            <param name="pWidth">Is an \"out\" parameter, which returns the default width of the column in the Windows Explorer.</param>
            <returns>The function returns the default alignment of the column.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsColumnAvailable(System.Int32)">
            <summary>
            Checks whether the given column is available for the current folder.
            </summary>
            <param name="index">The shell column index.</param>
            <returns>True, if it`s available.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsColumnAvailable(Jam.Shell.SHCOLUMNID)">
            <summary>
            Checks whether the given column is available for the current folder.
            </summary>
            <param name="columnID">The shell column id.</param>
            <returns>True, if it`s available.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(System.String)">
            <summary>
            Invokes the given shell command to the active object or, if not empty, to the obejct in the MultiObjects property.
            </summary>
            <param name="Command">The command as string that should be executed, e.g. "copy" or "open". An empty string will invoke the default command.</param> 
            <returns>true, if successful. false an error occured.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommandOnMultiObjects(System.String)">
            <summary>
            Invokes the given command on multiple objects. Multiobjects needs the fullpath of these objects, if the path is different from the folder
            of the called ShellBrowser instance.
            </summary>
            <param name="command">The command that should be executed</param>
            <returns>True if the command was executed successfully</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsHidden">
            <summary>
            Checks if the currently active object is hidden.
            </summary>
            <returns>true, if the currently active object is hidden, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsCompressed">
            <summary>
            Checks if the currently active object is compressed.
            </summary>
            <returns>true, if the currently active object is compressed, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.CanRename">
            <summary>
            Checks if the currently active object can be renamed.
            </summary>
            <returns>true, if the currently active object can be renamed; false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsEncrypted">
            <summary>
            Checks if the currently active object is encrypted.
            </summary>
            <returns>true, if the currently active object is encrypted, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsFileSystemFolder">
            <summary>
            Checks if the currently active object is a file system object that can be accesses through a path.
            </summary>
            <returns>true, if the currently active object is a file system object, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsLink">
            <summary>
            Checks if the currently active object is a link or shortcut.
            </summary>
            <returns>true, if the currently active object is a link or shortcut, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsLinkToFolder">
            <summary>
            Checks if the currently active object is a link to another folder and returns the path to it.
            </summary>
            <returns>the path to the link target, if the currently active object is a link. An empty string if the currently active object is not a link.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetInfoTip">
            <summary>
            This method returns the hint text of the current object which is provided by the shell.
            Per default this includes information that might take some time until it is retrieved, (ie. recursively determine folder size)
            </summary>
            <returns>Returns the hint text for the current object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetInfoTip(System.Boolean)">
            <summary>
            This method returns the hint text of the current object, which is provided by the shell.
            </summary>
            <param name="useSlowInfoTip">if true, also determine info tips that take time (ie. recursively determine folder size)</param>
            <returns>Returns the hint text for the current object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetUIObject(System.Guid)">
            <summary>
            Queries and returns COM interfaces from the currently active Folder and object. If object names are assigned to the MultiObject collection, then they will be used.
            </summary>
            <param name="riid">IID of the interface that should be returned</param>
            <returns>The requested COM object, which needs to be casted.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetUIObject(System.Guid,Jam.Shell.ItemIdList[])">
            <summary>
            Queries and returns COM interfaces from the currently active Folder and the given ItemIdLists.
            </summary>
            <param name="riid">IID of the interface that should be returned</param>
            <param name="pidls">An array of ItemIdLists relaive to the current folder</param>
            <returns>The requested COM object; <c>null</c> if the requested COM interface could not be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDropTarget">
            <summary>
            Returns the Windows Shell IDropTarget interfaces for the currently active object
            </summary>
            <returns>The IDropTarget interface for the active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDropTarget(Jam.Shell.ShellFolder)">
            <summary>
            Returns the Windows Shell IDropTarget interfaces for the currently active object
            </summary>
            <param name="p_ShellFolder">One of the special folder constants for that the Windows Shell IDropTarget interface should be returned.</param>
            <returns>The IDropTarget interface for the given shell folder.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDataObject">
            <summary>
            Returns the Windows Shell IDataObject interface for the currently active object wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <returns>The DataObject for the active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDataObject(Jam.Shell.ItemIdList[])">
            <summary>
            Returns the Windows Shell IDataObject interface for the passed relative <see cref="P:Jam.Shell.ShellBrowser.ItemIdList"/>s wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <param name="pidls">An array of ItemIdLists relative to the active folder.</param>
            <returns>The DataObject for the passed ItemIdLists.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetFirstItemIDListFromDataObject(System.Windows.Forms.IDataObject)">
            <summary>
            Returns the first item id list from the data object passed as a parameter.
            </summary>
            <param name="pDataObject">An instance of an IDataObject</param>
            <returns>Null if no itemid list is found within the data object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetItemIDListsFromDataObject(System.Windows.Forms.IDataObject)">
            <summary>
            Returns all absolute item id lists from the data object passed as a parameter.
            </summary>
            <param name="pDataObject">An instance of an IDataObject</param>
            <returns>an empty list if no item id lists are found within the dataobject</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetShellItemsFromDataObject(System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Retrieves the IShellItems from the passed IDataObject. Only works for Vista and later.
            </summary>
            <param name="pDataObject">The IDataObject</param>
            <returns>A list of IShellItemNative objects or null if no ShellItems could be retreived.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetItemIDListsFromDataObjectViaShellItems(System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Returns all absolute item id lists from the data object passed as a parameter.
            In contrast to <see cref="M:Jam.Shell.ShellBrowser.GetItemIDListsFromDataObject(System.Windows.Forms.IDataObject)"/> method is using ShellItems to retrieve ItemIdLists. 
            </summary>
            <param name="pDataObject">An instance of an IDataObject</param>
            <returns>An empty list if no item id lists are found within the dataobject.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetRelativeItemIDListsFromDataObject(System.Windows.Forms.IDataObject,Jam.Shell.ItemIdList@)">
            <summary>
            Returns all relative item id lists from the data object passed as a parameter
            </summary>
            <param name="pDataObject">An instance of an IDataObject</param>
            <param name="folderIdList">out parameter that contains the parent item id list</param>
            <returns>List of <see cref="P:Jam.Shell.ShellBrowser.ItemIdList"/> instances</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetItemIDListsFromDataObject(System.Windows.Forms.IDataObject,System.Int32,Jam.Shell.ItemIdList@,System.Collections.Generic.List{Jam.Shell.ItemIdList})">
            <summary>
            http://groups.google.com/group/microsoft.public.platformsdk.shell/browse_thread/thread/fdeda20d6841f433
            <see cref="M:Jam.Shell.ShellBrowser.GetItemIDListsFromDataObject(System.Windows.Forms.IDataObject)"/>, <see cref="M:Jam.Shell.ShellBrowser.GetFirstItemIDListFromDataObject(System.Windows.Forms.IDataObject)"/>
            </summary>
            <param name="pDataObject">The data object to retrieve information from</param>
            <param name="folderIdList">The absolute item id list of the parent folder</param>
            <param name="relativeItemIdList">A list structure where the relative itemidlists are stored. If this parameter is null no relative itemidlists are returned</param>
            <param name="max">if max&gt;0 get all item id lists up to max, otherwise get all</param>
            <returns>A (possibly empty array) of ItemIdLists</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetLinkTarget(System.String)">
            <summary>
            Returns the target a windows file link (.lnk file) is pointing to.
            </summary>
            <param name="pPath">the path to the link</param>
            <returns>null if an error occured. if the file is not link, but a folder or file the empty string is returned. The absolute path to the referenced filename otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.Reset">
            <summary>
            Resets the enumeration of the items in the active folder. It can be started again using <see cref="M:Jam.Shell.ShellBrowser.Next"/>
            </summary>
            <seealso cref="M:Jam.Shell.ShellBrowser.Next"/>
            <seealso cref="P:Jam.Shell.ShellBrowser.FolderIdList"/>
            
        </member>
        <member name="M:Jam.Shell.ShellBrowser.Next">
            <summary>
            Moves on to next object in the active folder and makes it the active object. If Next has not been called before for the active folder, the first object is made active.
            </summary>
            <returns>true, if a next object was found. false, if no further object could be found.</returns>
            <exception cref="T:System.UnauthorizedAccessException">This exception is thrown when we can't access the active folder.</exception>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.SelectParent">
            <summary>
            Moves up to the parent of the current shell object
            </summary>
            <returns>true, if successful. false if no parent element is available or an error occured.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ConvertContextMenuStripToContextMenu(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Converts a ContextMenuStrip instance to a ContextMenu.
            </summary>
            <param name="pContextMenuStrip">The ContextMenuStrip instance to convert</param>
            <returns>an instance of ContextMenu</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.QueryBackgroundContextMenu(System.Drawing.Point)">
            <summary>
            Queries the Windows-BackgroundContextMenu. 
            This fixes bug #2156.
            </summary>
            <param name="p_Position">Position the BackgroundContextMenu is shown</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip,Jam.Shell.IContextMenu)">
            <summary>
            Creates a ContextMenu from the pContextMenuStrip and passes it to the
            particular ShowContextMenu method accepting Menus.
            </summary>
            <param name="pPosition">position to display the menu</param>
            <param name="pContextMenuStrip">the contextmenu strip to merge with the shell context menu, or <c>(ContextMenuStrip)null</c> if there is no ContextMenuStrip to merge.</param>
            <param name="icm">the IContextMenu container</param>
            <returns>A command string or the empty string</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Shows the shell context menu for the files contained in <see cref="P:Jam.Shell.ShellBrowser.MultiObjects"/> or the active object, adding the context menu entries contained in <paramref name="pContextMenuStrip"/>
            </summary>
            <param name="pPosition">Position on the screen at which the context menu should appear.</param> 
            <param name="pContextMenuStrip">ContextMenuStrip that should be merged with the shell context menu, or <c>(ContextMenuStrip)null</c> if there is no ContextMenuStrip to merge.</param> 
            <returns>the shell command that was executed, an empty string if no shell comand was executed.</returns>
            <example>
            <see cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)"/>
            </example>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)"/>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu)"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu)">
            <summary>
            Shows the shell context menu for the files contained in <see cref="P:Jam.Shell.ShellBrowser.MultiObjects"/> or the active object, adding the context menu entries contained in <paramref name="M"/>
            </summary>
            <param name="p">Position on the screen at which the context menu should appear.</param> 
            <param name="M">The menu to merge with the shell context menu, or <c>(Menu)null</c> if there is no menu to merge.</param>
            <returns>The shell command that was executed, an empty string if no shell comand was executed.</returns>
            <example>
            Showing the context menu for the Windows folder and adding additional menu items from ContextMenu "additionalContextMenu"
            <code>
            using ( ShellBrowser SB = new ShellBrowser(@"C:\Windows"))
            {
                SB.ShowContextMenu(new Point(100, 100), additionalContextMenu);
            }
            </code>
            </example>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)"/>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the files contained in <see cref="P:Jam.Shell.ShellBrowser.MultiObjects"/> or the active object.
            </summary>
            <param name="p">Position on the screen at which the context menu should appear.</param> 
            <returns>The shell command that was executed, an empty string if no shell comand was executed.</returns>
            <example>
            Showing the context menu for the Windows folder:
            <code>
            using (ShellBrowser lShellBrowser = new ShellBrowser(@"C:\Windows"))
            {
                lShellBrowser.ShowContextMenu(new Point(100, 100));
            }
            </code>
            </example>
            <example>
            Showing the context menu for 2 pdf files:
            <code>
            using (ShellBrowser lShellBrowser = new ShellBrowser()
            {
                lShellBrowser.Folder = @"C:\Pictures";
                lShellBrowser.MultiObjects.Add("Image1.jpg");
                lShellBrowser.MultiObjects.Add("Image2.jpg");
                lShellBrowser.ShowContextMenu(new Point(100, 100));
            }
            </code>        
            </example>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu)"/>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu,Jam.Shell.IContextMenu)">
            <summary>
            Displays a the shell context menu augmented by the menu passed as a parameter.
            The default shell entries of the contextmenu is set to 'explore', <see cref="F:Jam.Shell.CMF.CMF_EXPLORE"/>,
            if the shift modifier key is pressed <see cref="F:Jam.Shell.CMF.CMF_EXTENDEDVERBS"/> flag is set as well.
            Additionally if the <see cref="E:Jam.Shell.ShellBrowser.RenameItemSelected"/> event has been assigned the 'rename' menu entry 
            is shown.
            </summary>
            <param name="p">position to display the menu</param>
            <param name="M">the menu to merge with the shell context menu, or <c>(Menu)null</c> if there is no menu to merge.</param>
            <param name="icm">the IContextMenu container</param>
            <returns>A command string or the empty string</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu,Jam.Shell.IContextMenu,Jam.Shell.CMF)">
            <summary>
            Displays a the shell context menu augmented by the menu passed as a parameter.
            </summary>
            <param name="p">position to display the menu</param>
            <param name="M">the menu to merge with the shell context menu</param>
            <param name="icm">the IContextMenu container</param>
            <param name="ContextMenuFlags"></param>
            <returns>A command string or the empty string</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)">
            <summary>
            Returns the thumbnail image of the currently active shell object in the requested size.
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <returns>The thumbnail image as bitmap.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size,Jam.Shell.GetThumbnailCallback,System.Object)">
            <summary>
            Asynchronously extracts the thumbnail image of the currently active shell object in the requested size.
            <i>Only for folders on Vista or later</i> the size will always be quadratic with side length being the smallest of either p_Size.Width or p_Size.Height, 
            to avoid a stretching - use the synchronous call <see cref="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)"/> if you'd like to explicitly specify the dimensions
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <param name="p_CallBack">The method to be called when this asynchronous operation is completed.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <returns>An IAsyncResult that represents the result of the BeginInvoke operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size,Jam.Shell.GetThumbnailCallback,System.Object,System.Int32)">
            <summary>
            Asynchronously extracts the thumbnail image of the currently active shell object in the requested size.
            <i>Only for folders on Vista or later</i> the size will always be quadratic with side length being the smallest of either p_Size.Width or p_Size.Height, 
            to avoid a stretching - use the synchronous call <see cref="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)"/> if you'd like to explicitly specify the dimensions
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <param name="p_CallBack">The method to be called when this asynchronous operation is completed.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <param name="handle">The handle of the calling control. Used to tag the WorkerItems and to remove old WorkerItems tagged with this handle.</param>
            <returns>An IAsyncResult that represents the result of the BeginInvoke operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size,Jam.Shell.GetThumbnailCallback,System.Object,System.Int32,System.Boolean)">
            <summary>
            Asynchronously extracts the thumbnail image of the currently active shell object in the requested size.
            <i>Only for folders on Vista or later</i> the size will always be quadratic with side length being the smallest of either p_Size.Width or p_Size.Height, 
            to avoid a stretching - use the synchronous call <see cref="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)"/> if you'd like to explicitly specify the dimensions
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <param name="p_CallBack">The method to be called when this asynchronous operation is completed.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <param name="handle">The handle of the calling control. Used to tag the WorkerItems and to remove old WorkerItems tagged with this handle.</param>
            <param name="p_UseIcons">If true the icon is used as thumbnail, if the file doesn't support thumbnails </param>
            <returns>An IAsyncResult that represents the result of the BeginInvoke operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.FromHbitmap(System.IntPtr,System.Drawing.Size,System.Drawing.Bitmap@)">
            <summary>
            Converts a handle to a HBITMAP structure to an Image instance.
            If the size given is lesser than 256 pixels in width and height,
            the alpha channel is preserved.
            </summary>
            <param name="pHBitmap">hbitmap handle</param>
            <param name="pSize">size structure</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
            <returns>An instance of <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetOverlayIndex">
            <summary>
            Use GetOverlayIndex to get the index of the overlay icon of the current object.
            </summary>
            <returns>Returns the index of the overlay icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.RenameObject(System.String)">
            <summary>
            Renames the current object.
            </summary>
            <param name="newName">the new name that should be set for the current object.</param>
            <returns>The actual name of the current object after the attempt to rename it. It may happen that Windows does not allow the rename, then the old name will be returned. Otherwise the new name should be returned.</returns>
            <exception cref="T:System.ArgumentNullException">if null was passed for the newName parameter</exception>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.RenameObject(System.String,System.Boolean@)">
            <summary>
            Renames the current object.
            </summary>
            <param name="newName">the new name that should be set for the current object.</param>
            <param name="success">out parameter that is true if the rename was successful</param>
            <returns>The actual name of the current object after the attempt to rename it. It may happen that Windows does not allow the rename, then the old name will be returned. Otherwise the new name should be returned.</returns>
            <exception cref="T:System.ArgumentNullException">if null was passed for the newName parameter</exception>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.AsyncOperations">
            <summary>
            Activates asynchronous file operations executed via <see cref="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(System.String)"/>.
            </summary>
            <remarks>Depending on OS version and ContextMenu operation does not always apply.</remarks>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.FolderIdList">
            <summary>
            This property should only be used by advanced users. 
            The returned ItemIdList has to be freed  when it is not needed any more.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.ItemIdList">
            <summary>
            This property should only be used by advanced users. It returns a copy of the ItemIdList of the current object. Important: The returned ItemIdList has to be freed using CoTaskMemFree when it is not needed any more.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.AbsoluteItemIdList">
            <summary>
            This property should only be used by advanced users. It sets or returns the absolute ItemIdList of the current object. The returned pointer to an ItemIdList will be valid, until a new object was selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed. Exceptions are 'My Computer', 'Libraries' and 'Network'
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.Folder">
            <summary>
            Use Folder to specify the path of the folder, which should be browsed or to get the path that is currently active.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.FullPath">
            <summary>
            Gets or set the full path of the active object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.SpecialFolder">
            <summary>
            Get or set a special folder as the currently active folder
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder 
            that is set is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.SpecialObject">
            <summary>
            Get or set a special object as the currently active object
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.MultiObjects">
            <summary>
            Path of one or more file system objects that is used by <see cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)"/> and <see cref="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(System.String)"/> to show the context menu for or invoke context menu commands for multiple files or folders.
            </summary>
            <remarks>Files contained in MultiObjects have to be relative to the <see cref="P:Jam.Shell.ShellBrowser.Folder"/> property of the Shellbrowser instance.</remarks>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)"/>
            <seealso cref="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(System.String)"/>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.ObjectName">
            <summary>
            Use ObjectName to specify the current object or to retrieve the file system name of the current object.
            A valid folder must be set, see <see cref="T:Jam.Shell.IO.Path"/> and <see cref="P:Jam.Shell.ShellBrowser.SpecialFolder"/>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no active ShellFolder.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the set value is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the object can't be found.</exception>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.ReadOnly">
            <summary>
            If set to 'true', context menu operations that make changes to the file system will not be executed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.ShowErrorMessages">
            <summary>
            If set to to 'true', error messages will be shown to the user. If set to 'false', error messages will be suppressed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.DefaultSortColumn">
            <summary>
            Get the default sort column of the currently selected ShellFolder.
            </summary>
            <returns>The default sort column of the currently selected ShellFolder.</returns>
            
        </member>
        <member name="P:Jam.Shell.ShellBrowser.ShowShellContextMenuOnTop">
            <summary>
             Decides if the shell context menu is added above or below the supplied ContextMenuStrip.
            </summary>
            <remarks>
            If this property is set to <c>true</c>, the shell context menu will be added on top of the
             the <see cref="T:System.Windows.Forms.ContextMenuStrip"/>, which can be supplied when calling
            <see cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>. If set to <c>false</c>, the shell
            context menu will be added below the <see cref="T:System.Windows.Forms.ContextMenuStrip"/>.
            </remarks>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IsXpOrLater">
            <summary>
            Returns true if the system runs the windows xp operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IsVistaOrLater">
            <summary>
            Returns true if the system runs the windows vista operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IsWindows7OrLater">
            <summary>
            Returns true if the system runs the Windows 7 operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IsWindows8OrLater">
            <summary>
            Returns true if the system runs the Windows 8 operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.FileExtensionsHidden">
            <summary>
            Returns true of the system settings for "Hide known file extensions" is set to true.
            </summary>
            <returns>True of the system settings for "Hide known file extensions" is set to true.</returns>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IsFolder">
            <summary>
            Can be used to query if the currently active object is a folder or not.
            </summary>
            <returns>true, if the currently active object is a folder, false otherwise</returns>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IsEnumerable">
            <summary>
            True if the currently active object is a folder and can be browsed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.HasSubFolders">
            <summary>
            Checks if the currently active object has subfolders.
            </summary>
            <returns>true, if the currently active object has subfolders, false otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IconNumber">
            <summary>
            Use IconNumber to get the number of the icon for the current object. 
            </summary>
            <remarks>
            IconNumber contains the number of the icon in the system image list. 
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBrowser.SelectedIconNumber"/>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.SelectedIconNumber">
            <summary>
            Use SelectedIconNumber to get the number of the 'opened' icon for the current object.
            </summary>
            <remarks>
            SelectedIconNumber contains the number of the 'opened' icon in the system image list. Only the selected icons of folder objects will differ from the normal icon.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBrowser.IconNumber"/>
        </member>
        <member name="E:Jam.Shell.ShellBrowser.ContextMenuItemSelected">
            <summary>
            This event is fired when a context menu item is selected.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBrowser.BeforeShellCommand">
            <summary>
            This event is fired before a shell command is executed. It can be intercepted
            by setting <see cref="P:Jam.Shell.BeforeShellCommandEventArgs.ExecuteShellCommand"/> to false in 
            the event handler.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBrowser.RenameItemSelected">
            <summary>
            This event is fired when the context menu option "Rename" is selected.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellBrowser.ShellPartContextMenu">
            <summary>
            Used as base context menu for the Shell context menu.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShellPartContextMenu.#ctor(System.Windows.Forms.Menu)">
            <summary>
            Creates a new context menu that can be used as basis for the shell context menu.
            </summary>
            <param name="aMenu">If a menu is given, this menu will be a clone of the given menu.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShellPartContextMenu.TriggerUserMenuItem(System.Windows.Forms.Menu,System.Int32,System.Boolean)">
            <summary>
            Triggers the click event of the MenuItem with the given Win32 ID. 
            The method searches recursively in the given menu.
            </summary>
            <param name="pMenu">The menu in which should be searched for the given ID.</param>
            <param name="id">The Win32 menu item ID for whose MenuItem the Click event should be triggered.</param>
            <param name="pShellMenuOnTop">Flag that indicates whether the shell context menu is shown on top of the custom menu or not.</param>
            <returns>Returns true, if the click event of the menu item has been triggered.</returns>
        </member>
        <member name="T:Jam.Shell.ShellBrowser.ToolStripMenuItemWrapper">
            <summary>
            Creates a MenuItem instance and wraps all properties of the ToolStripMenuItem possible
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ToolStripMenuItemWrapper.#ctor(System.Windows.Forms.ToolStripItem)">
            <summary>
            copy constructor
            supports ordinary ToolStripMenuItems and ToolStripSeparators
            </summary>
            <param name="pToolStripItem">The ToolStripItem to emulate</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ToolStripMenuItemWrapper.OnEvent``1(System.String,``0)">
            <summary>
            Raises an event by calling the protected OnXyz method reflectively.
            </summary>
            <param name="eventTrigger">The name of the method to call, ie. "OnClick"</param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ToolStripMenuItemWrapper.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the ToolStripMenuItem.Click event by
            calling the protected <see cref="M:System.Windows.Forms.ToolStripMenuItem.OnClick(System.EventArgs)"/> method reflectively.
            </summary>
            <param name="source">source of the event, ignored</param>
            <param name="e"></param>
        </member>
        <member name="T:Jam.Shell.ShellBrowser.ContextMenuStripWrapper">
            <summary>
            Creates a ContextMenu instance and wraps most of the base functionality of the ContextMenuStrip
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ContextMenuStripWrapper.OnEvent``1(System.String,``0)">
            <summary>
            Raises an event by calling the protected OnXyz method reflectively.
            </summary>
            <param name="eventTrigger">The name of the method to call, ie. "OnClick"</param>
            <param name="e"></param>
        </member>
        <member name="T:Jam.Shell.ShellControlHelper">
            <summary>
            A class with several helpful methods.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.VariantToString(System.Object,Jam.Shell.SHCOLUMNID)">
            <summary> This method converts the given variant to a string. </summary>
            <param name="pVariant">The variant that should be converted.</param>
            <param name="pColumnType">An optional shell column that can be passed and is used to determine the type of the variant.</param>
            <remarks>
            If a VariantArray is passed, the variants are concatenated by semicolons.
            If the ShColumnId is the VolumeFreeSize or Size column, the byte size is formated.
            If the ShColumnId is the write, create or access time, the given UTC time is converted to local time.
            </remarks>
            <returns> The converted variant as a String. </returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.VariantToStringVistaOrLater(System.Object,Jam.Shell.SHCOLUMNID)">
            <summary>
            Converts a variant to string for vista or later.
            </summary>
            <param name="pVariant">The variant.</param>
            <param name="pColumnType">Type of the column.</param>
            <returns>The variant as string.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.UTCtoLocalTime(System.Object)">
            <summary>
            Converts UTC to local time.
            </summary>
            <param name="pUTCTime">The UTC time.</param>
            <returns>The local time</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.ObjectToInt64(System.Object)">
            <summary>
            Tries to parse the the object to int.
            </summary>
            <param name="pVariant">The object that contains the int.</param>
            <returns>The integer value; 0 if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.GetCurrentDPI">
            <summary>
            Returns the currently set DPI.
            </summary>
            <returns>The current value for Dots per Inch.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.CreateDragHelper(System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>Creates a <c>IDragSourceHelper</c> COM object that enables Windows Vista+ style drag images and drag hints.</summary>
            <param name="pForDataObject">The data object for which the <c>IDragSourceHelper</c> should be created.</param>
            <returns> None: There is no need to store or reference the IDragSourceHelper object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.SetEditableCaption(System.IntPtr,System.String)">
            <summary>
            Sets the editable caption of the editable component of a control.
            </summary>
            <param name="pEditControlHandle">The handle of the edit control of the component, the editable text is applied to. Retrievable e.g. by LVM.LVM_GETEDITCONTROL for a ListView.</param>
            <param name="pLabelText">The text that should appear on editing.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.SetEditableCaption(System.IntPtr,Jam.Shell.IShellItem,System.String,System.String@)">
            <summary>
            Sets the editable caption of the editable component of a control.
            Currently removes the drive letter of drive names.
            </summary>
            <param name="pEditControlHandle">The handle of the edit control of the component, the editable text is applied to. Retrievable e.g. by LVM.LVM_GETEDITCONTROL for a ListView.</param>
            <param name="pShellItem">The IShellItem. Needed to determine if its a Drive.</param>
            <param name="pCaption">The caption to be transformed.</param>
            <param name="pLabelText">The text that was set as label</param>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.FromHbitmap(System.IntPtr,System.Drawing.Size,System.Drawing.Bitmap@)">
            <summary>
            Converts a handle to a HBITMAP structure to an Image instance.
            If the size given is lesser than 256 pixels in width and height,
            the alpha channel is preserved.
            </summary>
            <param name="pHBitmap">bitmap handle</param>
            <param name="pSize">size structure</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
            <returns>An instance of <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.GetBitmapFromHBitmap(System.IntPtr,System.Drawing.Bitmap@)">
            <summary>
            Gets a Bitmap from the given IntPtr with a correct alpha channel.
            </summary>
            <param name="nativeHBitmap">IntPtr to a Bitmap.</param>
            <param name="pBitmapSource">The source that is used to create the bitmap. Might be null if no alpha channel is used.</param>
            <returns>The bitmap including it`s alphachannel.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.GetlAlphaBitmapFromBitmapData(System.Drawing.Imaging.BitmapData)">
            <summary>
            Gets the bitmap with it`s alpha channel.
            </summary>
            <param name="bmpData">BitmapData of the Bitmap.</param>
            <returns>A bitmap including an alpha channel.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.IsAlphaBitmap(System.Drawing.Bitmap,System.Drawing.Imaging.BitmapData@)">
            <summary>
            Checks if there is an alpha channel for the given bitmap.
            </summary>
            <param name="bmp">The bitmap that should be checked.</param>
            <param name="bmpData">The attributes of the bitmap.</param>
            <returns>True if there is an alpha channel.</returns>
        </member>
        <member name="T:Jam.Shell.ShellThumbnail">
            <summary>
            Internal class that extracts thumbnails.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellThumbnail.ThumbnailThreadProc(System.Object)">
            <summary>
            Gets the thumbnail within a worker item.
            </summary>
            <param name="pThumbInfo">The state of the worker item.</param>
        </member>
        <member name="M:Jam.Shell.ShellThumbnail.GetIThumbnailProvider(System.IntPtr)">
            <summary>
            Get the Thumbnailprovider interface for vista and later
            </summary>
            <returns>A Thumbnailprovider com object on vista and later, null otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellThumbnail.GetThumbnailBitmap(Jam.Shell.IExtractImage,System.Drawing.Bitmap@)">
            <summary>
            Returns the thumbnail image in the requested size.
            On Vista+ it tries to load a thumbnail via IShellItemImageFactory first, a user provided ThumbnailProvider second, then the icon via IShellItemImageFactory.
            If this fails or in XP the thumbnail is fetched via the provided IExtractImage.
            The <see cref="T:Jam.Shell.IExtractImage"/> com object is <i>always</i> released via <see cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)"/>,
            </summary>
            <param name="pIExtractImage">IExtractImage COM object representing the item to fetch the thumbnail for.</param>
            <param name="pBitmapSource">The source used to create the Image. May be null</param>
            <returns>The thumbnail image</returns>
        </member>
        <member name="T:Jam.Shell.ThumbnailInfo">
            <summary>
            Information structure to retrieve the thumbnails asynchronously
            </summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.Callback">
            <summary>The callback function that is called when the thumbnail is available</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.State">
            <summary>The state that is passed to the <see cref="F:Jam.Shell.ThumbnailInfo.Callback"/> function as a parameter</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.Size">
            <summary>The requested size of the thumbnail</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.IExtractImage">
            <summary>Reference to the IExtractImage interface (no alpha channel)</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.AbsoluteItemIdListPtr">
            <summary> The pointer to the AbsoluteItemIdList of the item. It's not being disposed.</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.IconsAsThumbnail">
            <summary> If an icon for the file should be loaded if no thumbnail is available.</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.Path">
            <summary>
            The path of the file.
            </summary>
        </member>
        <member name="T:Jam.Shell.BeforeShellCommandEventArgs">
            <summary>
            The BeforeShellCommandEventArgs contains data for the <see cref="E:Jam.Shell.ShellBrowser.BeforeShellCommand"/> event.
            You can permit the execution of the shell command by registering to the event, then setting
            <see cref="P:Jam.Shell.BeforeShellCommandEventArgs.ExecuteShellCommand"/> to false if necessary.
            </summary>
        </member>
        <member name="M:Jam.Shell.BeforeShellCommandEventArgs.#ctor(System.String,Jam.Shell.PathCollection)">
            <summary>
            Default constructor.
            </summary>
            <param name="verb">The command verb</param>
            <param name="paths">The paths affected</param>
        </member>
        <member name="P:Jam.Shell.BeforeShellCommandEventArgs.Verb">
            <summary>
            The verb of the shell command that is to be performed.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellCommandEventArgs.Paths">
            <summary>
            The paths the shell command will affect. (readonly)
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellCommandEventArgs.ExecuteShellCommand">
            <summary>
            Set this to false if you want to permit the execution of 
            the shell command.
            </summary>
        </member>
        <member name="T:Jam.Shell.BeforeShellDropEventArgs">
            <summary>
            The BeforeShellDropEventArgs contains data for the BeforeShellDrop event.
            You can permit the execution of the shell command by registering to the event, then setting
            <see cref="P:Jam.Shell.BeforeShellDropEventArgs.ExecuteShellDrop"/> to false if necessary.
            </summary>
        </member>
        <member name="M:Jam.Shell.BeforeShellDropEventArgs.#ctor(Jam.Shell.IShellItem,Jam.Shell.PathCollection,System.Windows.Forms.IDataObject)">
            <summary>
            The public constructor for BeforeShellDropEventArgs.
            </summary>
            <param name="target">The drop target.</param>
            <param name="files">The affected files.</param>
            <param name="dataObject">The IDataObject containing the dragged data.</param>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.Files">
            <summary>
            The files the shell command will drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.Target">
            <summary>
             Returns the drop target.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.ExecuteShellDrop">
            <summary>
            Set this to false if you want to permit the execution of 
            the shell drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.DataObject">
            <summary>
            Returns the IDataObject holding the object that is dragged.
            </summary>
            <value>
            An <see cref="T:System.Windows.Forms.IDataObject"/>.
            </value>
        </member>
        <member name="T:Jam.Shell.ContextMenuItemSelectedEventArgs">
            <summary>
            The ContextMenuItemSelectedEventArgs contains data for the <see cref="E:Jam.Shell.ShellBrowser.ContextMenuItemSelected"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ContextMenuItemSelectedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ContextMenuItemSelectedEventArgs"/> class.
            </summary>
            <param name="aCommand">Contains the context menu item, which has been selected.</param>
        </member>
        <member name="P:Jam.Shell.ContextMenuItemSelectedEventArgs.Command">
            <summary>
            Contains the context menu item, which has been selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.ContextMenuItemSelectedEventArgs.ExecuteCommand">
            <summary>
            Set to true if the selected command should be executed or set to false if not.
            </summary>
        </member>
        <member name="T:Jam.Shell.SetCursor">
            <summary>
            Show the wait cursor for the whole application as long as the object is not disposed.
            </summary>
            <remarks>The previously active cursor is saved and restored when the object is disposed.</remarks>
            <example>
            using new SetCursor
            {
               // Your slow code goes here
            }
            </example>
        </member>
        <member name="M:Jam.Shell.SetCursor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SetCursor"/> class and makes the <see cref="P:System.Windows.Forms.Cursors.WaitCursor"/> the active cursor.
            </summary>
            <remarks>This class should only be used with the <c>using</c> statement.</remarks>
            <seealso cref="T:Jam.Shell.SetCursor"/>
            <seealso cref="T:System.Windows.Forms.Cursors"/>
            <seealso cref="M:Jam.Shell.SetCursor.#ctor(System.Windows.Forms.Cursor)"/>
        </member>
        <member name="M:Jam.Shell.SetCursor.#ctor(System.Windows.Forms.Cursor)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SetCursor"/> class and makes the passed cursor the active cursor.
            </summary>
            <param name="p_NewCursor">the new cursor to set</param>
            <remarks>This class should only be used with the <c>using</c> statement.</remarks>
        </member>
        <member name="M:Jam.Shell.SetCursor.Dispose">
            <summary>
            Resets the active cursor to the cursor that was active when this instabce was initialized.
            </summary>
            <seealso cref="T:Jam.Shell.SetCursor"/>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_JamComponentName">
            <summary>
            The Components' Name as a constant
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_JamComponentUrl">
            <summary>
            The URL to get further information on the component, and download it
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_MessageDevelopmentLicenseContent">
            <summary>
            The content of the development license messagebox that appears if <see cref="F:Jam.Shell.LicenseChecking.c_JamDesignDll"/> is not found
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_MessageDevelopmentLicenseHeader">
            <summary>
            The header text field of the development license messagebox that appears if <see cref="F:Jam.Shell.LicenseChecking.c_JamDesignDll"/> is not found
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_DesignType">
            <summary>
            The type to instantiate in JamDesign.dll
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_JamDesignDll">
            <summary>
            In design mode the fullversion must provide the file JamDesign.dll to be fully functional
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_RegKeyShellBrowser">
            <summary>
            The registry path to the ShellBrowser Software
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_RegValueAppPath">
            <summary>
            Value to the applicationpath that is set in the registry by the installation routine
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_JamBinDir">
            <summary>
            Path to the Dll-Binaries in the installed location
            </summary>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.m_DesignAssembly">
            <summary>
            This holds a reference to the JamDesign.dll assembly, it is only set if it 
            was found in VerifyDevelopmentLicense
            </summary>
        </member>
        <member name="M:Jam.Shell.LicenseChecking.ShowComponentInformation">
            <summary>
            This method shows the usage information from JamDesign.dll at design-time
            </summary>
        </member>
        <member name="M:Jam.Shell.LicenseChecking.VerifyPublicKey(System.Object)">
            <summary>
            This method verifies the public keys (parameters are obfuscated).
            It does so by checking the public-key of the ExecutingAssembly against
            the public key given in the parameter.
            </summary>
            <param name="pkey">the public key to check for, needs to be of type byte[]</param>
            <returns>true if both public keys match</returns>
        </member>
        <member name="M:Jam.Shell.LicenseChecking.VerifyDevelopmentLicense">
            <summary>
            Verifies the availability of a development license for the components.
            The method first tries to open the registry key to the application path
            in HKEY_LOCAL_MACHINE, if it is not found it looks in HKEY_CURRENT_USER
            and searches for the development license in the sub directory \bin
            if both keys do not exist it tries to locate the license assembly
            in the path this assembly has been loaded from. 
            </summary>
            <returns>true if the development license is valid</returns>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceNewFolder">
            <summary>
            The "New Folder" resource string
            </summary>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceControlPanel">
            <summary>
            The "Control Panel" resource string
            </summary>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceAllControlPanelElements">
            <summary>
            The "All Control Panel Items" resource string.
            </summary>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceNewShortcut">
            <summary>
            The "New Shortcut" resource string
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellListItem">
            <summary>
            Represents an item of the Windows shell namespace in a <see cref="P:Jam.Shell.ShellListItem.ShellListView"/>
            </summary>
            <seealso cref="P:Jam.Shell.ShellListItem.ShellListView"/>
        </member>
        <member name="F:Jam.Shell.ShellListItem.m_StillExists">
            <summary>
            Used during SmartRefresh to see which items still exists in the file system
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListItem.m_IsFolder">
            <summary>
            <c>true</c>, if this item is a folder; <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Boolean)">
            <summary>
            Initalizes a new ShellListItem.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of this shell item.</param>
            <param name="p_Text">The text that should be shown for this shell item.</param>
            <param name="p_IsFolder">Pass <c>true</c>, if this item is a folder; <c>false</c> otherwise.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.#ctor(Jam.Shell.ItemIdList,Jam.Shell.ItemIdList,System.String,System.Boolean)">
            <summary>
            Initalizes a new ShellListItem.
            </summary>
            <param name="p_AbsoluteItemIdList">The absolute ItemIdList of this shell item. If initialized with null a call to <see cref="M:Jam.Shell.ShellListItem.GetItemPidls"/> will fetch it.</param>
            <param name="p_ItemIdList">The ItemIdList relative to the parent folder of this shell item.</param>
            <param name="p_Text">The text that should be shown for this shell item.</param>
            <param name="p_IsFolder">Pass <c>true</c>, if this item is a folder; <c>false</c> otherwise.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CreateFolder(System.String)">
            <summary>
            Creates a new Folder if the ShellListNode is a Folder;
            may throw an Exception, see <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/> for the Exceptions that can occur
            </summary>
            <param name="p_FolderName">The folder name of the new sub folder to create</param>
            <returns>true if the folder was created successfully</returns>
        </member>
        <member name="M:Jam.Shell.ShellListItem.GetDataObject">
            <summary>
            Returns the Windows Shell IDataObject interface for this shell item wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <returns>The DataObject for this shell list item</returns>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CompleteColumns(System.Boolean)">
            <summary>
            Complete the column information of the item.
            </summary>
            <param name="p_ResetItemDetails">If true, all item details will be refreshed. If false, they will only be refreshed if <see cref="P:Jam.Shell.ShellListBaseItem.ColumnInfoAvailable"/> is false.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.FillSubitems">
            <summary>
            Complete the column information of the item.
            In contrast to <see cref="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>, this method may not be called from a different thread.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListItem.FillSubitems(System.Int32)">
            <summary>
            Completes the column information of the item.
            In contrast to <see cref="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>, this method may not be called from a different thread.
            </summary>
            <param name="index">Just the subitems for the given column index will be updated.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.RemoveSubItem(System.Int32)">
            <summary>
            Removes the subitem at the passed position and adjusts the variant array.
            </summary>
            <param name="pPosition">The postion of the subitem to remove.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Completes the details of the ShellListItem 
            </summary>
            <param name="listView">The ListView the this ShellListItem is associated with.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.InvokeCompleteDetails(Jam.Shell.JamBaseShellListView,Jam.Shell.ItemIdList)">
            <summary>
            Invokes the <see cref="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView,Jam.Shell.ItemIdList,System.Boolean)"/> method from within the GUI thread
            </summary>
            <param name="listView"></param>
            <param name="absoluteItemIdList">the absoluteItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView,Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Complete the details of the ShellListItem details 
            </summary>
            <param name="listView"></param>
            <param name="absoluteItemIdList">if this reference is not null, the call is from a different thread</param>
            <param name="guiThread">this is true if called from the guithread (CoInitializeEx) false if calling thread is unknown</param>
        </member>
        <member name="P:Jam.Shell.ShellListItem.ListView">
            <summary>
            A <see cref="P:Jam.Shell.ShellListItem.ShellListView"/> that contains this item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListItem.IsParentFolderItem">
            <summary>
            Returns true, if this item represents the parent folder, which is usually displayed as ".."
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListItem.ShellListView">
            <summary>
            The same instance as <see cref="P:Jam.Shell.ShellListItem.ListView"/>ListView but typed as <see cref="P:Jam.Shell.ShellListItem.ShellListView"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListItem.StillExists">
            <summary>
            Can be used internally to flag an item as "present" or "not present"
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListItem.IsFolder">
            <summary>
            Is <c>true</c> if this item is a folder; <c>false</c> otherwise.
            </summary>
        </member>
        <member name="T:Jam.Shell.BackgroundContextMenu">
            <summary>
            This class provides most of the default background context menu
            functionality from the windows explorer.
            </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewThumbnail">
            <summary>constant to distinguish between menu items - Thumbnail view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewSmall">
            <summary>constant to distinguish between menu items - small view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewBig">
            <summary>constant to distinguish between menu items - big view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewList">
            <summary>constant to distinguish between menu items - list view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewDetails">
            <summary>constant to distinguish between menu items - details view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewTile">
            <summary>constant to distinguish between menu items - tile view </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.BackgroundContextMenu"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnBackgroundContextMenuOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Is called if the background context menu is just opened up.
            Used to determine which items are shown.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.SetupMenuItems">
            <summary>
            Sets up the menu items.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opening"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnArrangeIconsDropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Updates the drop down items when the user opens the drop down
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnItemArrangeClick(System.Object,System.EventArgs)">
            <summary>
            This method is called if the user arranges items (changes the sort order)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnItemClick(System.Object,System.EventArgs)">
            <summary>
            This method is called if the user changes the type of view
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewFileFolderDropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Set up the icon of the 'new folder' entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.CreateNewFileDropDownItems">
            <summary>
            This method scans the registry and adds dropdown items for each available new file entry
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.InitializeContextMenu">
            <summary>
            Method to initialize the BackgroundContextMenu to generate the RegistryKey
            containing the "New File"-entries.
            Prevents NullPointerException (Bug #2156)
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.BuildNewFileSubItem(System.String,System.String)">
            <summary>
            Builds a NewFile-SubItem.
            </summary>
            <param name="p_extension">Extension of the NewFile-Item.</param>
            <param name="p_valueName">Name of the NewFile-Item.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.ByteArrayToExtension(System.Byte[])">
            <summary>Converts a byte-array to a hex string and returns a file extension.</summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.RegValueToExtension(System.String)">
            <summary>
            Returns the extension to a given Registryentry-Value for a NewShellEntry (Windows XP).
            </summary>
            <param name="regValue">A Registryentry-Value from NewShell as string.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.searchTemplate(Microsoft.Win32.RegistryKey)">
            <summary>
            Checks whether a template is given or not.
            </summary>
            <param name="key">The registrykey assiociated to the filextension located in ClassesRoot.</param>
            <returns>Fullpath to the Templatefile or String.Empty</returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewFileSubItemClick(System.Object,System.EventArgs)">
            <summary>
            The event after a create-new-file-item of the contextmenu was clicked.
            </summary>
            <param name="sender">The sender-object.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.checkFileName(System.String,System.String,System.String)">
            <summary>
            Check if given filename already exists in given path. 
            If true, tries adding a (1), (2), (3) or (4). 
            If they exist too, it returns an empty string.
            </summary>
            <param name="filename">filename to be checked</param>
            <param name="extension">extension of the filename</param>
            <param name="path">path where the file is located</param>
            <returns>A free filename or String.empty</returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.ExtensionsHidden">
            <summary>
            Checks whether the Windows-option "Hide extensions of known filetypes" is set
            </summary>
            <returns>True, if extensions are hidden</returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.StartProcess(System.String,System.String)">
            <summary>
            Run a command with the given arguments
            </summary>
            <param name="command">command to be executed</param>
            <param name="arguments">arguments for the given command</param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewFolderClick(System.Object,System.EventArgs)">
            <summary>
            This event occurs if the user selected the 'new folder' item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewShortcutClick(System.Object,System.EventArgs)">
            <summary>
            This event occurs if the user selected the 'new shortcut' item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.ListView">
            <summary>
            Gets or sets the listview this context menu is associated with
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.ArrangeIconsString">
            <summary>
            The localizable string of the sort entry in the menu.
            Unfortunately we cannot provide a windows shell default string for this.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.ArrangeIcons">
            <summary>
            Returns the dynamic collection of ToolStripItems for the sortable columns.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.View">
            <summary>
            Returns the collection ToolStripItems for different view modes.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.Actualize">
            <summary>
            The ToolStripItem 'refresh'
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.Insert">
            <summary>
            Contains the ToolStripItem 'paste'
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.InsertAsLink">
            <summary>
            The toolstrip item to insert a link to file(s) on the the clipboard, 
            this functionality is not yet available, hence the items is not added to the background 
            context menu per default.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.NewFolder">
            <summary>
            The menu item to create a new folder in the current directory
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.NewShortcut">
            <summary>
            The menu item to create a new shortcut in the current directory
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.NewFileFolder">
            <summary>
            The drop down menu item containing the new <see cref="P:Jam.Shell.BackgroundContextMenu.NewFolder"/> item.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.Properties">
            <summary>
            Returns the "Properties" toolstrip menu item
            </summary>
        </member>
        <member name="T:Jam.Shell.BackgroundContextMenu.TypeOfAction">
            <summary>
            Enumeration of action-types. Besides the default-case (an empty file is created) and a given
            template (that will be copied later on), a special treatment for MS Briefcase
            and the contact-files (vista or later) is required.
            It`s used in the parameter-list of the NewFile-Menu-Subitems
            </summary>
        </member>
        <member name="T:Jam.Shell.BackgroundContextMenu.CreateNewFileParams">
            <summary>
            A class for the Parameters needed to create a new file. Will be used for the "tag"-attribute of
            our ToolStripMenuItems in the create-new-file-section of the contextmenu.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.Name">
            <summary>
            Return the Name.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.Extension">
            <summary>
            Return the Extension.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.ActionType">
            <summary>
            Return the <see cref="T:Jam.Shell.BackgroundContextMenu.TypeOfAction"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.Template">
            <summary>
            Return the Template.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellListView">
            <summary>
            This control displays the contents of a folder in a listview. When the user right clicks on a folder, it will automatically show the context menu.
            Use to <see cref="P:Jam.Shell.ShellListView.Path"/> property to get or set the current folder, use the <see cref="P:Jam.Shell.ShellListView.SpecialFolder"/> property to set a special folder like the Control Panel. 
            The <see cref="P:Jam.Shell.ShellListView.Filter"/> property can be used to filter certain files by extension. The <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method refreshes the displayed information. 
            You can synchronize a ShellListView with a <see cref="T:Jam.Shell.ShellTreeView"/> by using the <see cref="T:Jam.Shell.ShellControlConnector"/> property.
            By default, a double click is handled by the control and it tries to perform the default action for the selected object.
            <para> </para>
            Items that are contained in the list are of type <see cref="T:Jam.Shell.ShellListItem"/>. This applies to the <see cref="P:Jam.Shell.ShellListView.Items"/> and the <see cref="P:Jam.Shell.ShellListView.SelectedItems"/> properties.
            <para> </para>
            Sorting is handled automatically by this list when column headers are clicked. If custom sorting is needed, an <see cref="T:System.Collections.IComparer"/> can be assigned to property <see cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>.
            See <see cref="M:Jam.Shell.JamBaseShellListView.Sort"/> for an example.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_UseThreadPool">
            <summary><see cref="P:Jam.Shell.ShellListView.UseThreadPool"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_ListChangedAfterDragLeave">
            <summary>
            Indicates that the list changed after a DragLeave was executed; bug #6536
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_DragLeaveOccurred">
            <summary>
            Indicates that a DragLeave was executed recently; bug #6536
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_PendingFileSelection">
            <summary>
            This list contains files that are to be selected the next time 
            the update time refreshes. <see cref="M:Jam.Shell.ShellListView.UpdateTimerChange(System.Object,System.EventArgs)"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetSelectedItemCollectionType">
            <summary>
            Gets the type of the Selected Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/> for the inheriting classes.
            </summary>
            <returns>
            A <see cref="T:Jam.Shell.ShellListItem"/> typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/>
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetItemCollectionType">
            <summary>
            Gets the type of the Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/> for the inheriting classes.
            </summary>
            <returns>
            A <see cref="T:Jam.Shell.ShellListItem"/> typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/>
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellListView"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnBeforeFullRefresh">
            <summary>
            Fires the BeforeFullRefresh event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnPopulated">
            <summary>
            Fires the Populated event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnPathChanged">
            <summary>
            Fires the PathChanged event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnAddItem(Jam.Shell.ShellListItem)">
            <summary>
            Fires an event if an item is added to the list.
            </summary>
            <param name="Item">The item that should be added.</param>
            <returns>True if the item should be added, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetListViewItemSorter">
            <summary>
            Returns the Comparer to be used when the list is sorted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.CompleteDetails(Jam.Shell.ShellListItem)">
            <summary>
            Completes the details of an item, like image index, sub items etc.
            If <see cref="P:Jam.Shell.ShellListView.UseThreadPool"/> is true, the items image index is obtained via a thread pool.
            </summary>
            <param name="aItem">the item</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.AcquireImageIndecesViaThreadPool(Jam.Shell.ShellListItem)">
            <summary>
            This method enqueues a work item into the system threadpool to 
            get the image indeces of the particular ShellListItem.
            </summary>
            <param name="aItem">The ShellListItem to get the image indexes for</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.CompleteDetailsCallBack(System.Object)">
            <summary>
            This method is called if the user work item gets dequeued from the threadpool.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.ShellListView.TryToAddShellItems">
            <summary>
            Tries to add the shell items of the current folder to the list.
            </summary>
            <returns>False if the items could not be added, e.g. because the Access to the current folder was denied.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.AddShellItem">
            <summary>
            Adds the currently active item of m_ShellBrowser to the list
            </summary>
            <returns>If successful, returns the added item. If not, returns null. </returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.AddParentFolderItem">
            <summary>
            Add an item ".." which represents the parent folder
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.InitColumns">
            <summary>
            Prepares the columns according to the currently active folder.
            If the user set custom columns, these are shown too.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)">
            <summary>
            Overrides the <see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)"/> method. A SmartRefresh is called before the auto resize is executed. 
            </summary>
            <param name="columnIndex">The index of the column that should be resized.</param>
            <param name="headerAutoResize">The resize style.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)">
            <summary>
            Overrides the <see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)"/> method. A SmartRefresh is called before the auto resize is executed.
            </summary>
            <param name="headerAutoResize">The resize style.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the selected file should change.
            </summary>
            <param name="p_ItemIdList">The absolute ItemIdList of the newly selected file.</param>
            <seealso cref="M:Jam.Shell.ShellListView.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.ShellListView.ItemSelectionChange(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            This member handles the <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged"/> event.
            </summary>
            <param name="source">the source that created the event</param>
            <param name="e">The parameter contains the event data for the ListViewItemSelection changed.
            If it is null, we do not clear the SelectedFiles Datastructure, since the method was called 
            directly from <see cref="M:Jam.Shell.JamBaseShellListView.SelectedListChange(System.Object,System.EventArgs)"/>.
            </param>
        </member>
        <member name="M:Jam.Shell.ShellListView.UpdateTimerChange(System.Object,System.EventArgs)">
            <summary>
            This method is called when the update time for delayed updates elapsed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_CheckIfSelectionExists">
            <summary>
            This flag indicates whether the selected files should be verified during the next FullRefresh; bug #7193
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.ChangeNotificationHandler(System.Object,Jam.Shell.ChangeNotificationPidlEventArgs)">
            <summary>
            This method gets called by the <see cref="T:Jam.Shell.ShellChangeNotifier"/> object and informs about changes in the current folder.
            </summary>
            <param name="sender">the sender that initiated the event</param>
            <param name="e">the event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.Sort">
            <summary>
            Sorts the items in the list according to <see cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/> and <see cref="T:System.Windows.Forms.SortOrder"/>.
            This sortorder can be replaced by assigning a <see cref="T:System.Collections.IComparer"/> to property <see cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>
            </summary>
            <remarks>Usually sorting is done automatically so that calling this method is unnecessary.</remarks>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/>
            <seealso cref="M:Jam.Shell.JamBaseShellListView.Sort"/>
            <seealso cref="T:System.Windows.Forms.SortOrder"/>
        </member>
        <member name="M:Jam.Shell.ShellListView.FullRefresh">
            <summary>
            Use the <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method if you want to refresh the contents of a <see cref="T:Jam.Shell.ShellListView"/>. Usually you don't have to call <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> manually. 
            It will be called automatically, when e.g. the <see cref="P:Jam.Shell.ShellListView.Path"/> or <see cref="P:Jam.Shell.ShellListView.Filter"/> property changes, or the connected <see cref="T:Jam.Shell.ShellControlConnector"/> reports a change.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.SmartRefresh">
            <summary>
            Use the SmartRefresh to update the contents of a <see cref="T:Jam.Shell.ShellListView"/>. 
            <remarks>In comparison to the <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method, SmartRefresh is much faster, 
            but only removes objects which have been deleted and adds objects which have been added. 
            It does not update changed file sizes or dates. Usually this method will be called automatically, 
            when a file was added or deleted.
            </remarks>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.Compare(System.Object,System.Object)">
            <summary>
            Compares two ShellListItem objects with their ItemIdList with eachother. 
            </summary>
            <param name="x">First ShellListItem.</param>
            <param name="y">Second ShellListItem, which will be compared with first one.</param>
            <returns>
            Returns a value less than 0 if x is less than y, 0 if x is equal to y and a value greater
            than 0 if x is greater than y.
            </returns>
            <remarks>User added columns will be compared by the item's SubItem strings at the SortColumn index.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the OnMouseUp event, to handle e.g. double clicks and right clicks on files or folders
            and the selection of files or folders, when the CheckBoxes are switched on.
            </summary>
            <param name="e">Provides data for the OnMouseUp event.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Override the OnKeyDown event, to handle e.g. the key press like F2, F5, copy, paste, etc.
            </summary>
            <param name="e">Provides data for the OnKeyDown event.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.SelectAll">
            <summary>
            Use SelectAll to select all items in a JamShellList.
            </summary>
            <returns>Returns true, if all files were selected.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDoubleClick(System.EventArgs)">
            <summary>
            Override the OnDoubleClick event to try to perform the default action for the selected object.
            </summary>
            <param name="e">The parameter contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.PrepareMultiObjects">
            <summary>
            Prepares the selected items in the list for being used with the m_ShellBrowser, an instance of <see cref="T:Jam.Shell.ShellBrowser"/>.
            </summary>
            <returns><b>true</b>if one or more items have been successfully prepared; otherwise <b>false</b></returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.CreateDir(System.String,System.Boolean)">
            <summary>
            Creates a new directory in the current folder.
            </summary>
            <param name="p_Name">The name of the new folder. Do pass a single name only, not a full path.</param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the new folder after its creation.
            Pass <b>false</b> if the new folder should not be in edit mode.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.CreateShortcut(System.String,System.String)">
            <summary>
            Creates a new shortcut in the current folder.
            </summary>
            <param name="pName">The name of the new shortcut. Do pass a single name only, not a full path.
            You may pass an empty name to use the localized string for a new shortcut.
            </param>
            <param name="pTarget">The fullpath of the shortcut target</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.InvokeCommandOnSelected(System.String)">
            <summary>
            Invokes the given command on the selected items.
            See <see cref="T:Jam.Shell.ShellCommand"/> class for a list of possible commands.
            </summary>
            <param name="command">A command verb, like <see cref="F:Jam.Shell.ShellCommand.Open"/>, <see cref="F:Jam.Shell.ShellCommand.Properties"/>, 
            <see cref="F:Jam.Shell.ShellCommand.Delete"/>, or any other command of installed shell extensions that may be specified as a string.</param>
            <returns>true if the command was invoked successfully, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.InvokeCommandOnFolder(System.String)">
            <summary>
            Invokes the given command on the currently listed folder.
            </summary>
            <param name="command">A command verb, like "open", "properties", "delete", etc.</param>
            <returns>true if the command was invoked successfully, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.FileChange">
            <summary>
            This method should be called if files in the current view have changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetUIObject(System.Guid)">
            <summary>
            Returns for the currently selected item a COM object that implements the requested interface
            </summary>
            <param name="riid">the relative item id list</param>
            <returns>the UIObject that is returned be <see cref="M:Jam.Shell.ShellBrowser.GetUIObject(System.Guid)"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.GoUp">
            <summary>
            Goes up one directory level.
            </summary>
            <returns>true, if the operation was performed succesfully. false, if the operation could not be perofrmed, which can e.g. happen, if the current folder is the root of the shell namespace.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.InformPathChanged">
            <summary>
            Notifies connected controls that the active path of this control has changed
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnBeforeLabelEdit event, to prepare renaming a file or folder in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnBeforeLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnAfterLabelEdit event, to rename files or folders in the file system, when the have been renamed in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnAfterLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetFullPath(Jam.Shell.ShellListBaseItem)">
            <summary>
            This method returns name, extension and full path of a given ShellListViewItem of a ShellListView. 
            Since the extensions of the file may be not displayed dependant on the user's settings it is 
            important that you use FullPath instead of ShellListViewItem.Text.
            </summary>
            <param name="aItem">ShellListViewItem, for which the full path should be returned.</param>
            <returns>Returns the full path for the passed ShellListViewItem as string.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:Jam.Shell.JamBaseShellListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetDropTarget(Jam.Shell.ShellListBaseItem)">
            <summary>
            Gets the IOleDropTarget for the given item.
            </summary>
            <param name="item">A ShellListBaseItem or null for the background.</param>
            <returns>The IOleDropTarget for the given item or the background. 
            Returns null if the item is a ShellListParentFolderItem.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.ShowOptionsShouldShow(Jam.Shell.ShellBrowser)">
            <summary>
            Returns if the active shell object in the given ShellBrowser should be shown 
            according to the property settings of this class.
            </summary>
            <param name="shellbrowser">An instance of the ShellBrowser class.</param>
            <returns>true, if the active object in the ShellBrowser should be visible in a control according to the property values. false if it hsould not be visible.</returns>
        </member>
        <member name="P:Jam.Shell.ShellListView.FolderIdList">
            <summary>
            FolderIdList contains a pointer to the ItemIdList of the current folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.Details">
            <summary>
            If Details is set to True, Size, Date, file type etc. will be displayed in additional columns. If Details is set to False, only the names of the files or objects will be displayed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed. Exceptions are 'My Computer', 'Libraries' and 'Network'
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.LabelEdit">
            <summary>
            Gets or sets a value indicating whether the label text of the list items can be edited.
            </summary>
            <value></value>
            <returns>true if the label text of the tree nodes can be edited; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Jam.Shell.ShellListView.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.Path">
            <summary>
            This property allows you to get or set the folder, which contents should be displayed. If you want to display a non file system folder, use the SpecialFolder property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.BackgroundContextMenu">
            <summary>
            Gets or sets the ContextMenuStrip that is displayed if no item of the 
            listview is under the cursor if the user clicks the right mouse button.
            If this value is null, no ContextMenu is shown.
            </summary>
            <remarks>By default the <see cref="T:Jam.Shell.ShellListView"/> uses a context menu similar to the one known by Windows Explorer. To customize subclass <see cref="T:Jam.Shell.BackgroundContextMenu"/> and override <see cref="M:Jam.Shell.BackgroundContextMenu.SetupMenuItems"/>
            and assign it to this property.
            </remarks>.
            <example>
            The following example uses <see cref="P:Jam.Shell.ShellListView.BackgroundContextMenu"/> as base class for a custom background context menu and assigns it in the Load event of a form.
            <code>
            class MyBackgroundContextMenu : BackgroundContextMenu
            {
                protected override void SetupMenuItems()
                {
                     base.SetupMenuItems();
                    ToolStripMenuItem myItem = new ToolStripMenuItem("My Additional Item");
                    myItem.Click += myItem_Click;
                    Items.Add(myItem);
                    //hide a default item:
                    //this.Actualize.Visible = false;
                }
            
                void myItem_Click(object sender, EventArgs e)
                {
                    MessageBox.Show("additional item clicked");
                }
            }
            //Eventhandler for the Load event of a form:
            private void JamExplorerMain_Load(object sender, EventArgs e)
            {
                shellListView1.BackgroundContextMenu = new MyBackgroundContextMenu();
            }
            </code>
            </example>
        </member>
        <member name="P:Jam.Shell.ShellListView.SortColumn">
            <summary>
            The column according to which the listed objects are sorted.
            If this is set to a negative value, sorting is disabled by setting 
            <see cref="T:System.Windows.Forms.SortOrder"/> to SortOrder.None, this is useful to
            insert large amounts of items, e.g. during a search.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the value is &gt;= Columns.Count</exception>
        </member>
        <member name="P:Jam.Shell.ShellListView.SpecialFolder">
            <summary>
            SpecialFolder allows you to set or get the type of the currently listed folder. 
            You can use the ShellFolder constants here.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected 
            is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellListView.UseThreadPool">
            <summary>
            Whether to use the system threadpool to obtain information on listview items.
            If this property is false, the complete file detail information is retrieved as
            soon as the item is displayed the first time within the listview.
            If the property is true thumbnails and icons are fetched in worker threads in the background.
            The setting of this property affects the control the next time the <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method is called.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ViewState">
            <summary>
            Gets or sets how items are displayed in the ShellListView control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.Items">
            <summary>
            Returns a collection containing all ShellListItems in the ShellListView. Items are of type <see cref="T:Jam.Shell.ShellListItem"/>
            </summary>
            <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/>
        </member>
        <member name="P:Jam.Shell.ShellListView.OwnerDraw">
            <summary>
            The value of the OwnerDraw property must always be true. This is why the Property is
            reimplemented here. The setting to false is ignored, and a debug message is shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.CopyMode">
            <summary>
            Copy mode allows you to control the behaviour when files or folders get dropped.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.AutoScrollDelay">
            <summary>
            The delay in milliseconds after that the control scrolls automatically during a drag and drop operation.
            A value of 0 disables the auto scroll feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.SelectedItems">
            <summary>
            Gets the items that are selected in the control.
            </summary>
            <returns>A <see cref="T:JamBaseShellListView.ShellListViewSelectedItemCollection{ITEM_CLASS}"/> that contains the items that are selected in the control. 
            If no items are currently selected, an empty <see cref="T:JamBaseShellListView.ShellListViewSelectedItemCollection{ITEM_CLASS}"/> is returned. Contained elements are of type <see cref="T:Jam.Shell.ShellListItem"/></returns>
        </member>
        <member name="E:Jam.Shell.ShellListView.BeforeFullRefresh">
            <summary>
            This event is fired when a <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> has been executed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellListView.BeforeShellCommand">
            <summary>
            This event is fired when a shell command is to be executed, ie. via the context menu
            It is possible to permit the execution of the shell command by modifying the BeforeShellCommandEventArgs
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellListView.Populated">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellListView"/> was filled completely.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellListView.PathChanged">
            <summary>
            This event is fired when the users changes the path.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellListView.AddItem">
            <summary>
            This event is fired whenever a new item is added to a <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will also be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowNetHood">
            <summary>
            If set to 'false', the Network Neighbourhood is not shown in the component,
            otherwise it is shown (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowOverlayIcons">
            <summary>
            If set to 'false', no overlay icons will be shown, which improves the performance of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowRecycleBin">
            <summary>
            If set to true, the recycle bin will be visible. If set to false, the recycle bin will be hidden
            (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowColorCompressed">
            <summary>
            If set, compressed files and folders will be shown in that particular Color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowColorEncrypted">
            <summary>
            If set, encrypted files and folders will be shown in that particular color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowParentFolder">
            <summary>
            Use this property to show an additional folder with the caption '..' that allows the user to navigate to the parent folder of the current folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowFolders">
            <summary>
            The property ShowFolders allows you to include the folders in the <see cref="T:Jam.Shell.ShellListView"/>, similar to FrontPage 2000.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellListView.UserWorkItemState">
            <summary>
            This structure is used to pass objects to the threadpooled function calls
            <see cref="M:Jam.Shell.ShellListView.CompleteDetailsCallBack(System.Object)"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.InvokeCommandEventArgs">
            <summary>
            The event arguments of a <see cref="E:Jam.Shell.SystemListView.BeforeInvokeCommandOnSelected"/>.
            See also <see cref="M:Jam.Shell.ShellListView.InvokeCommandOnSelected(System.String)"/> and 
            <see cref="T:Jam.Shell.CustomFileList`1"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.InvokeCommandEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="command">the command-word</param>
        </member>
        <member name="P:Jam.Shell.InvokeCommandEventArgs.Command">
            <summary>
            the command that is to be processed
            </summary>
        </member>
        <member name="P:Jam.Shell.InvokeCommandEventArgs.InvocationProcessed">
            <summary>
            Set this property to true, if the event was processed and
            the InvokeCommand should not handled by the shellbrowser component any further.
            </summary>
        </member>
        <member name="T:Jam.Shell.AddItemEventArgs">
            <summary>
            The AddItemEventArgs contains data for the <see cref="E:Jam.Shell.ShellListView.AddItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddItemEventArgs.#ctor(Jam.Shell.ShellListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.ShellListItem"/> object, which contains information about the item, which should be added to the <see cref="T:Jam.Shell.ShellListView"/>/<see cref="T:Jam.Shell.FileList"/>.</param>
        </member>
        <member name="T:Jam.Shell.ShellListParentFolderItem">
            <summary>
            Helper class for the parent folder icon.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListParentFolderItem.ColumnInfoAvailable">
            <summary>
            We don't need column infos.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListParentFolderItem.StillExists">
            <summary>
            This item always exists.
            </summary>
        </member>
        <member name="T:Jam.Shell.HeaderMenuItem">
            <summary>
            A class that extends the ToolStripMenuItem with a property for the ShColumnId; used within the header context menu.
            </summary>
        </member>
        <member name="P:Jam.Shell.HeaderMenuItem.ShColumnID">
            <summary>
            Saves the ShColumnID.
            </summary>
        </member>
        <member name="T:Jam.Shell.JamThread">
            <summary>
            Improved version of .Net's Thread class
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_Thread">
            <summary>
            Reference to the thread object
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_WakeUpEvent">
            <summary>
            Use this event to wakeup the thread when new work is pending
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_ThreadPool">
            <summary>
            Reference to the thread pool this thread is assigned to
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_LastTimeProcessingOccured">
            <summary>
            A tick value containing the milliseconds since system start on when
            the last processing occured on this thread
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_LastTimeProcessingWentBusy">
            <summary>
            A tick value indicating the last time the thread started <see cref="M:Jam.Shell.IWorkItem.HandleWorkItem"/>
            (in milliseconds since system start). If this value is -1 the thread is in idle state.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_ThreadCounter">
            <summary>
            Counts the pooled threads.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.#ctor(Jam.Shell.WorkerThreadPool)">
            <summary>
            Sets up a thread
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.#ctor(Jam.Shell.WorkerThreadPool,System.Boolean)">
            <summary>
            Sets up a jam thread object
            </summary>
            <param name="threadPool">the threadpool the thread is associated with</param>
            <param name="initializeCOM">whether the thread should be COM aware</param>
        </member>
        <member name="M:Jam.Shell.JamThread.Stop">
            <summary>
            Stops the thread and indefinitely waits until the processing finished
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.Stop(System.Int32)">
            <summary>
            Stops the <see cref="M:Jam.Shell.JamThread.ProcessItems"/> loop, the thread finishes.
            </summary>
            <param name="millis">milliseconds to wait to join the thread</param>
            <returns>true if joining the thread within milliseconds timespan succeeded, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamThread.Join(System.Int32)">
            <summary>
            Joins the thread.
            </summary>
            <param name="millis">milliseconds to wait to join the thread, -1 to wait indefinitely</param>
            <returns>true if joining the thread within milliseconds timespan succeeded, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamThread.Abort">
            <summary>
            Stops the thread by calling <see cref="M:System.Threading.Thread.Abort"/>, this usually terminates the thread.
            Use this function with caution, aborting a thread while it holds a mutex can cause dead-locks.
            <see cref="T:System.Threading.ThreadAbortException"/> for further details.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.ProcessItems">
            <summary>
            The thread loop that performs the work
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.Dispose(System.Boolean)">
            <summary>
            Releases ressources.
            </summary>
            <param name="disposing">The handle that the ItemIdList instance keeps is released if this parameter is true</param>
        </member>
        <member name="M:Jam.Shell.JamThread.Dispose">
            <summary>
            Implementation of IDisposable
            </summary>
        </member>
        <member name="P:Jam.Shell.JamThread.WorkItem">
            <summary>
            Get or set the WorkItem that is currently processed by the thread
            </summary>
        </member>
        <member name="P:Jam.Shell.JamThread.IdleTime">
            <summary>
            Returns the time in milliseconds the thread is idle
            since the last time an item has been processed
            </summary>
        </member>
        <member name="P:Jam.Shell.JamThread.BusyTime">
            <summary>
            Returns the time in milliseconds the thread is busy, or -1 if it's idle.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamThread.IsFinished">
            <summary>
            Returns true if the thread is finished.
            If this value is set, the thread is woken
            up in case it is waiting for an event.
            </summary>
        </member>
        <member name="T:Jam.Shell.IWorkItem">
            <summary>
            This interface defines a work item that can be queued to the threadpool
            </summary>
        </member>
        <member name="M:Jam.Shell.IWorkItem.HandleWorkItem">
            <summary>
            This method is called when the work item is processed
            </summary>
        </member>
        <member name="M:Jam.Shell.IWorkItem.Terminate">
            <summary>
            Set the state of the item to denote that it has been terminated before it finished
            processing, the implementation of this method should issue the <see cref="E:Jam.Shell.IWorkItem.Terminated"/> event.
            </summary>
        </member>
        <member name="E:Jam.Shell.IWorkItem.WorkDone">
            <summary>
            This event is performed if the item's work is finished.
            <seealso cref="E:Jam.Shell.IWorkItem.Terminated"/>.
            </summary>
        </member>
        <member name="E:Jam.Shell.IWorkItem.Terminated">
            <summary>
            This event is performed if the item's work was aborted before it finished processing.
            <seealso cref="E:Jam.Shell.IWorkItem.WorkDone"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.Result">
            <summary>
            The result of the operation performed in <see cref="M:Jam.Shell.IWorkItem.HandleWorkItem"/>, may be null
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.Tag">
            <summary>
            A tag that can be freely used to identify a workitem or a group of workitems
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.AllowAbortUponExceedingTimeLimit">
            <summary>
            Whether to allow aborting the work item when the timelimit exceeded (see <see cref="P:Jam.Shell.WorkerThreadPool.MaxBusyTime"/>)
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.MaxBusyTime">
            <summary>
            The maximum time a workItem may be busy until it is aborted. Must be > 0 to be taken into account.
            </summary>
        </member>
        <member name="T:Jam.Shell.BasicWorkItem">
            <summary>
            This class provides base functionality for a work item,
            only the abstract method <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> has to be implemented to start things
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.DoWork">
            <summary>
            This method is called from <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> when the work item is processed.
            May set <see cref="P:Jam.Shell.BasicWorkItem.Result"/> if the operation returned a result
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.HandleWorkItem">
            <summary>
            Calls <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> method, then after the call to the method returns,
            issues the event <see cref="E:Jam.Shell.BasicWorkItem.WorkDone"/> if assigned
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.Terminate">
            <summary>
            Sets the state of the item (<see cref="P:Jam.Shell.BasicWorkItem.IsTerminated"/> to true),
            issues the <see cref="E:Jam.Shell.BasicWorkItem.Terminated"/> event if assigned.
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.#ctor(System.Boolean)">
            <summary>
            Allowing to abort is disabled per default since thread aborting results in
            unstable system state, see http://msdn.microsoft.com/en-us/magazine/cc163644.aspx :
            [..] "I'll caution you against using Thread.Abort to control the lifetime of a thread,
            especially if you have little knowledge about the implementation of the code you're
            aborting. An abort inside of a critical region could spell disaster for an entire
            AppDomain, and while a polite abort does signficantly reduce the window of disaster
            to very tiny slivers, that one time out of 1,000 could lead to a deadlock or resource
            leak or worse."
            </summary>
            <param name="allowAbortUponExceedingTimeLimit">If true, the thread is aborted via
            <see cref="M:System.Threading.Thread.Abort"/> if the <see cref="P:Jam.Shell.WorkerThreadPool.MaxBusyTime"/> is exceeded.</param>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.ToString">
            <summary>
            Returns the Tag as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.Result">
            <summary>
            The result of the work item
            </summary>
        </member>
        <member name="E:Jam.Shell.BasicWorkItem.WorkDone">
            <summary>
            Register to this event to get notified when the
            item <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> method has finished.
            </summary>
        </member>
        <member name="E:Jam.Shell.BasicWorkItem.Terminated">
            <summary>
            This event occurs if the item terminated before it finished processing.
            <see cref="P:Jam.Shell.BasicWorkItem.IsTerminated"/> and <see cref="P:Jam.Shell.BasicWorkItem.AllowAbortUponExceedingTimeLimit"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.Tag">
            <summary>
            A work item can be tagged to be distinguishable from other items
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.IsTerminated">
            <summary>
            This property is set to true if the work item was terminated before
            it finished processing, this may happen e.g. if
            <see cref="P:Jam.Shell.BasicWorkItem.AllowAbortUponExceedingTimeLimit"/> was true.
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.MaxBusyTime">
            <summary>
            The maximum time a workItem may be busy until it is aborted. Must be > 0 to be taken into account.
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.AllowAbortUponExceedingTimeLimit">
            <summary>
            Whether to allow aborting the <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> method if the
            maximum busy time exceeded. Per default this value is true.
            </summary>
        </member>
        <member name="T:Jam.Shell.JamPathExistsWorkItem">
            <summary>
            WorkItem that checks if the fullpath of a given item exists. If not, the item is removed from the Listview.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamPathExistsWorkItem.#ctor(Jam.Shell.ShellListBaseItem,Jam.Shell.JamBaseShellListView,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamPathExistsWorkItem"/> class.
            </summary>
            <param name="pItem">The item whose fullpath should be checked.</param>
            <param name="pListView">The ListView the item belongs to.</param>
            <param name="pTag">The tag.</param>
        </member>
        <member name="M:Jam.Shell.JamPathExistsWorkItem.DoWork">
            <summary>
            This method is called from <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> when the work item is processed.
            It checks whether the fullpath still exists and if not, removed the item from the ListView.
            </summary>
        </member>
        <member name="T:Jam.Shell.GUIWorkItemCompletedEventArgs">
            <summary>
            EventArgs used in the <see cref="E:Jam.Shell.GUIWaitCallbackWorkItem.Completed"/> event.
            </summary>
        </member>
        <member name="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result">
            <summary>
            An object representing the Result of the <see cref="c:WaitCallbackWorkItem"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.GUIWaitCallbackWorkItem">
            <summary>
            Like the <see cref="c:WaitCallbackWorkItem"/>. 
            In contrast to it issues the <see cref="E:Jam.Shell.GUIWaitCallbackWorkItem.Completed"/> event when the WorkItem has finished. This event is issued in the Synchronization context 
            that created the WorkItem so it's not necessary to call BeginInvoke when updating the GUI with results of the WorkItem.
            </summary>
        </member>
        <member name="M:Jam.Shell.GUIWaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Threading.SynchronizationContext)">
            <summary>
            Standard constructor
            </summary>
            <param name="waitCallBack">The WaitCallback to be executed in a thread.</param>
            <param name="taskData">Can hold any object. Is passed to the WaitcallBack delegate and passed further to <see cref="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result"/></param>
            <param name="synchronizationContext">The synchronization context the event</param>
        </member>
        <member name="M:Jam.Shell.GUIWaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Int32,System.Threading.SynchronizationContext)">
            <summary>
            Constructor that saves the given handle as Tag
            </summary>
            <param name="waitCallBack">The WaitCallback to be executed in a thread.</param>
            <param name="taskData">Can hold any object. Is passed to the WaitcallBack delegate and passed further to <see cref="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result"/></param>
            <param name="tag">An int identifying the WorkItem</param>
            <param name="synchronizationContext">The synchronization context the <see cref="M:Jam.Shell.GUIWaitCallbackWorkItem.OnCompleted(Jam.Shell.GUIWorkItemCompletedEventArgs)"/> event is raised for</param>
        </member>
        <member name="M:Jam.Shell.GUIWaitCallbackWorkItem.DoWork">
            <summary>
            Invokes the wait call back method.
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemsQueue`1">
            <summary>
            Thread save queue of items
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Jam.Shell.ItemsQueue`1.m_List">
            <summary>
            List of items, use
            <code>lock(m_List) { .. }</code> whenever the
            datastructure is accessed either by reading or writing
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.IterateList(Jam.Shell.ItemsQueue{`0}.IterateItemsQueueDelegate,System.Boolean,System.Object)">
            <summary>
            Iterates the Queue in a thread safe manner executing the passed method on each queue element
            </summary>
            <param name="method">A method conforming to IterateItemsQueueDelegate</param>
            <param name="iterateFromBeginning">Iterate the list from the beginning (true) or the end (false)?</param>
            <param name="param">Additional parameter that might be used to pass through information to /method/</param>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.Add(`0)">
            <summary>
            Add an item to the queue
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.Remove(`0)">
            <summary>
            Removes an item by its reference from the queue
            </summary>
            <param name="item"></param>
            <returns>true if the item was present in the queue</returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.Clear">
            <summary>
            Clears the queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.DequeueFirst">
            <summary>
            Dequeues the first item in the queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.DequeueLast">
            <summary>
            Dequeues the last item in the queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.RemoveItems(Jam.Shell.ItemsQueue{`0}.DetermineRemoveItem,System.Object)">
            <summary>
            Removes all items where calling the delegate returns true
            </summary>
            <param name="determineRemoveItem">a delegate to determine whether the items should be removed</param>
            <param name="lParam">A parameter that might hold additional data that is passed to the <see cref="T:Jam.Shell.ItemsQueue`1.DetermineRemoveItem"/> calls.</param>
            <returns>
            The number of removed items.
            </returns>
            <exception cref="T:System.ArgumentNullException">determineRemoveItem;The item that should be removed was 'null'</exception>
        </member>
        <member name="P:Jam.Shell.ItemsQueue`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The item at the specific index. Null if the index is invalid.</returns>
        </member>
        <member name="P:Jam.Shell.ItemsQueue`1.Count">
            <summary>
            Gets the number of items in the queue
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemsQueue`1.IterateItemsQueueDelegate">
            <summary>
            Delegate for IterateList.
            </summary>
            <param name="element">The queued element</param>
            <param name="param">An additional parameter that can be passed through by calling methods</param>
        </member>
        <member name="T:Jam.Shell.ItemsQueue`1.DetermineRemoveItem">
            <summary>
            Delegate definition for the <see cref="M:Jam.Shell.ItemsQueue`1.RemoveItems(Jam.Shell.ItemsQueue{`0}.DetermineRemoveItem,System.Object)"/> method parameter
            </summary>
            <param name="item">The item.</param>
            <param name="lParam">A parameter that might hold additional data</param>
            <returns>
            true if the item should be removed
            </returns>
        </member>
        <member name="T:Jam.Shell.WorkItemsQueue">
            <summary>
            A queue of Workitems
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkItemsQueue.RemoveItemsOfType(System.Type)">
            <summary>
            Removes all items of a particular type from the queue
            </summary>
            <param name="type">The specific type</param>
            <returns>List of <see cref="T:Jam.Shell.IWorkItem"/> instances that matched the criterion and were removed from the list.</returns>
        </member>
        <member name="M:Jam.Shell.WorkItemsQueue.RemoveItemsOfType(System.Type,System.Boolean)">
            <summary>
            Removes all items of a particular type from the queue
            </summary>
            <param name="type">The specific type</param>
            <param name="extendingTypesAlso">if true also types extending 'type' are pruned from the datastructure</param>
            <returns>List of <see cref="T:Jam.Shell.IWorkItem"/> instances that matched the criterion and were removed from the list</returns>
        </member>
        <member name="M:Jam.Shell.WorkItemsQueue.RemoveItemsWithTag(System.Int32)">
            <summary>
            Removes all workitems that have the given tag
            </summary>
            <param name="tag">The specific tag</param>
            <returns>List of <see cref="T:Jam.Shell.IWorkItem"/> instances that matched the criterion and were removed from the list</returns>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool">
            <summary>
            A thread pool that manages work items, in contrast to the
            common .net threadpool, threads managed by this pool may perform calls to COM objects.
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.m_WorkerItemsQueue">
            <summary>
            This queue contains all items that get processed.
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.m_InitializeCOM">
            <summary>
            Whether the threads are prepared to perform calls to COM objects
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.m_FinishEvent">
            <summary>
            <see cref="M:Jam.Shell.WorkerThreadPool.WaitFinish(System.Int32)"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.DEBUG">
            <summary>
            For testing purposes
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.CheckAddNewWorkerThread">
            <summary>
            Determines whether new threads should be spawned, ensures that <see cref="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads"/>
            threads are available for processing
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.CreateThread">
            <summary>
            Creates a thread and adds it to the idle structure
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.RemoveThread(Jam.Shell.JamThread)">
            <summary>
            Removes the thread from the idle and busy structure and stops it.
            </summary>
            <param name="thread"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.RemoveIdleThread(Jam.Shell.JamThread,System.Object)">
            <summary>
            Returns true if the thread exceeded idle time,
            the thread is stopped in that case
            </summary>
            <param name="thread">The thread.</param>
            <param name="lParam">not used.</param>
            <returns>
            true if the thread exceeded the maximum idle time
            </returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.RemoveThreadsExceedingMaxIdleTime">
            <summary>
            This method removes threads from the idle pool where
            the maximum idle time is exceeded. This method does
            nothing if only <see cref="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads"/> are active
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortHangingThread(Jam.Shell.JamThread,System.Object)">
            <summary>
            Returns true if the thread exceeded maximum busy time,
            the thread is stopped in that case
            </summary>
            <param name="thread">The thread.</param>
            <param name="lParam">A parameter that might hold additional data; not used here.</param>
            <returns>
            true if the thread exceeded the maximum idle time.
            </returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortThreadsExceedingMaxBusyTime">
            <summary>
            This method removes threads from the busy pool if
            the maximum busy time is exceeded.
            Additionally if the thread is being stopped, if it doesn't
            join within 100ms abort is signalled via <see cref="M:System.Threading.Thread.Abort"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.OnAllWorkItemsDone">
            <summary>
            Issues the <see cref="E:Jam.Shell.WorkerThreadPool.AllWorkItemsDone"/> event
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.GetCpuUsage">
            <summary>
            Determines the overall cpu usage of the current process
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.#ctor">
            <summary>
            Standard constructor, initializes a threadpool without support
            for COM.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="initializeCOM">if true, threads in the pool are prepared to support COM calls</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.OnApplicationExit(System.Object,System.EventArgs)">
            <summary>
            Stops any pending threads if the applications exits
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.CheckDisposed">
            <summary>
            Call this method to check if the thread pool is still available.
            </summary>
            <exception cref="T:System.ObjectDisposedException">If the ThreadPool has already been disposed</exception>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.Dispose(System.Boolean)">
            <summary>
            Implementation of IDispsable interface
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.Dispose">
            <summary>
            Call this method to clean up all threads from the pool,
            in that case the ThreadPool instance cannot be used anymore,
            calls to functions of it will result in an <see cref="T:System.ObjectDisposedException"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem)">
            <summary>
            Adds a work item to the internal queue but and immediately
            starts processing the item, see also <see cref="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem,System.Boolean)"/> and <see cref="M:Jam.Shell.WorkerThreadPool.StartProcessing"/>.
            </summary>
            <param name="workItem"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem,System.Boolean)">
            <summary>
            Adds a work item to the internal queue but does not yet
            start processing them, see <see cref="M:Jam.Shell.WorkerThreadPool.StartProcessing"/> for that.
            </summary>
            <param name="workItem"></param>
            <param name="immediatelyStartProcessing">if true, starts processing the item immediately</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem``1(System.Action{``0})">
            <summary>
            Adds an <see cref="T:System.Action`1"/> delegate call to the work item queue.
            </summary>
            <param name="action">An <see cref="T:System.Action`1"/> delegate</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem``1(System.Action{``0},``0)">
            <summary>
            Adds an <see cref="T:System.Action`1"/> delegate call to the work item queue.
            </summary>
            <typeparam name="T">The type of the action.</typeparam>
            <param name="pAction">An <see cref="T:System.Action`1"/> delegate</param>
            <param name="pState">The state of this WorkItem.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem``1(System.Action{``0},``0,System.String)">
            <summary>
            Adds an <see cref="T:System.Action`1"/> delegate call to the work item queue.
            </summary>
            <typeparam name="T">The type of the action.</typeparam>
            <param name="pAction">An <see cref="T:System.Action`1"/> delegate</param>
            <param name="pState">The state of this WorkItem.</param>
            <param name="pNameTag">A tag that is used to identify the WorkItem using it`s ToString() method.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Adds a user work item to the Threadpool that is immediately being processed.
            </summary>
            <param name="waitCallBack"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Adds a user work item to the Threadpool that is immediately being processed.
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object,System.Int32)">
            <summary>
            Adds a user work item to the Threadpool that is immediately being processed and tagged with the given handle.
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
            <param name="handle"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object,System.Int32,System.Int32)">
            <summary>
            Adds a user work item to the Threadpool that is processed after the given time and tagged with the given handle.
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
            <param name="handle"></param>
            <param name="timeToWait"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueGUIWorkItem(System.Threading.WaitCallback,System.Object,System.EventHandler{Jam.Shell.GUIWorkItemCompletedEventArgs},System.Threading.SynchronizationContext)">
            <summary>
            Adds a work item to the Threadpool that is immediately being processed.
            When the WorkItem is finished Event OnCompleted is raised on the calling synchronization context, so that no BeginInvoke is needed to update the main thread.
            </summary>
            <param name="waitCallBack">The WaitCallback to be executed in a thread.</param>
            <param name="taskData">Can hold any object. Is passed to the WaitcallBack delegate and passed further to <see cref="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result"/></param>
            <param name="CompletedHandler">The completed handler.</param>
            <param name="synchronizationContext">The synchronization context event <see cref="M:Jam.Shell.GUIWaitCallbackWorkItem.OnCompleted(Jam.Shell.GUIWorkItemCompletedEventArgs)"/> is raised in</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.StartProcessing">
            <summary>
            Start processing the work items (<see cref="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem,System.Boolean)"/>)
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AssignPendingItemsToIdleThreads">
            <summary>
            Assigns pending work items to all idle threads
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.NotifyFinishedItem(Jam.Shell.JamThread)">
            <summary>
            Is called by <see cref="T:Jam.Shell.JamThread"/> so the pool is notified
            </summary>
            <param name="jamThread"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateProcessing">
            <summary>
            Stops processing work items that are queued. Running threads will be aborted after <see cref="P:Jam.Shell.WorkerThreadPool.MaxTimeUntilHardTerminate"/> ms.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateProcessing(System.Boolean)">
            <summary>
            Stops processing work items that are queued. 
            </summary>
            <param name="force">if set to <c>true</c> busy threads are aborted after the timespan given in <see cref="P:Jam.Shell.WorkerThreadPool.MaxTimeUntilHardTerminate"/>.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateProcessing(System.Int32)">
            <summary>
            Stops processing the threads.
            </summary>
            <param name="millis">Milliseconds running threads are given to finish their work before they are aborted.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortThreadItem(Jam.Shell.JamThread,System.Object)">
            <summary>
            First tries to stop a busy thread if that was not
            possible within 50 milliseconds, the thread is aborted.
            </summary>
            <param name="thread">The thread.</param>
            <param name="millis">Contains the time in millis a thread can finish before being aborted.</param>
            <returns>
            Always returns true so the thread is removed from the busy queue.
            </returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateWorkItemsForTag(System.Int32)">
            <summary>
            Removes all pending work items from the work queue and terminates the running work items having the tag specified.
            </summary>
            <param name="tag">The tag.</param>
            <returns>The number of removed work items.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortThreadItemsForTag(Jam.Shell.JamThread,System.Object)">
            <summary>
            Aborts the threads that currently handle work items with the given tag.
            </summary>
            <param name="pThread">The thread.</param>
            <param name="lParam">Not used.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateWorkItemsForType(System.Type)">
            <summary>
            Removes all pending work items of type 'type'.
            </summary>
            <param name="type"></param>
            <returns>The number of removed worker items.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortWorkItemsForType(Jam.Shell.JamThread,System.Object)">
            <summary>
            Terminated the WorkItem if its type matches and finishes its thread.
            </summary>
            <param name="pThread">The thread.</param>
            <param name="lParam">Not used-</param>
            <returns>true if the item matched and was finished, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitFinish">
            <summary>
            Waits until all threads finished processing (the workitem queue is empty).
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ToString">
            <summary>
            Returns the list of WorkItems in the Queue and that are being processed at the moment.
            Note that the NameTag has to be set when queueing the items with QueueUserWorkItem.
            </summary>
            <returns>The list of WorkItems in the Queue and that are being processed at the moment.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitFinish(System.Int32)">
            <summary>
            Waits until all threads finished processing (the workitem queue is empty).
            </summary>
            <param name="millis"></param>
            <returns>true if threads finished processing within timespan, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.SafeInvoke(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker,System.Object[])">
            <summary>
            Calls Invoke/BeginInvoke on the control, catching exceptions if the object is already disposed or the thread is already finished.
            </summary>
            <param name="control">The control.</param>
            <param name="method">The method to be called.</param>
            <param name="args">The arguments that should be passed to the method.</param>
            <returns>An InvokeReturn value depending on what happened.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.SafeBeginInvoke(System.Windows.Forms.Control,System.Delegate,System.Object[])">
            <summary>
            Executes the passed method on the passed control (using BeginInvoke) if invoke is required.
            </summary>
            <param name="control">The control that should get the BeginInvoke call</param>
            <param name="method">The method to be executed</param>
            <param name="args">arguments to be passed to the method</param>
            <returns>0 if everything is ok, -1 if the method threw an expected error</returns>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.QueryCpuUsage">
            <summary>
            If this property is set to true, the threadpool queries the
            current overall cpu load to determine whether to start additional
            threads that process the work items. <seealso cref="P:Jam.Shell.WorkerThreadPool.MaxWorkerThreads"/>.
            The default value for this setting is true.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.QueueLength">
            <summary>
            Returns the number of work items residing in the queue
            waiting to get processed by the next free thread.
            </summary>
            <seealso cref="P:Jam.Shell.WorkerThreadPool.WorkItemsCount"/>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.Paused">
            <summary>
            If this property is set to true the processing of new work items is paused,
            if it is set to false, processing is resumed. Getter and setter of this method are thread safe.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.Terminated">
            <summary>
            Returns true if processing was terminated via <see cref="M:Jam.Shell.WorkerThreadPool.TerminateProcessing"/> or
            <see cref="M:Jam.Shell.WorkerThreadPool.TerminateProcessing(System.Boolean)"/>. Is reset to false in a call to <see cref="M:Jam.Shell.WorkerThreadPool.StartProcessing"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxIdleTime">
            <summary>
            The maximum time a thread may be idle until it is removed
            from the pool if more that <see cref="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads"/> are available
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxBusyTime">
            <summary>
            The maximum time a thread may be busy until it is aborted.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxTimeUntilHardTerminate">
            <summary>
            Gets or sets the maximum time threads are given to finish when the ThreadPool is terminated before they are aborted.
            </summary>
            <value>
            The maximum time in milliseconds until hard terminate. Default 3000.
            </value>
        </member>
        <member name="E:Jam.Shell.WorkerThreadPool.AllWorkItemsDone">
            <summary>
            This event occurs if the threads finished processing all workitems,
            it happens from a different thread context. So do not perform gui operations
            directly.
            </summary>
        </member>
        <member name="E:Jam.Shell.WorkerThreadPool.NewWorkItemEvent">
            <summary>
            This event occurs if a new work item begins to process
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.WorkItemsCount">
            <summary>
            Returns the number of current work items.
            </summary>
            <seealso cref="P:Jam.Shell.WorkerThreadPool.QueueLength"/>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxCpuUsage">
            <summary>
            The maximum cpu usage in percent were spawning additional
            worker threads is allowed
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads">
            <summary>
            The minimum number of worker threads
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxWorkerThreads">
            <summary>
            The maximum number of worker threads the pool may allocate
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.UseLIFO">
            <summary>
            If set to False, the oldest work item in the queue will be used a next item. This is the default value.
            If set to True, the newest work item in the queue will be used as next work item.
            True can be a good setting if the number of work items is large and their order doesn't matter
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.InstanceUsesLIFO">
            <summary>
            Whether the threadpool returned by <see cref="P:Jam.Shell.WorkerThreadPool.Instance"/> uses LIFO,
            the default value is false
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.InstanceInitializesCOM">
            <summary>
            Whether the threadpool returned by <see cref="P:Jam.Shell.WorkerThreadPool.Instance"/> initializes
            to let the threads in the pool make use of COM objects.
            The default value is true.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.Instance">
            <summary>
            Get a lazy initialized singleton instance of <see cref="T:Jam.Shell.WorkerThreadPool"/> (thread-safe).
            Per default the Threadpool is prepared for usage with COM, see <see cref="P:Jam.Shell.WorkerThreadPool.InstanceInitializesCOM"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem">
            <summary>
            This class wraps a waitcallback to be compatible to the
            .net ThreadPool implementation.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object)">
            <summary>
            Standard constructor
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Int32)">
            <summary>
            Constructor that saves the given handle as Tag
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
            <param name="handle"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Int32,System.Int32)">
            <summary>
            Constructor that saves the given handle as Tag and waits the given time before the callback is executed.
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
            <param name="handle"></param>
            <param name="timeToWait"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.DoWork">
            <summary>
            Invokes the wait call back method.
            </summary>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool.ActionWorkItem`1">
            <summary>
            This class wraps an <see cref="T:System.Action`1"/> delegate to be able
            to perform an action on the thread.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.#ctor(System.Action{`0},`0)">
            <summary>
            Standard constructor
            </summary>
            <param name="action">An <see cref="T:System.Action`1"/> delegate</param>
            <param name="state">The state of this ActionWorkItem.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.#ctor(System.Action{`0},`0,System.String)">
            <summary>
            Standard constructor
            </summary>
            <param name="pAction">An <see cref="T:System.Action`1"/> delegate</param>
            <param name="pState">The state of this ActionWorkItem.</param>
            <param name="pNameTag">A string that is used when calling the ToString() method for debug purposes.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.DoWork">
            <summary>
            Invokes the wait call back method
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.ToString">
            <summary>
            Returns the name tag of the ActionWorkItem.
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.InvokeReturn.Ok">
            <summary>
            Invoke was called successfully
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.InvokeReturn.NoInvokeRequired">
            <summary>
            Invoke was not called because not required
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.InvokeReturn.InvalidState">
            <summary>
            Invoke not called because the object is already disposed or because no handle is created or if an exception was thrown while trying to invoke.
            </summary>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool.NestedSingleton">
            <summary>
            See http://www.yoda.arachsys.com/csharp/singleton.html
            </summary>
        </member>
        <member name="T:Jam.Shell.NewWorkItemEventArgs">
            <summary>
            Event arguments of e.g. <see cref="E:Jam.Shell.WorkerThreadPool.NewWorkItemEvent"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.NewWorkItemEventArgs.#ctor(Jam.Shell.IWorkItem)">
            <summary>
            Standard constructor
            </summary>
            <param name="workItem"></param>
        </member>
        <member name="P:Jam.Shell.NewWorkItemEventArgs.WorkItem">
            <summary>
            Returns a reference to the work item.
            </summary>
        </member>
        <member name="T:Jam.Shell.PROCESSENTRY32">
            <summary>
            Structure keeping information on the process info
            </summary>
        </member>
        <member name="T:Jam.Shell.ProcessTimes">
            <summary>
            This structure keeps track of particular process times
            </summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.CreationTime">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.ExitTime">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.KernelTime">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.UserTime">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawCreationTime">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawExitTime">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawKernelTime">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawUserTime">
            <summary></summary>
        </member>
        <member name="M:Jam.Shell.ProcessTimes.ConvertTime">
            <summary>
            Converts the file times from the creation times
            </summary>
        </member>
        <member name="T:Jam.Shell.ProcessData">
            <summary>
            This class keeps track of particular process information
            </summary>
        </member>
        <member name="M:Jam.Shell.ProcessData.#ctor(System.UInt32,System.String,System.Int64,System.Int64)">
            <summary>
            Standard constructor
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="oldUserTime"></param>
            <param name="oldKernelTime"></param>
        </member>
        <member name="M:Jam.Shell.ProcessData.UpdateCpuUsage(System.Int64,System.Int64)">
            <summary>
            Updates the the processor times for the particular process
            </summary>
            <param name="newUserTime"></param>
            <param name="newKernelTime"></param>
            <returns>the usage in percent</returns>
        </member>
        <member name="P:Jam.Shell.ProcessData.ID">
            <summary>
            Returns the process id
            </summary>
        </member>
        <member name="P:Jam.Shell.ProcessData.Name">
            <summary>
            Returns the name of the process
            </summary>
        </member>
        <member name="T:Jam.Shell.CpuUsage">
            <summary>
            Determines cpu idle time on the machine
            </summary>
        </member>
        <member name="F:Jam.Shell.CpuUsage.c_MinimumElapsedMS">
            <summary>
            The minimum time that needs to elapse until a new usage value is calculated
            </summary>
        </member>
        <member name="M:Jam.Shell.CpuUsage.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:Jam.Shell.CpuUsage.ProcessExists(System.UInt32)">
            <summary>
            Returns the process data if existent in the list
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.CpuUsage.GetIdlePercentage">
            <summary>
            Determines the cpu idle time of the machine
            </summary>
            <returns>cpu idle in between 0% and 100% free </returns>
        </member>
        <member name="T:Jam.Shell.ThumbnailImage">
            <summary>
            Use this component to display a thumbnail image of a file or folder. The same thumbnail image that the Windows Explorer uses will be shown. 
            The Windows Shell does not supply a thumbnail image for all objects. You may either set the Path property to set a path to a file or folder 
            for which the thumbnail image should be displayed. Or you may synchronize it to a <see cref="T:Jam.Shell.ShellListView"/> or <see cref="T:Jam.Shell.ShellTreeView"/> 
            component using the <see cref="P:Jam.Shell.ThumbnailImage.ShellControlConnector"/> property.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnThumnbailLoaded(System.EventArgs)">
            <summary>
            Calls the ThumbnailLoaded event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ThumbnailImage"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.ClearImage">
            <summary>
            Clear the current Image.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Queries the ThumbnailImage if the control gets visible
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnPictureBoxClick(System.Object,System.EventArgs)">
            <summary>
            Fire the OnClick event of the panel, when the same event gets fired for the PictureBox.
            </summary>
            <param name="sender">Contains information about the object, which fired the event.</param>
            <param name="e">Contains general event data.</param> 
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnPictureDoubleClick(System.Object,System.EventArgs)">
            <summary>
            Fire the OnDoubleClick event of the panel, when the same event gets fired for the PictureBox.
            </summary>
            <param name="sender">Contains information about the object, which fired the event.</param>
            <param name="e">Contains general event data.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnResize(System.EventArgs)">
            <summary>
            The Resize event must be overridden, because the PictureBox class has no Align property.
            </summary>
            <param name="e">the event data</param>        
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
            <remarks>In this class this method does nothing.</remarks>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active file should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the newly selected file.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.FullRefresh">
            <summary>
            Reloads the thumbnail image.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.SmartRefresh">
            <summary>
            Implements <see cref="T:Jam.Shell.IShellControl"/>IShellControl.SmartRefresh.
            Internally calls <see cref="M:Jam.Shell.ThumbnailImage.FullRefresh"/>FullRefresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.GoUp">
            <summary>
            Implements <see cref="T:Jam.Shell.IShellControl"/>IShellControl.GoUp.
            </summary>
            <returns>Returns false always</returns>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.GetThumbnailImage">
            <summary>
            This method starts generating a thumbnail asynchronously
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.GetThumbnailCallback(System.Drawing.Image,System.Drawing.Bitmap,System.Object)">
            <summary>
            This method is called when the thumbnail image is rendered completely
            </summary>
            <param name="b">The bitmap of the thumbnail image</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
            <param name="State">Not used.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Path">
            <summary>
            The Path property contains the full path of the file or folder which thumbnail image is currently displayed. Assign a value to this property to display a different thumbnail image.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ShowErrorMessages">
            <summary>
            If set to true the ThumbnailImage component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Enabled">
            <summary>
            Indicates whether the control is enabled.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Image">
            <summary>
            Readonly property, which contains the currently shown thumbnail image.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ShellControlConnector">
            <summary>
            Use this property to connect this component to a ShellControlConnector. All shell controls connected to the same ShellControlConnector will automatically synchronize the information they display. That means if a user selects a file in a ShellListView, the ThumbnailImage will automatically display the thumbnail image of the selected object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.IconsAsThumnbnails">
            <summary>
            If set to true (default) the component uses icons if the shown file system element does not supply a thumbnail.
            Set false if only thumbnails are to be used.
            </summary>
        </member>
        <member name="E:Jam.Shell.ThumbnailImage.ThumbnailLoaded">
            <summary>
            Event is thrown when the control has finished loading the image.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ImageWidth">
            <summary>
            Returns the width that is used for the image.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ImageHeight">
            Returns the height that is used for the image.
        </member>
        <member name="E:Jam.Shell.ThumbnailImage.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.ThumbnailImage.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.ThumbnailImage.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
    </members>
</doc>
